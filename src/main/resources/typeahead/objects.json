{
  "objects": {
    "collections": [
      {
        "id": "fl",
        "createdAt": "2019-09-11T16:29:02.468Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl-full-index_20200715_133122",
          "numShards": 4,
          "replicationFactor": 1
        },
        "type": "DATA",
        "metadata": {}
      },
      {
        "id": "fl-full-index",
        "createdAt": "2020-04-17T17:36:21.555Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl-full-index",
          "numShards": 1,
          "replicationFactor": 8
        },
        "type": "DATA",
        "metadata": {}
      },
      {
        "id": "fl-full-index_signals",
        "createdAt": "2020-05-01T20:50:52.682Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl-full-index_signals",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1,
          "configTemplate": "solr/conf/insights.zip"
        },
        "type": "SIGNALS",
        "relatedCollectionId": "fl-full-index",
        "metadata": {}
      },
      {
        "id": "fl-full-index_signals_aggr",
        "createdAt": "2020-05-01T20:50:58.900Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl-full-index_signals_aggr",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1
        },
        "type": "SIGNALS_AGGREGATION",
        "relatedCollectionId": "fl-full-index",
        "metadata": {}
      },
      {
        "id": "fl_signals",
        "createdAt": "2019-09-11T16:29:14.217Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl_signals",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1,
          "configTemplate": "solr/conf/insights.zip"
        },
        "type": "SIGNALS",
        "relatedCollectionId": "fl",
        "metadata": {}
      },
      {
        "id": "fl_signals_aggr",
        "createdAt": "2019-09-11T16:29:20.255Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl_signals_aggr",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1
        },
        "type": "SIGNALS_AGGREGATION",
        "relatedCollectionId": "fl",
        "metadata": {}
      },
      {
        "id": "fl_typeahead",
        "createdAt": "2019-09-11T16:29:43.639Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl_typeahead",
          "numShards": 4,
          "replicationFactor": 1
        },
        "type": "DATA",
        "metadata": {}
      },
      {
        "id": "fl_typeahead_signals",
        "createdAt": "2019-09-11T16:29:52.047Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl_typeahead_signals",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1,
          "configTemplate": "solr/conf/insights.zip"
        },
        "type": "SIGNALS",
        "relatedCollectionId": "fl_typeahead",
        "metadata": {}
      },
      {
        "id": "fl_typeahead_signals_aggr",
        "createdAt": "2019-09-11T16:29:58.215Z",
        "searchClusterId": "default",
        "commitWithin": 10000,
        "solrParams": {
          "name": "fl_typeahead_signals_aggr",
          "numShards": 1,
          "replicationFactor": 2,
          "maxShardsPerNode": 1
        },
        "type": "SIGNALS_AGGREGATION",
        "relatedCollectionId": "fl_typeahead",
        "metadata": {}
      }
    ],
    "indexPipelines": [
      {
        "id": "_system",
        "stages": [
          {
            "type": "solr-index",
            "id": "6c37e6ec-ee51-45ca-a3a3-2c5afdc48c0e",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "6c37e6ec-ee51-45ca-a3a3-2c5afdc48c0e"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "_system"
        }
      },
      {
        "id": "banners-products-index",
        "stages": [
          {
            "type": "field-mapping",
            "id": "1cce613b-3b5d-49cb-93e0-d39b03db1f9e",
            "mappings": [
              {
                "source": "Product_Web_Key",
                "target": "id",
                "operation": "copy"
              },
              {
                "source": "Product_Web_Key",
                "target": "product_web_key_s",
                "operation": "move"
              },
              {
                "source": "Brand",
                "target": "Brand_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Brand",
                "target": "Brand_sortabletext",
                "operation": "copy"
              },
              {
                "source": "Brand",
                "target": "Brand_s",
                "operation": "move"
              },
              {
                "source": "Gender",
                "target": "Gender_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Gender",
                "target": "Gender_pl",
                "operation": "copy"
              },
              {
                "source": "Gender",
                "target": "Gender_s",
                "operation": "move"
              },
              {
                "source": "Product_Type",
                "target": "Product_Type_txt_en",
                "operation": "copy"
              },
              {
                "source": "Product_Type",
                "target": "Product_Type_s",
                "operation": "move"
              },
              {
                "source": "Product_Style_Type",
                "target": "Product_Style_txt_en",
                "operation": "copy"
              },
              {
                "source": "Product_Style_Type",
                "target": "Product_Style_ss",
                "operation": "move"
              },
              {
                "source": "Product_Sub_Styles",
                "target": "Product_Sub_Styles_ss",
                "operation": "move"
              },
              {
                "source": "Sport_Name",
                "target": "Sport_Name_txt_en",
                "operation": "copy"
              },
              {
                "source": "Sport_Name",
                "target": "Sport_Name_ss",
                "operation": "move"
              },
              {
                "source": "Available_Inventory",
                "target": "availableinventory_b",
                "operation": "move"
              },
              {
                "source": "Style_Description",
                "target": "Style_Description_s",
                "operation": "copy"
              },
              {
                "source": "Style_Description",
                "target": "Style_Description_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Style_Description",
                "target": "description_txt_en_split",
                "operation": "move"
              },
              {
                "source": "Model_Description",
                "target": "Model_Description_s",
                "operation": "copy"
              },
              {
                "source": "Model_Description",
                "target": "Model_Description_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Model_Description",
                "target": "description_txt_en_split",
                "operation": "move"
              },
              {
                "source": "Discount_Percent",
                "target": "discount_percent_f",
                "operation": "move"
              },
              {
                "source": "Model_Number",
                "target": "model_number_s",
                "operation": "move"
              },
              {
                "source": "Model_Name",
                "target": "name_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Model_Name",
                "target": "name_s",
                "operation": "copy"
              },
              {
                "source": "Model_Name",
                "target": "name_sortabletext",
                "operation": "copy"
              },
              {
                "source": "Model_Name",
                "target": "name",
                "operation": "move"
              },
              {
                "source": "Style_Original_Price",
                "target": "price_style_original_price_f",
                "operation": "move"
              },
              {
                "source": "Style_Sale_Price",
                "target": "price_style_sale_price_f",
                "operation": "move"
              },
              {
                "source": "Size_Original_Price",
                "target": "price_size_original_price_f",
                "operation": "move"
              },
              {
                "source": "Size_Sale_Price",
                "target": "price_size_sale_price_f",
                "operation": "move"
              },
              {
                "source": "Product_Number",
                "target": "productnumber_s",
                "operation": "move"
              },
              {
                "source": "SKU",
                "target": "sku_s",
                "operation": "move"
              },
              {
                "source": "Product_Size",
                "target": "product_size_s",
                "operation": "move"
              },
              {
                "source": "Style_Color",
                "target": "color_txt",
                "operation": "copy"
              },
              {
                "source": "Style_Color",
                "target": "style_s",
                "operation": "move"
              },
              {
                "source": "Secondary_Color",
                "target": "color_txt",
                "operation": "move"
              },
              {
                "source": "Primary_Color",
                "target": "color_txt",
                "operation": "copy"
              },
              {
                "source": "Primary_Color",
                "target": "Color_s",
                "operation": "move"
              },
              {
                "source": "Style_Keyword",
                "target": "Style_keyword_s",
                "operation": "move"
              },
              {
                "source": "Model_Keyword",
                "target": "Model_keyword_s",
                "operation": "move"
              },
              {
                "source": "League_Name",
                "target": "leaguename_txt",
                "operation": "copy"
              },
              {
                "source": "League_Name",
                "target": "leaguename_s",
                "operation": "move"
              },
              {
                "source": "Team_Name",
                "target": "teamname_txt",
                "operation": "copy"
              },
              {
                "source": "Team_Name",
                "target": "teamname_s",
                "operation": "move"
              },
              {
                "source": "Player_Name",
                "target": "playername_txt",
                "operation": "copy"
              },
              {
                "source": "Player_Name",
                "target": "playername_s",
                "operation": "move"
              },
              {
                "source": "New_Arrival_Date",
                "target": "newarrivaldate_dt",
                "operation": "move"
              },
              {
                "source": "Free_Shipping",
                "target": "freeshipping_b",
                "operation": "copy"
              },
              {
                "source": "Width",
                "target": "width_s",
                "operation": "move"
              },
              {
                "source": "MAP_Enabled",
                "target": "mapenabled_b",
                "operation": "move"
              },
              {
                "source": "Launch_Product",
                "target": "launchproduct_b",
                "operation": "move"
              },
              {
                "source": "Launch_Date",
                "target": "launchdate_dt",
                "operation": "move"
              },
              {
                "source": "Size_Available_In_Store",
                "target": "availableinstore_b",
                "operation": "move"
              },
              {
                "source": "Free_Shipping",
                "target": "freeshipping_s",
                "operation": "move"
              },
              {
                "source": "Top_Sales_Amount",
                "target": "top_sales_amount_f",
                "operation": "move"
              },
              {
                "source": "PDP_Activation_Date",
                "target": "pdp_activation_date_dt",
                "operation": "move"
              },
              {
                "source": "Category_Codes",
                "target": "Category_Codes_txt",
                "operation": "move"
              },
              {
                "source": "Style_Variants",
                "target": "Style_Variants_s",
                "operation": "move"
              },
              {
                "source": "Delta_Flag",
                "target": "Delta_Flag_i",
                "operation": "move"
              },
              {
                "source": "Banner",
                "target": "banner_s",
                "operation": "move"
              },
              {
                "source": "Delta_Timestamp",
                "target": "Delta_Timestamp_dt",
                "operation": "move"
              },
              {
                "source": "Product_Style_L4",
                "target": "Product_Style_L4_pl",
                "operation": "move"
              },
              {
                "source": "Brand_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Gender_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL1_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL2_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL3_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL4_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL5_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Sport_Name_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              }
            ],
            "unmapped": {
              "source": ".*",
              "operation": "delete"
            },
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Initial Field Mappings",
            "licensed": true,
            "secretSourceStageId": "1cce613b-3b5d-49cb-93e0-d39b03db1f9e"
          },
          {
            "type": "field-mapping",
            "id": "7d",
            "mappings": [
              {
                "source": "Style_Description_s",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "name",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "Brand_s",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "Gender_s",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "Product_Type_s",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "secondarycolor_txt_en",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "primarycolor_txt_en",
                "target": "retry_phon_txt_en_ss",
                "operation": "copy"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Cross Fields Mapping",
            "licensed": true,
            "secretSourceStageId": "7d"
          },
          {
            "type": "field-mapping",
            "id": "52",
            "mappings": [
              {
                "source": "width_s",
                "target": "width_txt",
                "operation": "copy"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Field Mapping - Width",
            "condition": "//false by default, true for specific banners\nfunction(doc)\n{\n  var returnState = false;\n  if (doc.getId()!==null && doc.hasField('banner_s'))\n  {\n    var banner = doc.getFirstFieldValue(\"banner_s\");\n    switch(banner) {\n      case \"Eastbay\":\n        returnState = true;\n        break;\n      case \"Footlocker\":\n        returnState = true;\n        break;\n      case \"Champs\":\n        returnState = true;\n        break;\n      case \"Footaction\":\n        returnState = true;\n        break;\n      case \"FinalScore\":\n        returnState = true;\n        break;\n      case \"FLCA\":\n        returnState = true;\n        break;\n    }\n  }\n  return returnState;\n}",
            "licensed": true,
            "secretSourceStageId": "52"
          },
          {
            "type": "javascript-index",
            "id": "5ld",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    var Jsoup = Java.type('org.jsoup.Jsoup');\n    var htmlPossibleFields = [\"Model_Description_txt_en_split\",\"Model_Description_s\",\"Style_Description_s\",\"Style_Description_txt_en_split\",\"name_txt_en_split\"];\n    for each(var field in htmlPossibleFields){\n      if(doc.hasField(field)){\n        doc.setField(field, Jsoup.parse(doc.getFirstFieldValue(field)).text());\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "HTML Cleanup",
            "licensed": true,
            "secretSourceStageId": "5ld"
          },
          {
            "type": "field-mapping",
            "id": "432280c6-8aac-4316-a4a5-92fd4f58911c",
            "mappings": [
              {
                "source": "Brand_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Gender_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL1_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL2_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL3_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL4_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Product_Category_Hrch_LVL5_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              },
              {
                "source": "Sport_Name_Code",
                "target": "Category_Codes_ss",
                "operation": "move"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": true,
            "label": "Category Codes Mapping",
            "licensed": true,
            "secretSourceStageId": "432280c6-8aac-4316-a4a5-92fd4f58911c"
          },
          {
            "type": "logging-message",
            "id": "zfb",
            "from": "Fusion Index Pipeline",
            "to": [
              "siteops"
            ],
            "messageSubjectTemplate": "Product Drop Message",
            "messageBodyTemplate": "Dropping Document <doc.id> for the banner <doc.banner_s>, as it is <doc.Brand_s> branded product",
            "storeInContext": false,
            "responseKey": "messageResponse",
            "errorKey": "messageResponseFailure",
            "logLevel": "warn",
            "type": "logging-message",
            "skip": false,
            "label": "Log UPS Product Being Dropped",
            "condition": "doc.getId() != null && doc.hasField('Brand_s') && doc.getFirstFieldValue('Brand_s').search('UPS') > -1",
            "supportedType": "log",
            "licensed": true,
            "secretSourceStageId": "zfb"
          },
          {
            "type": "exclude-doc",
            "id": "25c",
            "matchRules": [
              {
                "field": "Brand_s",
                "pattern": "(UPS)"
              }
            ],
            "type": "exclude-doc",
            "skip": false,
            "label": "Drop UPS Products",
            "licensed": true,
            "secretSourceStageId": "25c"
          },
          {
            "type": "logging-message",
            "id": "va8",
            "from": "Fusion Index Pipeline",
            "to": [
              "siteops"
            ],
            "messageSubjectTemplate": "Product Drop Message",
            "messageBodyTemplate": "Dropping Document <doc.id> for the banner <doc.banner_s>,as it is $<doc.price_style_sale_price_f> product",
            "storeInContext": false,
            "responseKey": "messageResponse",
            "errorKey": "messageResponseFailure",
            "logLevel": "warn",
            "type": "logging-message",
            "skip": false,
            "label": "Log $0 Products Being dropped",
            "condition": "doc.getId() != null && doc.hasField('price_style_sale_price_f') && doc.getFirstFieldValue('price_style_sale_price_f') == 0",
            "supportedType": "log",
            "licensed": true,
            "secretSourceStageId": "va8"
          },
          {
            "type": "exclude-doc",
            "id": "ppq",
            "matchRules": [
              {
                "field": "price_style_sale_price_f",
                "pattern": "0"
              }
            ],
            "type": "exclude-doc",
            "skip": false,
            "label": "Drop $0 products",
            "licensed": true,
            "secretSourceStageId": "ppq"
          },
          {
            "type": "logging-message",
            "id": "2jp",
            "from": "Index Pipeline",
            "to": [
              "siteops"
            ],
            "messageSubjectTemplate": "Product Drop Message",
            "messageBodyTemplate": "Dropping Document <doc.id> for the banner <doc.banner_s>, as it is <doc.Product_Style_txt_en> product",
            "storeInContext": false,
            "responseKey": "messageResponse",
            "errorKey": "messageResponseFailure",
            "logLevel": "warn",
            "type": "logging-message",
            "skip": true,
            "label": "Log Giftcards/Return Label Products Being dropped",
            "condition": "doc.getId() != null && doc.hasField('Product_Style_txt_en') && (doc.getFieldValues('Product_Style_txt_en').contains('GiftCards') || doc.getFieldValues('Product_Style_txt_en').contains('Return Labels'))",
            "supportedType": "log",
            "licensed": true,
            "secretSourceStageId": "2jp"
          },
          {
            "type": "exclude-doc",
            "id": "1m8",
            "matchRules": [
              {
                "field": "Product_Style_txt_en",
                "pattern": "(Return Labels)"
              }
            ],
            "type": "exclude-doc",
            "skip": false,
            "label": "Drop Return Label and Gift Cards Products",
            "licensed": true,
            "secretSourceStageId": "1m8"
          },
          {
            "type": "javascript-index",
            "id": "el",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    if (doc.hasField(\"Style_Variants_s\"))\n    {\n      var styleVariants = doc.getFirstFieldValue(\"Style_Variants_s\");\n      for each (var styleVariant in styleVariants.split(\",\")) {\n        doc.addField(\"Style_Variants_ss\", styleVariant);\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Split Style Variants",
            "licensed": true,
            "secretSourceStageId": "el"
          },
          {
            "type": "javascript-index",
            "id": "ll",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    if (doc.hasField(\"Product_Style_ss\"))\n    {\n      var styles = doc.getFirstFieldValue(\"Product_Style_ss\");\n      doc.setField(\"Product_Style_ss\", \"\");\n      for each (var s in styles.split(\",\")) {\n        doc.addField(\"Product_Style_ss\", s);\n      }\n    }\n    if (doc.hasField(\"Product_Sub_Styles_ss\"))\n    {\n      var subStyles = doc.getFirstFieldValue(\"Product_Sub_Styles_ss\");\n      doc.setField(\"Product_Sub_Styles_ss\", \"\");\n      for each (var s in subStyles.split(\",\")) {\n        doc.addField(\"Product_Sub_Styles_ss\", s);\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Split Product Styles",
            "licensed": true,
            "secretSourceStageId": "ll"
          },
          {
            "type": "javascript-index",
            "id": "7rp",
            "script": "function(doc){\n    if (doc.getId()!==null){\n      if (doc.hasField(\"Product_Style_L4_pl\")){\n        var l4Styles = doc.getFirstFieldValue(\"Product_Style_L4_pl\");\n        for each (var s in l4Styles.split(\",\")) {\n\t    \tdoc.addField(\"Product_Style_L4_ss\", s); \n        }\n      }\n    }\n\treturn doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Split L4 Product Styles",
            "condition": "//false by default except for specific banners\nfunction(doc)\n{\n  var returnState = false;\n  if (doc.getId()!==null && doc.hasField('banner_s'))\n  {\n    var banner = doc.getFirstFieldValue(\"banner_s\");\n    switch(banner) {\n      case \"Eastbay\":\n        returnState = true;\n        break;\n      case \"Footlocker\":\n        returnState = true;\n        break;\n      case \"Champs\":\n        returnState = true;\n        break;\n      case \"Footaction\":\n        returnState = true;\n        break;\n      case \"FinalScore\":\n        returnState = true;\n        break;\n      case \"FLCA\":\n        returnState = true;\n        break;\n    }\n  }\n  return returnState;\n}",
            "licensed": true,
            "secretSourceStageId": "7rp"
          },
          {
            "type": "regex-extractor",
            "id": "7zs",
            "rules": [
              {
                "source": [
                  "product_size_s"
                ],
                "target": "SizeNumeric_s",
                "writeMode": "overwrite",
                "pattern": "^([^LMSXY]*)$",
                "returnIfNoMatch": "null",
                "group": 1
              },
              {
                "source": [
                  "product_size_s"
                ],
                "target": "SizeLetter_s",
                "writeMode": "overwrite",
                "pattern": "^([LMSXY|[1-9]T]*)$",
                "returnIfNoMatch": "null",
                "group": 1
              },
              {
                "source": [
                  "product_size_s"
                ],
                "target": "product_size_f",
                "writeMode": "overwrite",
                "pattern": "^(\\d+)(\\.(\\d)+)?$",
                "returnIfNoMatch": "null",
                "group": 1
              }
            ],
            "type": "regex-extractor",
            "skip": false,
            "label": "Size Seperation",
            "licensed": true,
            "secretSourceStageId": "7zs"
          },
          {
            "type": "javascript-index",
            "id": "jgb",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    if (doc.hasField(\"Sport_Name_ss\"))\n    {\n      var sports = doc.getFirstFieldValue(\"Sport_Name_ss\");\n      //doc.setField(\"Sport_Name_ss\", \"\");\n      for each (var sport in sports.split(\",\")) {\n        doc.addField(\"Sport_Name_s\", sport);\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Split Sports Activities",
            "licensed": true,
            "secretSourceStageId": "jgb"
          },
          {
            "type": "find-replace",
            "id": "yqv",
            "findListReplaceRules": [],
            "findReplaceRules": [
              {
                "sourceField": "Sport_Name_s",
                "caseSensitive": false,
                "keyValues": [
                  {
                    "key": "Cardio",
                    "value": "Training & Fitness"
                  },
                  {
                    "key": "Dance",
                    "value": "Training & Fitness"
                  },
                  {
                    "key": "Training",
                    "value": "Training & Fitness"
                  },
                  {
                    "key": "Yoga",
                    "value": "Training & Fitness"
                  },
                  {
                    "key": "Yoga & Pilates",
                    "value": "Training & Fitness"
                  },
                  {
                    "key": "Strength/Weight Training",
                    "value": "Strength & Weight Training"
                  }
                ]
              }
            ],
            "type": "find-replace",
            "skip": false,
            "label": "Remap Sports Values",
            "licensed": true,
            "secretSourceStageId": "yqv"
          },
          {
            "type": "javascript-index",
            "id": "cf",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    var shipping = doc.getFirstFieldValue(\"freeshipping_b\");\n    doc.setField(\"freeshipping_s\", shipping);\n    if(shipping.toUpperCase() === \"FALSE\" ) {\n      doc.setField(\"freeshipping_b\",\"\");\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Process Shipping Flag",
            "licensed": true,
            "secretSourceStageId": "cf"
          },
          {
            "type": "javascript-index",
            "id": "v88",
            "script": "function(doc) {\n  /*\n   * This function was created originally for the KFL app and sets some values\n   * used to create the Age_s and extraGender_s fields in \"Trim Gender and Add Age\".\n   */\n  if (doc.getId()!==null) {\n    if (!doc.hasField(\"Gender_s\")) {\n      // There was no gender field on this document, apply it to all genders\n      doc.addField(\"Gender_s\", \"boymangirlwoman\");\n    } else {\n      var gender = doc.getFirstFieldValue(\"Gender_s\");\n \n      if (!gender || 0 === gender.length || /^\\s*$/.test(gender)) {\n        // Gender_s is blank, null or undefined, set as for all genders\n         doc.setField(\"Gender_s\", \"boymangirlwoman\");\n      } else {\n        if (gender == \"Grade School\") {\n          doc.setField(\"Gender_s\", \"boygirl Grade School\");\n        } else if (gender == \"Youth\") {\n          // Youth maps to Grade School\n          doc.setField(\"Gender_s\", \"boygirl Grade School\");\n        } else if (gender == \"Infant\") {\n          doc.setField(\"Gender_s\", \"boygirl Infant\");\n        } else if (gender == \"Toddler\") {\n          doc.setField(\"Gender_s\", \"boygirl Toddler\");\n        } else if (gender == \"Preschool\") {\n          doc.setField(\"Gender_s\", \"boygirl Preschool\");\n        } else if (gender == \"Adult\") {\n          doc.setField(\"Gender_s\", \"manwoman\");\n        } else if (gender.indexOf(\"For Everyone\") > -1) {\n          doc.setField(\"Gender_s\", \"boymangirlwoman\");\n        } else if (gender.indexOf(\"Unisex\") > -1) {\n          doc.setField(\"Gender_s\", \"boymangirlwoman\");\n        }\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "No Gender Fix",
            "licensed": true,
            "secretSourceStageId": "v88"
          },
          {
            "type": "regex-extractor",
            "id": "1gf",
            "rules": [
              {
                "source": [
                  "Gender_s"
                ],
                "target": "Age_s",
                "writeMode": "overwrite",
                "pattern": "^(.*?)[\\s](.*?)$",
                "returnIfNoMatch": "null",
                "noMatchValue": "",
                "group": 2
              },
              {
                "source": [
                  "Gender_s"
                ],
                "target": "extraGender_s",
                "writeMode": "overwrite",
                "pattern": "^(boygirl|manwoman|boymangirlwoman)",
                "returnIfNoMatch": "null",
                "noMatchValue": "",
                "group": 1
              },
              {
                "source": [
                  "Gender_s"
                ],
                "target": "Gender_s",
                "writeMode": "overwrite",
                "pattern": "^(Boys|Girls)",
                "returnIfNoMatch": "null",
                "group": 1
              }
            ],
            "type": "regex-extractor",
            "skip": false,
            "label": "Trim Gender and Add Age",
            "licensed": true,
            "secretSourceStageId": "1gf"
          },
          {
            "type": "javascript-index",
            "id": "ly8",
            "script": "function (doc) {\n  /*\n   * This function picks up where \"No Gender Fix\" and \"Trim Gender and Add Age\" leave off and process\n   * Gender values for all other apps besides lfl/kfl\n   */\n  if (doc.getId()!=null) {\n    var BOYS_VALUE = \"Boys'\";\n    var GIRLS_VALUE = \"Girls'\";\n    var MENS_VALUE = \"Men's\";\n    var WOMENS_VALUE = \"Women's\";\n     \n    if (!doc.hasField(\"Gender_pl\")) {\n      // There was no gender field on this document, apply it to all genders\n      doc.addField(\"Gender_s\", MENS_VALUE);\n      doc.addField(\"Gender_s\", WOMENS_VALUE);\n      doc.addField(\"Gender_s\", BOYS_VALUE);\n      doc.addField(\"Gender_s\", GIRLS_VALUE);\n    } else {\n      var gender = doc.getFirstFieldValue(\"Gender_pl\");\n \n      // Clear out Gender_s which may have been populated by by a previous stage\n      doc.removeFields(\"Gender_s\");\n \n      if (!gender || 0 === gender.length || /^\\s*$/.test(gender)) {\n        // The gender field was undefined, null, or blank, apply it to alll genders\n        doc.addField(\"Gender_s\", MENS_VALUE);\n        doc.addField(\"Gender_s\", WOMENS_VALUE);\n        doc.addField(\"Gender_s\", BOYS_VALUE);\n        doc.addField(\"Gender_s\", GIRLS_VALUE);\n      } else {\n        // The gender field has a value, processing...\n \n        // Deal with non exact Gender values that contains Boys + Age or Girls + Age.\n        if (gender.startsWith(\"Boy\")) {\n          doc.addField(\"Gender_s\", BOYS_VALUE);\n        } else if (gender.startsWith(\"Girl\")) {\n          doc.addField(\"Gender_s\", GIRLS_VALUE);\n        } else {\n          // Deal with exact values\n          switch (gender) {\n            case \"Men's\":\n            case \"Women's\":\n              doc.addField(\"Gender_s\", gender);\n              break;\n \n            case \"Infant\":\n            case \"Toddler\":\n            case \"Preschool\":\n            case \"Grade School\":\n            case \"Youth\":\n              doc.addField(\"Gender_s\", BOYS_VALUE);\n              doc.addField(\"Gender_s\", GIRLS_VALUE);\n              break;\n \n            case \"Adult\":\n              doc.addField(\"Gender_s\", MENS_VALUE);\n              doc.addField(\"Gender_s\", WOMENS_VALUE);\n              break;\n \n            case \"Unisex\":\n            case \"For Everyone\":\n              doc.addField(\"Gender_s\", MENS_VALUE);\n              doc.addField(\"Gender_s\", WOMENS_VALUE);\n              doc.addField(\"Gender_s\", BOYS_VALUE);\n              doc.addField(\"Gender_s\", GIRLS_VALUE);\n              break;\n          }\n        }\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Process Gender",
            "condition": "//default of false except for specific banners\nfunction(doc)\n{\n  var returnState = false;\n  if (doc.getId()!==null && doc.hasField('banner_s'))\n  {\n    var banner = doc.getFirstFieldValue(\"banner_s\");\n    switch(banner) {\n      case \"Eastbay\":\n        returnState = true;\n        break;\n      case \"Footlocker\":\n        returnState = true;\n        break;\n      case \"Champs\":\n        returnState = true;\n        break;\n      case \"Footaction\":\n        returnState = true;\n        break;\n      case \"FinalScore\":\n        returnState = true;\n        break;\n      case \"FLCA\":\n        returnState = true;\n        break;\n    }\n  }\n  return returnState;\n}",
            "licensed": true,
            "secretSourceStageId": "ly8"
          },
          {
            "type": "javascript-index",
            "id": "nr5",
            "script": "function(doc) {\n    var fieldMap = doc.getFields();\n    var HashMap = Java.type(\"java.util.HashMap\")\n    var mapOfFieldsToRemove = new HashMap();\n\n    //iterate through doc fields\n    for each(var entry in fieldMap.entrySet()) {\n        var nonEmptyPipelineFields = [];\n        var arrayOfPipelineFields = entry.getValue();\n        for each(var pipelineField in arrayOfPipelineFields) {\n            var pipelineFieldValue = pipelineField.getValue();\n            if (pipelineFieldValue.getClass().getName() == \"java.lang.String\") {\n                pipelineFieldValue = pipelineFieldValue.trim();\n                //if value is not an empty string, store it in our nonEmptyPipelineFields \n                if (!pipelineFieldValue.length == 0) {\n                    pipelineField.setValue(pipelineFieldValue);\n                    nonEmptyPipelineFields.push(pipelineField);\n                }\n            } else {\n                nonEmptyPipelineFields.push(pipelineField);\n            }\n\n\n        }\n\n        //if we compare nonEmptyPipelineFields and original arrayOfPipelineFields, and they differ\n        //then we know we found a field with an empty value that we need to remove.  store it in our map\n        //mapOfFieldsToRemove\n        if (arrayOfPipelineFields.length != nonEmptyPipelineFields.length) {\n            mapOfFieldsToRemove.put(entry.getKey(), nonEmptyPipelineFields);\n        }\n    }\n\n    //perform update/removal of fields by iterating through mapOfFieldsToRemove\n    for each(var forRemovalEntry in mapOfFieldsToRemove.entrySet()) {\n        var key = forRemovalEntry.getKey();\n        var newArrayOfValues = forRemovalEntry.getValue();\n\n        if (newArrayOfValues.length == 0) {\n            //all of the values were empty, we should just remove the field entirely.\n            doc.removeFields(key);\n        } else {\n            //it was a multi value field where we found an empty value\n            //and there are still remaining non empty values\n            doc.removeFields(key);\n            doc.addFields(newArrayOfValues);\n        }\n    }\n\n    return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Remove Empty Values",
            "condition": "",
            "licensed": true,
            "secretSourceStageId": "nr5"
          },
          {
            "type": "javascript-index",
            "id": "m7g",
            "script": "function(doc) { \n  if (doc.getId() != null) { \n\t//doc.setField(\"banner_s\", \"KidsFootLocker\");\n    var originalPrice = doc.getFirstFieldValue(\"price_style_original_price_f\");  \n    var salePrice = doc.getFirstFieldValue(\"price_style_sale_price_f\"); \n    if (salePrice !== null && originalPrice !== null && originalPrice > salePrice)\n    {\n      var pctOff = (((originalPrice - salePrice)/originalPrice) * 100);\n      doc.setField(\"pctOff_i\", pctOff);\n      if (pctOff >= 10) {\n    \tdoc.setField(\"onSale_b\", true);\n        doc.setField(\"onSale_s\", \"SALE\");\n      }\n    }\n  }\n    \n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Add On-Sale",
            "licensed": true,
            "secretSourceStageId": "m7g"
          },
          {
            "type": "regex-replacement",
            "id": "ifk",
            "rules": [
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(Black|All Black)",
                "returnIfNoMatch": "input_string",
                "replacement": "Black",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(Aqua|Blue|Light Blue|Navy)",
                "returnIfNoMatch": "input_string",
                "replacement": "Blue",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(Dark Green|Green|Light Green|Olive Green)",
                "returnIfNoMatch": "input_string",
                "replacement": "Green",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(Brown|Tan)",
                "returnIfNoMatch": "input_string",
                "replacement": "Brown",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(Cardinal|Maroon|Red)",
                "returnIfNoMatch": "input_string",
                "replacement": "Red",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "Color_s"
                ],
                "target": "Color_s",
                "writeMode": "overwrite",
                "pattern": "(White|All White|Off White|Off-White)",
                "returnIfNoMatch": "input_string",
                "replacement": "White",
                "replaceWhich": "all"
              }
            ],
            "type": "regex-replacement",
            "skip": false,
            "label": "Map Color Shade to Primary Color",
            "licensed": true,
            "secretSourceStageId": "ifk"
          },
          {
            "type": "find-replace",
            "id": "nn",
            "findListReplaceRules": [],
            "findReplaceRules": [
              {
                "sourceField": "Product_Style_ss",
                "caseSensitive": true,
                "keyValues": [
                  {
                    "key": "CAN Classic Casual Shoes",
                    "value": "Casual Shoes"
                  },
                  {
                    "key": "CAN Tanks",
                    "value": "Tanks"
                  },
                  {
                    "key": "CAN Tights",
                    "value": "Tights"
                  },
                  {
                    "key": "GenericSweatshirts",
                    "value": "Sweatshirts"
                  },
                  {
                    "key": "GenericPants",
                    "value": "Pants"
                  },
                  {
                    "key": "GenericJackets",
                    "value": "Jackets"
                  },
                  {
                    "key": "Bags (Accessories)",
                    "value": "Bags"
                  }
                ]
              }
            ],
            "type": "find-replace",
            "skip": false,
            "label": "Remap Product Styles",
            "licensed": true,
            "secretSourceStageId": "nn"
          },
          {
            "type": "javascript-index",
            "id": "fo",
            "script": "function(doc) { \n  if (doc.getId() != null) { \n    var type = doc.getFirstFieldValue(\"Product_Type_s\");  \n    var styles = doc.getFieldValues(\"Product_Style_ss\");\n    var subStyles = doc.getFieldValues(\"Product_Style_L4_ss\");\n\n    if (type !== null && styles !== null)\n    {\n      if (type == \"Shoes\") {\n        for each (var s in styles) {\n      \t\tdoc.addField(\"Shoe_Style_s\", s);\n        }\n        for each (var s in subStyles) {\n          doc.addField(\"Shoe_SubStyle_s\", s);\n        }\n      }\n      if (type == \"Clothing\") {\n        for each (var s in styles) {\n      \t\tdoc.addField(\"Clothing_Style_s\", s);\n        }\n        for each (var s in subStyles) {\n          doc.addField(\"Clothing_SubStyle_s\", s);\n        }\n      }\n      if (type == \"Accessories\") {\n        for each (var s in styles) {\n      \t\tdoc.addField(\"Accessories_Style_s\", s);\n        }\n        for each (var s in subStyles) {\n          doc.addField(\"Accessories_SubStyle_s\", s);\n        }\n      }\n      if (type == \"Equipment\") {\n        for each (var s in styles) {\n      \t\tdoc.addField(\"Equipment_Style_s\", s);\n        }\n        for each (var s in subStyles) {\n          doc.addField(\"Equipment_SubStyle_s\", s);\n        }\n      }\n    }\n  }\n    \n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Set Refined Style for Type",
            "licensed": true,
            "secretSourceStageId": "fo"
          },
          {
            "type": "javascript-index",
            "id": "gln",
            "script": "function(doc) { \nif (doc.getId() != null) { \n    var salePrice = parseFloat(doc.getFirstFieldValue(\"price_style_sale_price_f\"));\n    var price = \"Under $24.99\";\n    if(0.99 < salePrice && salePrice < 25) {\n        price = \"Under $24.99\";\n    } else if (24.99 < salePrice  && salePrice < 50) {\n    \tprice = \"$25 to $49.99\";\n    } else if (49.99 < salePrice  && salePrice < 75) {\n    \tprice = \"$50 to $74.99\";\n    } else if (74.99 < salePrice  && salePrice < 100) {\n    \tprice = \"$75 to $99.99\";\n    } else if (99.99 < salePrice  && salePrice < 150) {\n    \tprice = \"$100 to $149.99\";\n    } else if (149.99 < salePrice ) {\n    \tprice = \"$150 and over\";\n    }\n    doc.setField(\"price_s\", price);\n  }\n    \n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Price Range Processing",
            "licensed": true,
            "secretSourceStageId": "gln"
          },
          {
            "type": "index-set-property",
            "id": "9o",
            "source": [
              "onSale_s"
            ],
            "ifEquals": "",
            "regularExpression": "(SALE|true)",
            "outputType": "document",
            "outputKey": "SaleKeywords_s",
            "outputValue": "SALE,DISCOUNT,CLEARANCE,MARKDOWN",
            "whatMatched": "whatMatched",
            "falseOutputValue": "",
            "type": "index-set-property",
            "skip": false,
            "label": "Add OnSale Commerce Terms",
            "licensed": true,
            "secretSourceStageId": "9o",
            "whatMatchedKey": "whatMatched"
          },
          {
            "type": "javascript-index",
            "id": "ftj",
            "script": "function(doc) { \n    if (doc.getId() != null) { \n        if (doc.hasField(\"top_sales_amount_f\") && parseFloat(doc.getFirstFieldValue(\"top_sales_amount_f\")) >= 90) {\n            doc.addField(\"SellerKeywords_s\",\"BEST SELLER,TOP SELLER,MOST SOLD,MOST POPULAR,POPULAR,MOST PURCHASED,HOTTEST PRODUCT,TRENDING PRODUCT,MOST BOUGHT\");\n        }\n    }\n    return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Add Seller Related Commerce terms",
            "licensed": true,
            "secretSourceStageId": "ftj"
          },
          {
            "type": "javascript-index",
            "id": "hgo",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    var sizeLetter = doc.getFirstFieldValue(\"SizeLetter_s\");\n    var sizeLetterAlpha=\"\";\n    switch(sizeLetter) {\n      case \"S\":\n        sizeLetterAlpha = \"Small\";\n        break;\n      case \"M\":\n        sizeLetterAlpha = \"Medium\";\n        break;\n      case \"L\":\n        sizeLetterAlpha = \"Large\";\n        break;\n      case \"XL\":\n        sizeLetterAlpha = \"Extra Large\";\n        break;\n      case \"XXL\":\n        sizeLetterAlpha = \"Double XL\";\n        break;\n      case \"XS\":\n        sizeLetterAlpha = \"Extra Small\";\n        break;\n    }\n    if(sizeLetterAlpha!=\"\"){\n      doc.setField(\"Size_Alpha_s\", sizeLetterAlpha);\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Expand Size Letter Alpha",
            "licensed": true,
            "secretSourceStageId": "hgo"
          },
          {
            "type": "field-mapping",
            "id": "ypf",
            "mappings": [
              {
                "source": "Color_s",
                "target": "color_txt",
                "operation": "copy"
              },
              {
                "source": "Age_s",
                "target": "age_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "Color_s",
                "target": "color_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "SizeLetter_s",
                "target": "sizeletter_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "product_size_s",
                "target": "productsize_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "Size_Alpha_s",
                "target": "sizealpha_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "Product_Sub_Styles_ss",
                "target": "productsubstyles_for_qf_txt",
                "operation": "copy"
              },
              {
                "source": "sku_s",
                "target": "sku_t",
                "operation": "copy"
              },
              {
                "source": "width_s",
                "target": "width_for_qf_t",
                "operation": "copy"
              },
              {
                "source": "doctype_s",
                "target": "product",
                "operation": "set"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Additional Field Mappings",
            "licensed": true,
            "secretSourceStageId": "ypf"
          },
          {
            "type": "javascript-index",
            "id": "r7",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    if (doc.hasField(\"Style_keyword_s\"))\n    {\n     for each (var s in doc.getFirstFieldValue(\"Style_keyword_s\").split(\",\")){\n    \tdoc.addField(\"Style_keyword_ss\", s);\n    \tdoc.addField(\"stylekeyword_for_qf_txt\", s);\n     }\n    }\n    if (doc.hasField(\"Model_keyword_s\"))\n    {\n     for each (var s in doc.getFirstFieldValue(\"Model_keyword_s\").split(\",\"))\n    \tdoc.addField(\"modelkeyword_for_qf_txt\", s);\n    }\n    if (doc.hasField(\"SaleKeywords_s\"))\n    {\n      var saleKeywords = doc.getFirstFieldValue(\"SaleKeywords_s\");\n      doc.setField(\"SaleKeywords_s\",\"\");\n      for each (var sale in saleKeywords.split(\",\")) {\n        doc.addField(\"SaleKeyword_txt\",sale.trim());\n        doc.addField(\"CommerceKeywords_txt\", sale.trim());\n      }\n    } \n    if (doc.hasField(\"SellerKeywords_s\"))\n    {\n      var sellerKeywords = doc.getFirstFieldValue(\"SellerKeywords_s\");\n      doc.setField(\"SellerKeywords_s\",\"\");\n      for each (var seller in sellerKeywords.split(\",\")) {\n        doc.addField(\"SellerKeyword_txt\",seller.trim());\n        doc.addField(\"CommerceKeywords_txt\", seller.trim());\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Convert Single to Multi Value fields",
            "licensed": true,
            "secretSourceStageId": "r7"
          },
          {
            "type": "field-mapping",
            "id": "0lk",
            "mappings": [
              {
                "source": "name_txt_en_split",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Brand_txt_en_split",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Gender_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Product_Type_txt_en",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Age_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Product_Style_txt_en",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Product_Sub_Styles_ss",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Size_Alpha_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "color_txt",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "CommerceKeywords_txt",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "teamname_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "leaguename_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "playername_s",
                "target": "spell_fl",
                "operation": "copy"
              },
              {
                "source": "Model_Description_s",
                "target": "spell_fl",
                "operation": "copy"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": true,
            "label": "Copy fields to FL SpellCheck fields",
            "licensed": true,
            "secretSourceStageId": "0lk"
          },
          {
            "type": "field-mapping",
            "id": "tb",
            "mappings": [
              {
                "source": "name_txt_en_split",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Brand_txt_en_split",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Gender_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Product_Type_txt_en",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Age_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Product_Style_txt_en",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Product_Sub_Styles_ss",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Size_Alpha_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "color_txt",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "CommerceKeywords_txt",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "teamname_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "leaguename_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "playername_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Model_Description_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Style_Description_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "1_leaguename_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "1_teamname_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "1_width_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "1_playername_s",
                "target": "spells",
                "operation": "copy"
              },
              {
                "source": "Sport_Name_txt_en",
                "target": "spells",
                "operation": "copy"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Copy Fields to Spellcheck field",
            "licensed": true,
            "secretSourceStageId": "tb"
          },
          {
            "type": "field-mapping",
            "id": "jhc",
            "mappings": [
              {
                "source": "color_txt",
                "target": "color_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "CommerceKeywords_txt",
                "target": "CommerceKeywords_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "width_txt",
                "target": "width_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "leaguename_txt",
                "target": "leaguename_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "teamname_txt",
                "target": "teamname_txt_en_ss",
                "operation": "copy"
              },
              {
                "source": "playername_txt",
                "target": "playername_txt_en_ss",
                "operation": "copy"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Convert General to English for Stop Words",
            "licensed": true,
            "secretSourceStageId": "jhc"
          },
          {
            "type": "find-replace",
            "id": "woh",
            "findListReplaceRules": [],
            "findReplaceRules": [
              {
                "sourceField": "width_txt",
                "caseSensitive": false,
                "keyValues": [
                  {
                    "key": "medium",
                    "value": ""
                  }
                ]
              }
            ],
            "type": "find-replace",
            "skip": false,
            "label": "Width Cleanup",
            "condition": "//false by default, true for specific banners\nfunction(doc)\n{\n  var returnState = false;\n  if (doc.getId()!==null && doc.hasField('banner_s'))\n  {\n    var banner = doc.getFirstFieldValue(\"banner_s\");\n    switch(banner) {\n      case \"Eastbay\":\n        returnState = true;\n        break;\n      case \"Footlocker\":\n        returnState = true;\n        break;\n      case \"Champs\":\n        returnState = true;\n        break;\n      case \"Footaction\":\n        returnState = true;\n        break;\n      case \"FinalScore\":\n        returnState = true;\n        break;\n      case \"FLCA\":\n        returnState = true;\n        break;\n    }\n  }\n  return returnState;\n}",
            "licensed": true,
            "secretSourceStageId": "woh"
          },
          {
            "type": "field-mapping",
            "id": "9pu",
            "mappings": [
              {
                "source": "Product_Style_L4_pl",
                "operation": "delete"
              },
              {
                "source": "Gender_pl",
                "target": "",
                "operation": "delete"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Remove Pipeline Only Fields",
            "licensed": true,
            "secretSourceStageId": "9pu"
          },
          {
            "type": "solr-index",
            "id": "d72a603a-6285-461b-8fd1-de87cba5d2ef",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": true,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d72a603a-6285-461b-8fd1-de87cba5d2ef"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "banners-products-index"
        }
      },
      {
        "id": "banners-products-signals",
        "stages": [
          {
            "type": "find-replace",
            "id": "g2",
            "findListReplaceRules": [],
            "findReplaceRules": [
              {
                "sourceField": "signal_type",
                "caseSensitive": true,
                "keyValues": [
                  {
                    "key": "Click",
                    "value": "click"
                  },
                  {
                    "key": "Add To Cart",
                    "value": "cart"
                  },
                  {
                    "key": "Purchase",
                    "value": "purchase"
                  }
                ]
              }
            ],
            "type": "find-replace",
            "skip": false,
            "label": "Remap Signal Type Values",
            "licensed": true,
            "secretSourceStageId": "g2"
          },
          {
            "type": "field-mapping",
            "id": "1dca4ab4-49ff-4a0c-84dc-7f326f961a19",
            "mappings": [
              {
                "source": "fusion_query_id",
                "target": "fusion_query_id",
                "operation": "move"
              },
              {
                "source": "user_id",
                "target": "user_id",
                "operation": "move"
              },
              {
                "source": "query_term",
                "target": "query_t",
                "operation": "copy"
              },
              {
                "source": "query_term",
                "target": "query",
                "operation": "copy"
              },
              {
                "source": "query_term",
                "target": "query_orig_s",
                "operation": "move"
              },
              {
                "source": "timestamp",
                "target": "timestamp_s",
                "operation": "copy"
              },
              {
                "source": "timestamp",
                "target": "timestamp_tdt",
                "operation": "move"
              },
              {
                "source": "signal_type",
                "target": "response_type",
                "operation": "copy"
              },
              {
                "source": "signal_type",
                "target": "type",
                "operation": "move"
              },
              {
                "source": "product_id",
                "target": "doc_id",
                "operation": "copy"
              },
              {
                "source": "product_id",
                "target": "doc_id_s",
                "operation": "move"
              },
              {
                "source": "product_position",
                "target": "product_position_l",
                "operation": "move"
              },
              {
                "source": "load_date",
                "target": "load_date_dt",
                "operation": "copy"
              },
              {
                "source": "load_date",
                "target": "load_date_s",
                "operation": "move"
              },
              {
                "source": "count_i",
                "target": "1",
                "operation": "set"
              },
              {
                "source": "platform",
                "target": "fusion",
                "operation": "set"
              },
              {
                "source": "locale",
                "target": "locale",
                "operation": "move"
              }
            ],
            "unmapped": {
              "source": "lw*",
              "operation": "delete"
            },
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Initial Field Mapping",
            "licensed": true,
            "secretSourceStageId": "1dca4ab4-49ff-4a0c-84dc-7f326f961a19"
          },
          {
            "type": "javascript-index",
            "id": "k9",
            "script": "function(doc)\n{\n  if (doc.getId()!==null) {\n  \tvar dataSourceType=doc.getFirstFieldValue(\"_lw_data_source_type_s\");\n  \tvar fileName = doc.getFirstFieldValue(\"_lw_file_name\");\n  \tif(dataSourceType == \"lucid.fileupload/fileupload\" && fileName.indexOf(\"fusion_signals\") !=-1) {\n  \t\tvar loadDate = doc.getFirstFieldValue(\"load_date_s\");\n  \t\tvar lineNumber = doc.getFirstFieldValue(\"_lw_parser_line_number_l\");\n  \t\tif(loadDate!=null && lineNumber!=null) {\n  \t\t\tvar id= loadDate + '_' + lineNumber;\n  \t\t\tdoc.setField(\"id\",id);\n        doc.setField(\"source_type_s\",dataSourceType);\n        doc.setField(\"file_name_s\",fileName);\n        doc.setField(\"line_number_l\",lineNumber)\n  \t\t}\n  \t}\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Set Doc Id",
            "licensed": true,
            "secretSourceStageId": "k9"
          },
          {
            "type": "javascript-index",
            "id": "i5",
            "script": "function(doc)\n{\n  if (doc.getId()!==null) {\n    var StringUtils = Java.type(\"org.apache.commons.lang3.StringUtils\");\n    var fieldNames = doc.getAllFieldNames();\n    for each(var field in fieldNames) {\n      if(StringUtils.containsIgnoreCase(field,'_lw_')) {\n         doc.setField(field,StringUtils.EMPTY);\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": true,
            "label": "Remove LW fields created by parser and datasource",
            "licensed": true,
            "secretSourceStageId": "i5"
          },
          {
            "type": "javascript-index",
            "id": "wvs",
            "script": "function(doc)\n{\n  if (doc.getId()!==null) {\n    def fieldNames = doc.getFieldNames()\n    for(var i=0;i<fieldNames.length; i++) {\n      if(fieldNames[i].startsWith(\"_lw\")) {\n        doc.setField(fieldNames[i],\"\");\n      }\n    }\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": true,
            "label": "Remove unused-fields",
            "licensed": true,
            "secretSourceStageId": "wvs"
          },
          {
            "type": "date-parsing",
            "id": "3k",
            "sourceFields": [
              "timestamp_tdt"
            ],
            "dateFormats": [
              "YYYYMMddHHmmss"
            ],
            "requireTimezone": false,
            "ignoreInvalid": false,
            "splitLocal": true,
            "splitUTC": false,
            "defaultTimezone": "US/Central",
            "defaultLocale": "en",
            "type": "date-parsing",
            "skip": false,
            "label": "Parse Signal Timestamp",
            "licensed": true,
            "secretSourceStageId": "3k"
          },
          {
            "type": "index-set-property",
            "id": "9do",
            "source": [],
            "outputType": "document",
            "outputKey": "count_i",
            "outputValue": "1",
            "whatMatched": "whatMatched",
            "falseOutputValue": "1",
            "type": "index-set-property",
            "skip": true,
            "label": "Set Banner",
            "licensed": true,
            "secretSourceStageId": "9do",
            "whatMatchedKey": ""
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "b6f69300-dc6b-4c90-a4dc-e078f3b95319",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "b6f69300-dc6b-4c90-a4dc-e078f3b95319"
          },
          {
            "type": "solr-index",
            "id": "c71e7b62-5dae-485d-8bc7-25536dffca7e",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c71e7b62-5dae-485d-8bc7-25536dffca7e"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "banners-products-signals"
        }
      },
      {
        "id": "fl",
        "stages": [
          {
            "type": "field-mapping",
            "id": "2c1ea3ff-9caf-4f44-bd3a-96daa3672286",
            "mappings": [
              {
                "source": "_lw_parser_line_number_l",
                "target": "line_number_i",
                "operation": "copy"
              },
              {
                "source": "suggestion_weight_i",
                "target": "0",
                "operation": "set"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "2c1ea3ff-9caf-4f44-bd3a-96daa3672286"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "3321b1d6-bca6-4a1d-8aab-f5acfd6b58b2",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "3321b1d6-bca6-4a1d-8aab-f5acfd6b58b2"
          },
          {
            "type": "javascript-index",
            "id": "gj9",
            "script": "function(doc){\n  var docId = doc.id\n  var rowNum_s = Java.type('org.apache.commons.lang3.StringUtils').substringAfterLast(docId,'#');\n//  var rowNum = Java.type('java.lang.Integer').parseInt(rowNum_s)+1;\n  doc.addField('rowNum_i',rowNum_s);\n  doc.setField('id',rowNum_s);\n  doc.setField('suggestion_weight_i',0);\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Overwrite Doc Id",
            "licensed": true,
            "secretSourceStageId": "gj9"
          },
          {
            "type": "exclude-doc",
            "id": "vb",
            "matchRules": [
              {
                "field": "is_typeahead_b",
                "pattern": "FALSE"
              }
            ],
            "type": "exclude-doc",
            "skip": false,
            "label": "Exclude non typeahead entries",
            "licensed": true,
            "secretSourceStageId": "vb"
          },
          {
            "type": "regex-replacement",
            "id": "64h",
            "rules": [
              {
                "source": [
                  "name_s"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "overwrite",
                "pattern": "^(?i)((.)+Shoes)$",
                "returnIfNoMatch": "input_string",
                "noMatchValue": "0",
                "replacement": "1",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "name_s"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "overwrite",
                "pattern": "^(?i)((.)+Clothing)$",
                "returnIfNoMatch": "input_string",
                "noMatchValue": "0",
                "replacement": "2",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "name_s"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "overwrite",
                "pattern": "^(?i)((.)+Accessories)$",
                "returnIfNoMatch": "input_string",
                "noMatchValue": "0",
                "replacement": "3",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "name_s"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "overwrite",
                "pattern": "^(?i)((.)+Equipment)$",
                "returnIfNoMatch": "input_string",
                "noMatchValue": "0",
                "replacement": "4",
                "replaceWhich": "all"
              }
            ],
            "type": "regex-replacement",
            "skip": false,
            "label": "Assign weightage to product type suggestions",
            "licensed": true,
            "secretSourceStageId": "64h"
          },
          {
            "type": "solr-index",
            "id": "b3498170-fac4-474c-8d2d-c73e30ecaf41",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "b3498170-fac4-474c-8d2d-c73e30ecaf41"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl"
        }
      },
      {
        "id": "fl-0Bai",
        "stages": [
          {
            "type": "field-mapping",
            "id": "100ee0d7-51c6-418d-b207-c69df1fe6da6",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "100ee0d7-51c6-418d-b207-c69df1fe6da6"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "4028a4aa-db3a-4fae-8255-72632ae0248d",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4028a4aa-db3a-4fae-8255-72632ae0248d"
          },
          {
            "type": "solr-index",
            "id": "1f8acc05-c486-4654-b2bc-c75ca9151677",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "1f8acc05-c486-4654-b2bc-c75ca9151677"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-0Bai"
        }
      },
      {
        "id": "fl-I5Kk",
        "stages": [
          {
            "type": "field-mapping",
            "id": "0298db36-05ec-48f9-b561-43d55dcc5542",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0298db36-05ec-48f9-b561-43d55dcc5542"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "7170a3cb-e1a2-4844-8654-c03b9142fa7f",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "7170a3cb-e1a2-4844-8654-c03b9142fa7f"
          },
          {
            "type": "solr-index",
            "id": "1351e239-6628-44cc-ad42-d30f7796d6ee",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "1351e239-6628-44cc-ad42-d30f7796d6ee"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-I5Kk"
        }
      },
      {
        "id": "fl-aPWm",
        "stages": [
          {
            "type": "field-mapping",
            "id": "4a6c7787-8579-49fd-a66a-f22e0fd3b044",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4a6c7787-8579-49fd-a66a-f22e0fd3b044"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "ce2b8fa4-a8fc-4b51-af98-1b6c2226d6d6",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "ce2b8fa4-a8fc-4b51-af98-1b6c2226d6d6"
          },
          {
            "type": "solr-index",
            "id": "d82075d9-0e4b-48cb-b7fb-86189501a1b8",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d82075d9-0e4b-48cb-b7fb-86189501a1b8"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-aPWm"
        }
      },
      {
        "id": "fl-default-rules",
        "stages": [
          {
            "type": "javascript-index",
            "id": "h0h",
            "script": "// imports\nvar Exception = java.lang.Exception;\nvar String = java.lang.String;\nvar Arrays = java.util.Arrays;\nvar Collections = java.util.Collections;\nvar ArrayList = java.util.ArrayList;\nvar HashSet = java.util.HashSet;\nvar Command = com.lucidworks.apollo.common.pipeline.Command;\nvar AuthorizationContextThreadLocal = com.lucidworks.apollo.security.AuthorizationContextThreadLocal;\n\n// SOLR_ROLES_FIELD specifies the field present on rule docs in Solr that contains a \n// rule's set of roles\nvar SOLR_ROLES_FIELD = \"groups\";\n\nfunction ensureEditPermissions(userRoles, doc) {\n  if (doc.getId() != null) {\n    var query = new org.apache.solr.client.solrj.SolrQuery();\n    query.setRows(1);\n    query.setQuery(doc.getId());\n    query.setFields(\"id\", SOLR_ROLES_FIELD);\n    var result = solrServer.query(query);\n    var numFound = result.getResults().getNumFound();\n    if(numFound > 1) {\n      throw new java.lang.Exception(\"More than one document returned when looking up rule ID, something is wrong with the rules engine.\");\n    } else if (numFound == 1) {\n      var oldGroup = result.getResults().get(0).getFieldValue(SOLR_ROLES_FIELD);\n      if (!userRoles.contains(oldGroup)) {\n        throw new java.lang.Exception(\"Groups do not match. Found '\"+oldGroup+\"', but required one of: \"+ userRoles);\n      }\n    }\n  }\n}\n\nfunction ensurePermission(doc) {\n  // grab the roles on the doc\n  var docRoles = doc.getFieldValues(SOLR_ROLES_FIELD);\n  if (null == docRoles) {\n    // no roles on the doc -> anybody can edit it\n    return;\n  }\n  docRoles = filterRoles(docRoles, true);\n  if (docRoles.isEmpty()) {\n    // no roles on the doc -> anybody can edit it\n    throw new Exception(\"Document is missing group information and cannot be indexed\");\n  }\n  // lookup the user and its roles\n  var user = AuthorizationContextThreadLocal.getOrDefault().getSubject().getPrincipal();\n  var userRoles = AuthorizationContextThreadLocal.getOrDefault().getSubject().getRoles();\n  if (null == userRoles) {\n    throw new Exception(\"No roles found for user '\" + user + \"'\");\n  }\n\n  userRoles = filterRoles(userRoles, false);\n  if (userRoles.isEmpty()) {\n    throw new Exception(\"No valid 'rules-' roles found for user '\" + user + \"'; roles=\"\n        + Arrays.toString(userRoles.toArray()));\n  }\n  if(userRoles.contains(\"rules-admin\")) {\n     //Rules-admin can save any group\n     return;\n  }\n  \n  ensureEditPermissions(userRoles, doc);\n  \n  for (var i = 0; i < docRoles.size(); i++) {\n    if (userRoles.contains(docRoles.get(i))) {\n      return;\n    }\n  }\n  throw new Exception(\"User '\" + user + \"' has insufficient permissions to create/modify rule: \"\n      + Arrays.toString(userRoles.toArray()));\n}\n\nfunction filterRoles(roles, logInvalidRoles) {\n  var validRoles = new HashSet();\n  for (var i = 0; i < roles.size(); i++) {\n    var role = roles.get(i);\n    if (null != role) {\n      role = role.trim();\n      if (role.startsWith(\"rules-\")) {\n        validRoles.add(role);\n      } else if(role.equals(\"admin\")) {\n        validRoles.add(\"rules-admin\");\n      } else if (logInvalidRoles) {\n        logger.warn(\"Ignoring invalid role: '{}'; roles must start with 'rules-'\", role);\n      }\n    }\n  }\n  return new ArrayList(validRoles);\n}\n\nensurePermission(doc);\n// check if this is a delete, and clear doc's fields to have it treated as a delete by SolrIndexStage\nif (null !== doc.getCommands()) {\n  for (var i = 0; i < doc.getCommands().size(); i++) {\n    var cmd = doc.getCommands().get(i);\n    if (null !== cmd && (cmd.getName().equals(Command.DELETE) \n        || cmd.getName().equals(Command.DELETE_QUERY))) {\n      // clear the fields\n      doc.setFields(Collections.emptyMap());\n    }\n  }\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Role Based Security",
            "licensed": true,
            "secretSourceStageId": "h0h"
          },
          {
            "type": "field-mapping",
            "id": "04ab28fe-fbc6-4955-9e8a-fc6a78dce1e9",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "04ab28fe-fbc6-4955-9e8a-fc6a78dce1e9"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "47ddf7e9-0f97-444e-a7cf-69afc66ead4d",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "47ddf7e9-0f97-444e-a7cf-69afc66ead4d"
          },
          {
            "type": "solr-index",
            "id": "0f793386-85df-45d9-b3a5-37137d8a646f",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0f793386-85df-45d9-b3a5-37137d8a646f"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-default-rules"
        }
      },
      {
        "id": "fl-fFp3",
        "stages": [
          {
            "type": "field-mapping",
            "id": "c0588ea8-d6f2-40a2-9a7c-0ef0776e2594",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c0588ea8-d6f2-40a2-9a7c-0ef0776e2594"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "9c2022a3-d742-4259-bafe-96c56c14f128",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "9c2022a3-d742-4259-bafe-96c56c14f128"
          },
          {
            "type": "solr-index",
            "id": "3f828038-6664-4998-b2ed-eb6431b92a1a",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "3f828038-6664-4998-b2ed-eb6431b92a1a"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-fFp3"
        }
      },
      {
        "id": "fl-full-index",
        "stages": [
          {
            "type": "field-mapping",
            "id": "719464ba-fff8-4d82-9907-e51df0fe3008",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "719464ba-fff8-4d82-9907-e51df0fe3008"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "936dfaa2-3392-4653-84fd-ebb30732d15f",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "936dfaa2-3392-4653-84fd-ebb30732d15f"
          },
          {
            "type": "solr-index",
            "id": "4e316bdb-1bee-4aff-a473-56b501604a33",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4e316bdb-1bee-4aff-a473-56b501604a33"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index"
        }
      },
      {
        "id": "fl-full-index-FlZf",
        "stages": [
          {
            "type": "field-mapping",
            "id": "7c280722-ec0d-4570-974a-5ca7573161b8",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "7c280722-ec0d-4570-974a-5ca7573161b8"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "50c27dfe-a169-490a-aa79-ebd326840f80",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "50c27dfe-a169-490a-aa79-ebd326840f80"
          },
          {
            "type": "solr-index",
            "id": "b4fa6918-3fb4-407d-a541-0953063837d2",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "b4fa6918-3fb4-407d-a541-0953063837d2"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index-FlZf"
        }
      },
      {
        "id": "fl-full-index-IPW2",
        "stages": [
          {
            "type": "field-mapping",
            "id": "a04bc0b6-c346-4271-8897-b90abcfbc985",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "a04bc0b6-c346-4271-8897-b90abcfbc985"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "0e7a585a-7e30-479a-8966-4104987df921",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0e7a585a-7e30-479a-8966-4104987df921"
          },
          {
            "type": "solr-index",
            "id": "6151fc6f-3048-49de-8811-f53bf04d32a2",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "6151fc6f-3048-49de-8811-f53bf04d32a2"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index-IPW2"
        }
      },
      {
        "id": "fl-gGjF",
        "stages": [
          {
            "type": "field-mapping",
            "id": "891f8bdd-8874-467c-9c01-30413c4b1e7d",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "891f8bdd-8874-467c-9c01-30413c4b1e7d"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "fd09b6e1-c837-4c20-be44-a468743538f2",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "fd09b6e1-c837-4c20-be44-a468743538f2"
          },
          {
            "type": "solr-index",
            "id": "c618e546-b2ce-490f-a32e-7a82c1ecb805",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c618e546-b2ce-490f-a32e-7a82c1ecb805"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-gGjF"
        }
      },
      {
        "id": "fl-typeahead-index-pipeline-git-source",
        "stages": [
          {
            "type": "field-mapping",
            "id": "2c1ea3ff-9caf-4f44-bd3a-96daa3672286",
            "mappings": [
              {
                "source": "_lw_parser_line_number_l",
                "target": "line_number_i",
                "operation": "copy"
              },
              {
                "source": "suggestion_weight_i",
                "target": "10",
                "operation": "set"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "2c1ea3ff-9caf-4f44-bd3a-96daa3672286"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "3321b1d6-bca6-4a1d-8aab-f5acfd6b58b2",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "3321b1d6-bca6-4a1d-8aab-f5acfd6b58b2"
          },
          {
            "type": "javascript-index",
            "id": "gj9",
            "script": "function(doc){\n  if(doc.id ==null) {\n    return;\n  }\n  var docId = doc.id\n  var StringUtils = Java.type('org.apache.commons.lang3.StringUtils');\n  var rowNum_s = StringUtils.substringAfterLast(docId,'#');\n//  var rowNum = Java.type('java.lang.Integer').parseInt(rowNum_s)+1;\n  doc.addField('rowNum_i',rowNum_s);\n  doc.addField('id',rowNum_s);\n  //_lw_parser_resource_name_s\n  if(doc.hasField('parent_s') && StringUtils.isNotBlank(doc.getFirstFieldValue('parent_s')) ){\n    var fileName = doc.getFirstFieldValue('parent_s');\n  \tfileName = StringUtils.substringAfterLast(fileName,'/');\n    fileName = StringUtils.substringBefore(fileName,\"?\");\n  \tdoc.setField('fileName_s',fileName);\n    /*var banner = StringUtils.substringBefore(fileName,'-');\n    doc.setField('banner_s',banner);\n    var locale = StringUtils.remove(StringUtils.substringBefore(fileName,'-typeaheadsearch.csv'),banner);\n    if(StringUtils.isBlank(locale)){\n      locale=\"en-US\";\n    }\n    doc.setField('locale',locale);*/\n    fileName = StringUtils.remove(fileName,'-typeaheadsearch.csv');\n    var banner = StringUtils.substringBefore(fileName,'-');\n    doc.setField('banner_s',banner);\n    fileName = StringUtils.remove(fileName,banner);\n    var locale = StringUtils.substringAfter(fileName,'-');\n    if(StringUtils.isBlank(locale)){\n      locale=\"en-US\";\n    }\n    doc.setField('locale_s',locale);\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Overwrite Doc Id and Set Banner,Locale",
            "licensed": true,
            "secretSourceStageId": "gj9"
          },
          {
            "type": "exclude-doc",
            "id": "vb",
            "matchRules": [
              {
                "field": "is_typeahead_b",
                "pattern": "FALSE"
              }
            ],
            "type": "exclude-doc",
            "skip": true,
            "label": "Exclude non typeahead entries",
            "licensed": true,
            "secretSourceStageId": "vb"
          },
          {
            "type": "regex-replacement",
            "id": "kn6",
            "rules": [
              {
                "source": [
                  "name"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "append",
                "pattern": "^(?i)((.)+Shoe(.)+)$",
                "returnIfNoMatch": "input_string",
                "noMatchValue": "",
                "replacement": "1",
                "replaceWhich": "all"
              },
              {
                "source": [
                  "name"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "append",
                "pattern": "^(?i)((.)+Cloth(.)+)$",
                "returnIfNoMatch": "input_string",
                "replacement": "2",
                "replaceWhich": "all"
              }
            ],
            "type": "regex-replacement",
            "skip": true,
            "label": "Assign weightage to product type suggestions",
            "licensed": true,
            "secretSourceStageId": "kn6"
          },
          {
            "type": "javascript-index",
            "id": "df",
            "script": "function(doc) {\n  var Pattern = Java.type('java.util.regex.Pattern');\n  var suggestion = doc.getFirstFieldValue('name').trim();\n  if(Pattern.compile('^(?i)((.)*Shoe(.)+)$').matcher(suggestion).matches()){\n    doc.setField('suggestion_weight_i',1);\n  } \n  else if(Pattern.compile('^(?i)((.)*Cloth(.)+)$').matcher(suggestion).matches()){\n    doc.setField('suggestion_weight_i',2);\n  }  \n  else if(Pattern.compile('^(?i)((.)*Accessor(.)+)$').matcher(suggestion).matches()){\n    doc.setField('suggestion_weight_i',3);\n  }  \n  else if(Pattern.compile('^(?i)((.)*Equipment(.)+)$').matcher(suggestion).matches()){\n    doc.setField('suggestion_weight_i',4);\n  } \n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Pattern Matching Logic",
            "licensed": true,
            "secretSourceStageId": "df"
          },
          {
            "type": "index-set-property",
            "id": "gnc",
            "source": [
              "name"
            ],
            "regularExpression": "Nike",
            "outputType": "document",
            "outputKey": "suggestion_weight_i",
            "outputValue": "1",
            "whatMatched": "whatMatched",
            "falseOutputValue": "",
            "type": "index-set-property",
            "skip": true,
            "label": "Assign Weight to Shoes related suggestion",
            "licensed": true,
            "secretSourceStageId": "gnc",
            "whatMatchedKey": "whatMatched"
          },
          {
            "type": "javascript-index",
            "id": "g3",
            "script": "function(doc){\n  var searchTerm = doc.getFirstFieldValue('name');\n  var StringTokenizer = Java.type('java.util.StringTokenizer');\n  var noOfTokens = new StringTokenizer(searchTerm).countTokens();\n  doc.addField('suggestion_s',searchTerm);\n  doc.addField('noOfTokens_i',noOfTokens);\n  doc.addField('suggestionLength_i',Java.type('org.apache.commons.lang3.StringUtils').trim(searchTerm).length());\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Count Number of Tokens",
            "licensed": true,
            "secretSourceStageId": "g3"
          },
          {
            "type": "regex-extractor",
            "id": "yu4",
            "rules": [
              {
                "source": [
                  "name"
                ],
                "target": "suggestion_weight_i",
                "writeMode": "overwrite",
                "pattern": "^(?i)((.)+Shoe(.)+)$",
                "returnIfNoMatch": "null",
                "group": 0
              }
            ],
            "type": "regex-extractor",
            "skip": true,
            "label": "Assign weightage to product type suggestions",
            "licensed": true,
            "secretSourceStageId": "yu4"
          },
          {
            "type": "solr-index",
            "id": "b3498170-fac4-474c-8d2d-c73e30ecaf41",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "b3498170-fac4-474c-8d2d-c73e30ecaf41"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-typeahead-index-pipeline-git-source"
        }
      },
      {
        "id": "fl_partial_update",
        "stages": [
          {
            "type": "field-mapping",
            "id": "1cce613b-3b5d-49cb-93e0-d39b03db1f9e",
            "mappings": [
              {
                "source": "Product_Web_Key",
                "target": "id",
                "operation": "copy"
              },
              {
                "source": "Product_Web_Key",
                "target": "product_web_key_s",
                "operation": "move"
              },
              {
                "source": "Brand",
                "target": "Brand_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Brand",
                "target": "Brand_s",
                "operation": "move"
              },
              {
                "source": "Gender",
                "target": "Gender_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Gender",
                "target": "Gender_s",
                "operation": "move"
              },
              {
                "source": "Product_Type",
                "target": "Product_Type_txt_en",
                "operation": "copy"
              },
              {
                "source": "Product_Type",
                "target": "Product_Type_s",
                "operation": "move"
              },
              {
                "source": "Product_Style_Type",
                "target": "Product_Style_txt_en",
                "operation": "copy"
              },
              {
                "source": "Product_Style_Type",
                "target": "Product_Style_ss",
                "operation": "move"
              },
              {
                "source": "Product_Sub_Styles",
                "target": "Product_Sub_Styles_ss",
                "operation": "move"
              },
              {
                "source": "Sport_Name",
                "target": "Sport_Name_txt_en",
                "operation": "copy"
              },
              {
                "source": "Sport_Name",
                "target": "Sport_Name_ss",
                "operation": "move"
              },
              {
                "source": "Available_Inventory",
                "target": "availableinventory_b",
                "operation": "move"
              },
              {
                "source": "Model_Description",
                "target": "description_txt_en_split",
                "operation": "move"
              },
              {
                "source": "Discount_Percent",
                "target": "discount_percent_f",
                "operation": "move"
              },
              {
                "source": "Model_Number",
                "target": "model_number_s",
                "operation": "move"
              },
              {
                "source": "Model_Name",
                "target": "name_txt_en_split",
                "operation": "copy"
              },
              {
                "source": "Model_Name",
                "target": "name",
                "operation": "move"
              },
              {
                "source": "Style_Original_Price",
                "target": "price_style_original_price_f",
                "operation": "move"
              }
            ],
            "unmapped": {
              "source": ".*",
              "operation": "delete"
            },
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Initial Field Mappings",
            "licensed": true,
            "secretSourceStageId": "1cce613b-3b5d-49cb-93e0-d39b03db1f9e"
          },
          {
            "type": "solr-partial-update-index",
            "id": "zhn",
            "enforceSchema": false,
            "solrDocIdFieldName": "id",
            "solrDocIdFieldValue": "<doc.id>",
            "dateFormats": [],
            "params": [],
            "updatedFields": [
              {
                "updateType": "remove",
                "fieldName": "Style_Variants_ss",
                "values": "Style_Variants_ss"
              }
            ],
            "deletedFields": [],
            "positionalUpdates": [],
            "positionalRemovals": [],
            "concurrencyControlEnabled": true,
            "rejectUpdatesIfDocNotPresent": true,
            "updateAllDocFields": false,
            "type": "solr-partial-update-index",
            "skip": false,
            "label": "Atomic Update to Documents",
            "licensed": true,
            "secretSourceStageId": "zhn"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_partial_update"
        }
      },
      {
        "id": "fl_rules",
        "stages": [
          {
            "type": "field-mapping",
            "id": "e7319893-3225-4725-99f1-0ec1c8802a40",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "e7319893-3225-4725-99f1-0ec1c8802a40"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "272746fc-52a9-43ee-87ad-0018f8991a26",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "272746fc-52a9-43ee-87ad-0018f8991a26"
          },
          {
            "type": "solr-index",
            "id": "45f8b5aa-9846-446a-971f-cb343216cbdb",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "45f8b5aa-9846-446a-971f-cb343216cbdb"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_rules"
        }
      },
      {
        "id": "fl_signals",
        "stages": [
          {
            "type": "find-replace",
            "id": "g2",
            "findListReplaceRules": [],
            "findReplaceRules": [
              {
                "sourceField": "signal_type",
                "caseSensitive": true,
                "keyValues": [
                  {
                    "key": "Click",
                    "value": "click"
                  },
                  {
                    "key": "Add To Cart",
                    "value": "cart"
                  },
                  {
                    "key": "Purchase",
                    "value": "purchase"
                  }
                ]
              }
            ],
            "type": "find-replace",
            "skip": false,
            "label": "Remap Signal Type Values",
            "licensed": true,
            "secretSourceStageId": "g2"
          },
          {
            "type": "field-mapping",
            "id": "1dca4ab4-49ff-4a0c-84dc-7f326f961a19",
            "mappings": [
              {
                "source": "fusion_query_id",
                "target": "fusion_query_id",
                "operation": "move"
              },
              {
                "source": "user_id",
                "target": "user_id",
                "operation": "move"
              },
              {
                "source": "query_term",
                "target": "query_t",
                "operation": "copy"
              },
              {
                "source": "query_term",
                "target": "query_orig_s",
                "operation": "move"
              },
              {
                "source": "timestamp",
                "target": "timestamp_s",
                "operation": "copy"
              },
              {
                "source": "timestamp",
                "target": "timestamp_tdt",
                "operation": "move"
              },
              {
                "source": "signal_type",
                "target": "response_type",
                "operation": "copy"
              },
              {
                "source": "signal_type",
                "target": "type",
                "operation": "move"
              },
              {
                "source": "product_id",
                "target": "doc_id_s",
                "operation": "move"
              },
              {
                "source": "product_position",
                "target": "product_position_l",
                "operation": "move"
              },
              {
                "source": "load_date",
                "target": "load_date_dt",
                "operation": "copy"
              },
              {
                "source": "load_date",
                "target": "load_date_s",
                "operation": "move"
              },
              {
                "source": "count_i",
                "target": "1",
                "operation": "set"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "label": "Initial Field Mapping",
            "licensed": true,
            "secretSourceStageId": "1dca4ab4-49ff-4a0c-84dc-7f326f961a19"
          },
          {
            "type": "javascript-index",
            "id": "k9",
            "script": "function(doc)\n{\n  if (doc.getId()!==null) {\n  \tvar dataSourceType=doc.getFirstFieldValue(\"_lw_data_source_type_s\");\n  \tvar fileName = doc.getFirstFieldValue(\"_lw_file_name\");\n  \tif(dataSourceType == \"lucid.fileupload/fileupload\" && fileName.indexOf(\"fusion_signals\") !=-1) {\n  \t\tvar loadDate = doc.getFirstFieldValue(\"load_date_s\");\n  \t\tvar lineNumber = doc.getFirstFieldValue(\"_lw_parser_line_number_l\");\n  \t\tif(loadDate!=null && lineNumber!=null) {\n  \t\t\tvar id= loadDate + '_' + lineNumber;\n  \t\t\tdoc.setField(\"id\",id);\n            //doc.addField(\"id_raw_s\",id);\n  \t\t}\n  \t}\n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": false,
            "label": "Overwrite Doc Id",
            "licensed": true,
            "secretSourceStageId": "k9"
          },
          {
            "type": "date-parsing",
            "id": "3k",
            "sourceFields": [
              "timestamp_tdt"
            ],
            "dateFormats": [
              "YYYYMMddHHmmss"
            ],
            "requireTimezone": false,
            "ignoreInvalid": false,
            "splitLocal": true,
            "splitUTC": false,
            "defaultTimezone": "US/Central",
            "defaultLocale": "en",
            "type": "date-parsing",
            "skip": false,
            "label": "Parse Signal Timestamp",
            "licensed": true,
            "secretSourceStageId": "3k"
          },
          {
            "type": "index-set-property",
            "id": "9do",
            "source": [],
            "outputType": "document",
            "outputKey": "count_i",
            "outputValue": "1",
            "whatMatched": "whatMatched",
            "falseOutputValue": "1",
            "type": "index-set-property",
            "skip": true,
            "label": "Set Banner",
            "licensed": true,
            "secretSourceStageId": "9do",
            "whatMatchedKey": ""
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "b6f69300-dc6b-4c90-a4dc-e078f3b95319",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "b6f69300-dc6b-4c90-a4dc-e078f3b95319"
          },
          {
            "type": "solr-index",
            "id": "c71e7b62-5dae-485d-8bc7-25536dffca7e",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c71e7b62-5dae-485d-8bc7-25536dffca7e"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_signals"
        }
      },
      {
        "id": "fl_signals_aggr",
        "stages": [
          {
            "type": "field-mapping",
            "id": "695e00ea-328a-43e9-9a26-bcc94cb3e755",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "695e00ea-328a-43e9-9a26-bcc94cb3e755"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "e823c840-d722-40ca-8b95-c50cc01141c4",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "e823c840-d722-40ca-8b95-c50cc01141c4"
          },
          {
            "type": "solr-index",
            "id": "06ecd058-7763-498d-99e8-74bd95635e2c",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "06ecd058-7763-498d-99e8-74bd95635e2c"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_signals_aggr"
        }
      },
      {
        "id": "fl_typeahead",
        "stages": [
          {
            "type": "field-mapping",
            "id": "cf0c8d2f-ce0d-4aba-8e8d-f61b91063efa",
            "mappings": [
              {
                "source": "id",
                "target": "id",
                "operation": "move"
              },
              {
                "source": "name",
                "target": "name",
                "operation": "move"
              },
              {
                "source": "type",
                "target": "type",
                "operation": "move"
              },
              {
                "source": "availableinventory_b",
                "target": "availableinventory_b",
                "operation": "move"
              },
              {
                "source": "deltaFlag",
                "target": "deltaFlag_i",
                "operation": "move"
              }
            ],
            "unmapped": {
              "source": "*",
              "operation": "delete"
            },
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "cf0c8d2f-ce0d-4aba-8e8d-f61b91063efa"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "fc5390b3-3e4b-4758-a471-8c55172df8e5",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "fc5390b3-3e4b-4758-a471-8c55172df8e5"
          },
          {
            "type": "javascript-index",
            "id": "kg",
            "script": "function(doc)\n{\n  if (doc.getId()!==null)\n  {\n    var date = Java.type(\"java.util.Date\");\n    var sdf = Java.type(\"java.text.SimpleDateFormat\");  \n    doc.setField(\"date\", new sdf(\"yyyy.MM.dd.HH.mm.ss\").format(new date());\n);  \n  }\n  return doc;\n}",
            "type": "javascript-index",
            "skip": true,
            "label": "LogDate",
            "licensed": true,
            "secretSourceStageId": "kg"
          },
          {
            "type": "solr-index",
            "id": "af70507e-8da7-4e30-9df2-87db24c53479",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "af70507e-8da7-4e30-9df2-87db24c53479"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead"
        }
      },
      {
        "id": "fl_typeahead_signals",
        "stages": [
          {
            "type": "field-mapping",
            "id": "0b2de351-21f7-431f-b837-9c3ae00012a5",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0b2de351-21f7-431f-b837-9c3ae00012a5"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "ed2ef9b2-da32-4fdb-8340-a06d0bf4e7a7",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "ed2ef9b2-da32-4fdb-8340-a06d0bf4e7a7"
          },
          {
            "type": "solr-index",
            "id": "7aeb137f-038e-4215-8fa7-6be05c4cba36",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "7aeb137f-038e-4215-8fa7-6be05c4cba36"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead_signals"
        }
      },
      {
        "id": "fl_typeahead_signals_aggr",
        "stages": [
          {
            "type": "field-mapping",
            "id": "4ca68add-d0ab-49b4-9133-e7dbd0a0fda3",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4ca68add-d0ab-49b4-9133-e7dbd0a0fda3"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "c9e2b5d8-16da-441b-a120-c6b3ba5e9664",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c9e2b5d8-16da-441b-a120-c6b3ba5e9664"
          },
          {
            "type": "solr-index",
            "id": "92f42e0d-cf3d-46a6-a3df-b24c7c9881ea",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "92f42e0d-cf3d-46a6-a3df-b24c7c9881ea"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead_signals_aggr"
        }
      },
      {
        "id": "nlp-pipeline",
        "stages": [
          {
            "type": "nlp-extractor",
            "id": "open-nlp",
            "rules": [
              {
                "source": [
                  ".*"
                ],
                "target": "person_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "person_ss",
                    "definition": "nlp/models/en-ner-person.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "location_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "location_ss",
                    "definition": "nlp/models/en-ner-location.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "organization_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "organization_ss",
                    "definition": "nlp/models/en-ner-organization.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "date_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "date_ss",
                    "definition": "nlp/models/en-ner-date.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "time_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "time_ss",
                    "definition": "nlp/models/en-ner-time.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "money_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "money_ss",
                    "definition": "nlp/models/en-ner-money.bin"
                  }
                ]
              },
              {
                "source": [
                  ".*"
                ],
                "target": "percentage_ss",
                "writeMode": "append",
                "sentenceModelLocation": "nlp/models/en-sent.bin",
                "tokenizerModelLocation": "nlp/models/en-token.bin",
                "entityTypes": [
                  {
                    "name": "percentage_ss",
                    "definition": "nlp/models/en-ner-percentage.bin"
                  }
                ]
              }
            ],
            "type": "nlp-extractor",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "open-nlp"
          },
          {
            "type": "field-mapping",
            "id": "1e542ceb-24e0-42de-a796-600df0f178e6",
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "type": "field-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "1e542ceb-24e0-42de-a796-600df0f178e6"
          },
          {
            "type": "solr-dynamic-field-name-mapping",
            "id": "0eab73ee-8fb6-43c9-948a-9d9c1a96f0a7",
            "duplicateSingleValuedFields": false,
            "fieldsToExclude": [],
            "advancedTextFieldsIndexing": true,
            "maxTextLengthForAdvancedIndexing": 100,
            "type": "solr-dynamic-field-name-mapping",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0eab73ee-8fb6-43c9-948a-9d9c1a96f0a7"
          },
          {
            "type": "solr-index",
            "id": "3edd16ac-c714-4b2d-97eb-f7e31c7d0b2a",
            "enforceSchema": true,
            "dateFormats": [],
            "params": [],
            "bufferDocsForSolr": false,
            "type": "solr-index",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "3edd16ac-c714-4b2d-97eb-f7e31c7d0b2a"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "nlp-pipeline"
        }
      }
    ],
    "queryPipelines": [
      {
        "id": "_system",
        "stages": [
          {
            "type": "solr-query",
            "id": "55965ad9-0c5d-4efc-98cd-a2b6367985bf",
            "allowedRequestHandlers": [
              "select",
              "query",
              "update"
            ],
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "55965ad9-0c5d-4efc-98cd-a2b6367985bf"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "_system"
        }
      },
      {
        "id": "auth_fl-rules",
        "stages": [
          {
            "type": "javascript-query",
            "id": "u4",
            "script": "// imports\nvar Exception = java.lang.Exception;\nvar String = java.lang.String;\nvar StringBuilder = java.lang.StringBuilder;\nvar Arrays = java.util.Arrays;\nvar ArrayList = java.util.ArrayList;\nvar HashSet = java.util.HashSet;\nvar AuthorizationContextThreadLocal = com.lucidworks.apollo.security.AuthorizationContextThreadLocal;\n\n// ROLES_SOURCE specifies whether to formulate a filter using roles from the session,\n// or instead take them from the roles= query-param\nvar ROLES_SOURCE = \"session\"; // or \"query-param\"\n\n// SOLR_ROLES_FIELD specifies the field present on rule docs in Solr that contains a \n// rule's set of roles\nvar SOLR_ROLES_FIELD = \"groups\";\n\nfunction addRolesFilter(request, roles) {\n    if(roles.contains(\"rules-admin\")) {\n        // Rules-admin can see everything\n        return;\n    }\n\tvar fq = String.format(\"-%s:*\", SOLR_ROLES_FIELD);\n\tif (!roles.isEmpty()) {\n\t\tvar sb = new StringBuilder();\n\t\tfor (var i = 0; i < roles.size(); i++) {\n\t\t\tsb.append(roles.get(i));\n\t\t\t//if (i < (roles.size() - 1)) {\n\t\t\tsb.append(',');\n\t\t\t//}\n\t\t}\n        sb.append(\",rules-global\");\n\t\tfq = String.format(\"{!terms f='%s' v='%s'}\", SOLR_ROLES_FIELD, sb.toString());\n\t}\n\trequest.addParam(\"fq\", fq);\n}\n\nfunction getRoles(request) {\n\t// lookup the list of roles that go in the fq=\n\tvar roles = new ArrayList();\n\tswitch (ROLES_SOURCE) {\n\t\tcase \"session\":\n\t\t\t// simply use the set of roles granted to the current user\n\t\t\troles.addAll(AuthorizationContextThreadLocal.getOrDefault().getSubject().getRoles());\n\t\t\tif (request.hasParam(\"roles\")) {\n\t\t\t\tlogger.warn(\"Ignoring roles= query-param; ROLES_SOURCE is set to 'session'\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"query-param\":\n\t\t\tvar rolesParams = request.getParam(\"roles\");\n\t\t\tif (null != rolesParams) {\n\t\t\t\tfor (var i = 0; i < rolesParams.size(); i++) {\n\t\t\t\t\tvar rolesParam = rolesParams.get(i);\n\t\t\t\t\tif (null != rolesParam) {\n\t\t\t\t\t\t// split on comma\n\t\t\t\t\t\tvar rolesParamValues = Arrays.asList(rolesParam.split(\",\"));\n\t\t\t\t\t\tfor (var j = 0; j < rolesParamValues.size(); j++) {\n\t\t\t\t\t\t\troles.add(rolesParamValues.get(j));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Exception(\"Invalid ROLES_SOURCE; use either 'session' or 'query-param'\");\n\t}\n\tvar validRoles = new HashSet(); // might as well dedupe the roles\n\tfor (var q = 0; q < roles.size(); q++) {\n\t\tvar role = roles.get(q);\n\t\tif (null != role) {\n\t\t\trole = role.trim();\n\t\t\tif (role.startsWith(\"rules-\")) {\n\t\t\t\tvalidRoles.add(role);\n\t\t\t} else if(role.equals(\"admin\")) {\n                validRoles.add(\"rules-admin\");\n            }\n\t\t}\n\t}\n\treturn new ArrayList(validRoles);\n}\n\n// add the roles filter to the request\naddRolesFilter(request, getRoles(request));\n",
            "type": "javascript-query",
            "skip": false,
            "label": "Role Based Security ",
            "licensed": true,
            "secretSourceStageId": "u4"
          },
          {
            "type": "recommendation",
            "id": "f14b7be2-6f52-42a5-b2ef-bdc005f91824",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "*",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "bq",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "f14b7be2-6f52-42a5-b2ef-bdc005f91824"
          },
          {
            "type": "search-fields",
            "id": "64e45d27-b1aa-452a-985d-164105356d28",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "64e45d27-b1aa-452a-985d-164105356d28"
          },
          {
            "type": "facet",
            "id": "ca90ae1a-a929-4f08-97fc-b70a3bc0886e",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "ca90ae1a-a929-4f08-97fc-b70a3bc0886e"
          },
          {
            "type": "solr-query",
            "id": "81833e57-e80e-419b-b9b2-03e515938f30",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "81833e57-e80e-419b-b9b2-03e515938f30"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "auth_fl-rules"
        }
      },
      {
        "id": "fl",
        "stages": [
          {
            "type": "recommendation",
            "id": "a06efbd1-6180-42f0-a161-c74ca9226efd",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "a06efbd1-6180-42f0-a161-c74ca9226efd"
          },
          {
            "type": "search-fields",
            "id": "4de3d002-6751-4738-95bb-9b934ba2d3c2",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4de3d002-6751-4738-95bb-9b934ba2d3c2"
          },
          {
            "type": "facet",
            "id": "f06864f4-7f60-4a34-b477-d828e8eaaa76",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "f06864f4-7f60-4a34-b477-d828e8eaaa76"
          },
          {
            "type": "solr-query",
            "id": "410b43f2-8ea9-404a-a7d2-add0413b76c2",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "410b43f2-8ea9-404a-a7d2-add0413b76c2"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl"
        }
      },
      {
        "id": "fl-3J2z",
        "stages": [
          {
            "type": "recommendation",
            "id": "bd865557-536d-44f1-89a8-43f914997d9b",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "bd865557-536d-44f1-89a8-43f914997d9b"
          },
          {
            "type": "search-fields",
            "id": "3965ed4d-f474-4115-aca8-d56de79fedbb",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "3965ed4d-f474-4115-aca8-d56de79fedbb"
          },
          {
            "type": "facet",
            "id": "e76cda64-f5d5-43ab-bfbf-f12c8b0ff048",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "e76cda64-f5d5-43ab-bfbf-f12c8b0ff048"
          },
          {
            "type": "solr-query",
            "id": "c0586934-f57f-448e-bff4-401da1ca3e92",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "c0586934-f57f-448e-bff4-401da1ca3e92"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-3J2z"
        }
      },
      {
        "id": "fl-4t9N",
        "stages": [
          {
            "type": "recommendation",
            "id": "0ab53bab-259e-4d76-a263-c1b745ff3a46",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "0ab53bab-259e-4d76-a263-c1b745ff3a46"
          },
          {
            "type": "search-fields",
            "id": "d0eb5b0a-78c4-45d3-a9c3-90dd26e7335e",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d0eb5b0a-78c4-45d3-a9c3-90dd26e7335e"
          },
          {
            "type": "facet",
            "id": "144f7d20-13dc-499f-8a88-a3b134157de8",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "144f7d20-13dc-499f-8a88-a3b134157de8"
          },
          {
            "type": "solr-query",
            "id": "8267d684-05b9-4905-aea3-7d00eca07bf7",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "8267d684-05b9-4905-aea3-7d00eca07bf7"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-4t9N"
        }
      },
      {
        "id": "fl-QGpm",
        "stages": [
          {
            "type": "recommendation",
            "id": "d12711f6-3739-40d1-a466-4a6427ac4e88",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d12711f6-3739-40d1-a466-4a6427ac4e88"
          },
          {
            "type": "search-fields",
            "id": "64998385-cb10-4c84-a15f-8f9ffe0f0c3f",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "64998385-cb10-4c84-a15f-8f9ffe0f0c3f"
          },
          {
            "type": "facet",
            "id": "07f1fb1e-8091-43fa-aa00-1accdf55cd47",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "07f1fb1e-8091-43fa-aa00-1accdf55cd47"
          },
          {
            "type": "solr-query",
            "id": "d1e08409-ebcf-4a64-9400-bbe4a711ed2a",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "d1e08409-ebcf-4a64-9400-bbe4a711ed2a"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-QGpm"
        }
      },
      {
        "id": "fl-full-index",
        "stages": [
          {
            "type": "recommendation",
            "id": "85bdfedf-edde-433d-ba8a-ac1b7c70614c",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "85bdfedf-edde-433d-ba8a-ac1b7c70614c"
          },
          {
            "type": "search-fields",
            "id": "060768cf-f503-40d7-b6e5-a537d9cce9b4",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "060768cf-f503-40d7-b6e5-a537d9cce9b4"
          },
          {
            "type": "facet",
            "id": "d413ad78-5842-445f-90a9-0d2f9243ae72",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d413ad78-5842-445f-90a9-0d2f9243ae72"
          },
          {
            "type": "solr-query",
            "id": "97e3ab5b-a04c-4b1f-b4e9-84e92ff6064c",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "97e3ab5b-a04c-4b1f-b4e9-84e92ff6064c"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index"
        }
      },
      {
        "id": "fl-full-index-eq0d",
        "stages": [
          {
            "type": "recommendation",
            "id": "8fb749e7-e924-43b6-86c6-3f0dc5e3f86c",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "8fb749e7-e924-43b6-86c6-3f0dc5e3f86c"
          },
          {
            "type": "search-fields",
            "id": "f07c9911-52a9-46d9-805e-240b28dfdbf4",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "f07c9911-52a9-46d9-805e-240b28dfdbf4"
          },
          {
            "type": "facet",
            "id": "959c7281-30a4-44f5-a439-d89c65854f06",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "959c7281-30a4-44f5-a439-d89c65854f06"
          },
          {
            "type": "solr-query",
            "id": "3ab52ed6-2be8-4969-822f-8001d072236e",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "3ab52ed6-2be8-4969-822f-8001d072236e"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index-eq0d"
        }
      },
      {
        "id": "fl-full-index-j21U",
        "stages": [
          {
            "type": "recommendation",
            "id": "17510c88-d15b-4f38-a064-36de8caea6f6",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "17510c88-d15b-4f38-a064-36de8caea6f6"
          },
          {
            "type": "search-fields",
            "id": "eb78fe40-8289-4aff-a229-41bdebb0df87",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "eb78fe40-8289-4aff-a229-41bdebb0df87"
          },
          {
            "type": "facet",
            "id": "4829b655-d2c3-4d5b-b7a5-8dbafb050ae7",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "4829b655-d2c3-4d5b-b7a5-8dbafb050ae7"
          },
          {
            "type": "solr-query",
            "id": "0d349bc1-6465-4ecb-beb7-39bbc822029f",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "0d349bc1-6465-4ecb-beb7-39bbc822029f"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-full-index-j21U"
        }
      },
      {
        "id": "fl-kEmK",
        "stages": [
          {
            "type": "recommendation",
            "id": "630e45a0-14f5-4e81-8547-5a1f3680e4e1",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "630e45a0-14f5-4e81-8547-5a1f3680e4e1"
          },
          {
            "type": "search-fields",
            "id": "b3d71ab1-5389-496d-90a3-61ecf4fe931e",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "b3d71ab1-5389-496d-90a3-61ecf4fe931e"
          },
          {
            "type": "facet",
            "id": "bd2ebb38-28c9-4b8d-adcc-9df34b320e3b",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "bd2ebb38-28c9-4b8d-adcc-9df34b320e3b"
          },
          {
            "type": "solr-query",
            "id": "c18db507-9b13-41ff-b445-f3d484f3f14c",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "c18db507-9b13-41ff-b445-f3d484f3f14c"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-kEmK"
        }
      },
      {
        "id": "fl-mVwi",
        "stages": [
          {
            "type": "recommendation",
            "id": "f285b9aa-4fba-4687-ab00-70cb5c2a7d48",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "f285b9aa-4fba-4687-ab00-70cb5c2a7d48"
          },
          {
            "type": "search-fields",
            "id": "c8de8dba-7981-4fe5-a21e-650fbb085ee2",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c8de8dba-7981-4fe5-a21e-650fbb085ee2"
          },
          {
            "type": "facet",
            "id": "c1417990-6d70-4ec2-8d8a-e2f44dc7c135",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "c1417990-6d70-4ec2-8d8a-e2f44dc7c135"
          },
          {
            "type": "solr-query",
            "id": "a95ceeb4-8244-4443-a7ab-699ddde7c8fc",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "a95ceeb4-8244-4443-a7ab-699ddde7c8fc"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-mVwi"
        }
      },
      {
        "id": "fl-rules",
        "stages": [
          {
            "type": "javascript-query",
            "id": "0j",
            "script": "//var System = java.lang.System;\n//logger.info(\"User Dir: \" + System.getProperties().getProperty(\"user.dir\");\n\n\n//load(\"rules-common.js\");\nlogger.info(\"RULES SECRUITY TRIMMING\");\n\nfunction userHasAccess() {\n    var JSONArray = org.json.JSONArray;\n    var JSONObject = org.json.JSONObject;\n    var iter = java.util.Iterator;\n    var e = java.lang.Exception;\n    var Exception = java.lang.Exception;\n    var String = java.lang.String;\n    var target = \"query-pipelines/\" + request.getParams().getFirst(\"lw.pipelineId\") + \"/collections\";\n    var hasPermission = false;\n    var api = \"http://fzcexfsnshdv01:8764/api/roles\";\n    try {\n        var userRole = \"\";\n        logger.info(\"PARAMS ROLE: \"+ request.getParams().get(\"fusion-user-role\"));\n        if (request.getHeaders().get(\"Fusion-User-Role\") !== null) {\n\n            var role = request.getHeaders().get(\"Fusion-User-Role\").get(0);\n            var content = getUrlRequestContent(api);\n            var json = new JSONArray(content);\n            var obj, perm, perms, methods, path;\n            if (json !== null) {\n                obj = getUserRole(json, role);\n                if (obj !== null) {\n\n                    perms = obj.getJSONArray(\"permissions\");\n                    for (var j = 0; j < perms.length(); j++) {\n                        perm = perms.getJSONObject(j);\n                        methods = perm.getJSONArray(\"methods\");\n                        path = perm.getString(\"path\");\n                        logger.info(\"Check Path: \" + path);\n                        if (methods.toString().contains(\"GET\")) {\n                            if (path.contains(target)\n                                    || path.equals(\"/**\")) { // user has permission if any are true\n\n                                hasPermission = true;\n                                break;\n                            }\n                        }\n                    }\n\n                } else {\n\n                    throw new Exception(\"Invalid Role:  \" + role);\n                }\n            } else {\n\n                throw new Exception(\"No roles found. \");\n            }\n\n        } else {\n            iter = request.getHeaders().keySet().iterator();\n            var k,v;\n            while(iter.hasNext()){\n                k = iter.next();\n                v = request.getHeaders().getFirst(k);\n                logger.info(\"Header Key: \"+k+\"  value: \"+v+\" \\n\");\n            }\n            throw new Exception(\"No role in header. \");\n        }\n\n        if (!hasPermission) {\n            logger.warn(\"403 UNAUTHORIZED ACCESS...\");\n            throw new Exception(\"403: Unauthorized. \");\n        } else {\n            logger.info(\"User has permission...\");\n        }\n\n    } catch (e) {\n        logger.error(e);\n    }\n\n    return hasPermission;\n\n}\n\n\nfunction getUrlRequestContent(url) {\n    var BufferedReader = java.io.BufferedReader;\n    var InputStreamReader = java.io.InputStreamReader;\n    var userAgent = org.apache.http.HttpHeaders.USER_AGENT;\n    var HttpResponse = org.apache.http.HttpResponse;\n    var HttpClient = org.apache.http.client.HttpClient;\n    var HttpGet = org.apache.http.client.methods.HttpGet;\n    var HttpClientBuilder = org.apache.http.impl.client.HttpClientBuilder;\n    var StringBuffer = java.lang.StringBuffer;\n    var BasicCredentialsProvider = org.apache.http.impl.client.BasicCredentialsProvider;\n    var UsernamePasswordCredentials = org.apache.http.auth.UsernamePasswordCredentials;\n    var AuthScope = org.apache.http.auth.AuthScope;\n    var String = java.lang.String;\n    var e = java.lang.Exception;\n    result = new StringBuffer();\n    try {\n\n        var provider = new BasicCredentialsProvider();\n        var credentials = new UsernamePasswordCredentials(\"<username>\", \"<password>\");\n        provider.setCredentials(AuthScope.ANY, credentials);\n        var client = HttpClientBuilder.create().setDefaultCredentialsProvider(provider).build();\n        var request = new HttpGet(url);\n        request.addHeader(\"User-Agent\", userAgent);\n        var response = client.execute(request);\n        logger.info(\"RESPONSE Code : \" + response.getStatusLine().getStatusCode());\n        var rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\n        var result = new StringBuffer();\n        var line = \"\";\n        while ((line = rd.readLine()) !== null) {\n            result.append(line);\n        }\n    } catch (e) {\n        logger.error(e);\n    }\n    logger.info(result);\n    return result.toString();\n}\n\nfunction getUserRole( json,  roleName) {\n     var JSONArray = org.json.JSONArray;\n    var JSONObject = org.json.JSONObject;\n        var temp = null;\n        if (json !== null) {\n            for (var i = 0; i < json.length(); i++) {\n                temp = json.getJSONObject(i);\n                if (temp.getString(\"name\").equals(roleName)) {\n                    return temp;\n                }\n            }\n        }\n        return null;\n    }\n\n\nlogger.info(\"CHECK USER ACCESS\");\nuserHasAccess();",
            "type": "javascript-query",
            "skip": true,
            "label": "Rules Security Trimming",
            "licensed": true,
            "secretSourceStageId": "0j"
          },
          {
            "type": "set-params",
            "id": "xplgcik9",
            "params": [
              {
                "key": "nowx",
                "value": "2016-03-14",
                "policy": "replace"
              },
              {
                "key": "tagsx",
                "value": "PROD",
                "policy": "default"
              },
              {
                "key": "tags_excludex",
                "value": "A",
                "policy": "append"
              },
              {
                "key": "defType",
                "value": "edismax",
                "policy": "default"
              },
              {
                "key": "enableElevation",
                "value": "true",
                "policy": "default"
              },
              {
                "key": "forceElevation",
                "value": "true",
                "policy": "default"
              },
              {
                "key": "fl",
                "value": "*,score,[elevated],[excluded]",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "Rules: Set up 'tags' and 'now'",
            "condition": "request.getFirstParam('rules') != 'off'",
            "licensed": true,
            "secretSourceStageId": "xplgcik9"
          },
          {
            "type": "javascript-query",
            "id": "n4jx17zf3bu766r",
            "script": "var main_q = request.getFirstParam('q');\nif (main_q != '*:*' && main_q != '*') {\n  request.putSingleParam('main_q',main_q);\n} \n\nvar filters = request.getParam('fq');\nif (filters.size != 0) { \n  request.putSingleParam(\"filters\", java.lang.String.join(',',filters));\n}\n\nvar headers = request.headers;\nrequest.addParam('username', headers.getFirst('fusion-user-name'));\nrequest.addParam('roles', headers.get(\"fusion-role-names\"));\nrequest.addParam(\"headers\", headers.toString());\nrequest.putSingleParamIfAbsent('now', (new Date()).toISOString());\nrequest.putSingleParamIfAbsent('wt', 'json');",
            "type": "javascript-query",
            "skip": false,
            "label": "Rules: Prepare sub-query",
            "condition": "request.getFirstParam('rules') != 'off'",
            "licensed": true,
            "secretSourceStageId": "n4jx17zf3bu766r"
          },
          {
            "type": "sub-query",
            "id": "35ndbo6r",
            "key": "applicable_rules_data",
            "collection": "fl_rules",
            "handler": "select",
            "method": "GET",
            "parentParams": [
              "username",
              "tags_exclude",
              "tags",
              "now",
              "main_q",
              "filters"
            ],
            "rollupKeys": [],
            "params": [
              {
                "key": "fq",
                "value": "-enabled:false"
              },
              {
                "key": "q",
                "value": "{!lucene q.op=OR} {!switch v=$main_q case='-*:*' default=$keywords_q} {!switch v=$main_q case='-*:*' default=$contains_q} {!switch v=$main_q case='-*:*' default=$text_q} {!lucene v='*:* -search_terms:[* TO *]'}"
              },
              {
                "key": "keywords_q",
                "value": "(+{!field f='search_terms_keywords' v=$main_q} +matching:keywords)"
              },
              {
                "key": "contains_q",
                "value": "(+{!field f='search_terms_contains' v=$main_q} +matching:contains)"
              },
              {
                "key": "text_q",
                "value": "(+{!edismax qf='search_terms' v=$main_q} +matching:text)"
              },
              {
                "key": "fq",
                "value": "{!switch v=$filters case='*:* -filters:[* TO *]' default='{!lucene q.op=OR}{!terms f=filters v=$filters} (*:* -filters:[* TO *])'}"
              },
              {
                "key": "fq",
                "value": "(*:* -username:[* TO *]) OR {!field f=username v=$username}"
              },
              {
                "key": "fq",
                "value": "({!field f=effective_range v=$now} OR (*:* -effective_range:[* TO *]))"
              },
              {
                "key": "fq",
                "value": "{!switch v=$tags tag=tags case='*:*'  default='{!terms f=tags v=$tags}'}"
              },
              {
                "key": "fq",
                "value": "{!switch v=$tags_exclude tag=tags_exclude case='*:*'  default='-{!terms f=tags v=$tags_exclude}'}"
              },
              {
                "key": "facet",
                "value": "on"
              },
              {
                "key": "facet.sort",
                "value": "index"
              },
              {
                "key": "facet.field",
                "value": "{!key=drill_down_tags}tags"
              },
              {
                "key": "facet.missing",
                "value": "true"
              },
              {
                "key": "facet.field",
                "value": "{!ex=tags,tags_exclude}tags"
              },
              {
                "key": "debug",
                "value": "true"
              }
            ],
            "headers": [],
            "type": "sub-query",
            "skip": false,
            "label": "Rules: Retrieve Effective",
            "condition": "request.getFirstParam('rules') != 'off'",
            "licensed": true,
            "secretSourceStageId": "35ndbo6r"
          },
          {
            "type": "javascript-query",
            "id": "y5j",
            "script": "// this is some code for ripping out signals created `bq`'s and turning it into QueryElevationComponent elevateIds\n\nfunction getSortedKeys(obj) {\n    var keys = []; for(var key in obj) keys.push(key);\n    return keys.sort(function(a,b){return obj[b]-obj[a]});\n}\n\n//request.addParam('bq',\"id:3^7.1836734694\");  // dummy data to test with\n//request.addParam('bq',\"id:2^11.77551020408\");\n\nvar elevate_map = {};\n\nif (request.hasParam('bq')) {\n  var bqs = request.getParam('bq');\n  if (bqs) {\n    var i=0;\n    for (var n in bqs) {\n      var bq = bqs[n];\n      \n      var colon_pos = bq.indexOf(':');\n      var carat_pos = bq.indexOf('^');\n      var id = bq.substring(colon_pos+1,carat_pos);\n      var boost = bq.substring(carat_pos+1);\n      elevate_map[id] = boost;\n      \n      // request.putSingleParam(\"x\"+i, id + \" === \" + boost);  // debugging\n      i++;\n    }\n  }\n}\n\nrequest.putSingleParam('elevateIds', getSortedKeys(elevate_map).join(','));\n\n// forceElevation elevates and leverages 'sort' for the rest; if false sort would overrule and no elevation\nrequest.putSingleParam('forceElevation','true');",
            "type": "javascript-query",
            "skip": true,
            "label": "signals-to-QEC",
            "licensed": true,
            "secretSourceStageId": "y5j"
          },
          {
            "type": "set-params",
            "id": "lvo",
            "params": [
              {
                "key": "fq",
                "value": "{!collapse field=model_number_s}",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "Collapse",
            "licensed": true,
            "secretSourceStageId": "lvo"
          },
          {
            "type": "javascript-query",
            "id": "89kvs4i",
            "script": "// boost_mode: Controls how boost_list and filter_list Solr parameters are generated\n//    'go_big': Sets constant scores for the items listed to a large value, leaving the original query in the\n//              query to score naturally.   This is the simplest query generation available, and will work\n//              assuming the natural scores of the unlisted matching documents is below the lowest boosted item.\n//              This is the default.   NOTE: natural scores could potentially go higher than the boosted items.\n//    'scale':  Generates the same constant scores as 'go_big', and scales the scores of the natural query matches well under\n//              the smallest constant score value.   This generates a more complex query, and less performant, than 'go_big'.\n//    'qec':    Generates boosting parameters used by the Solr QueryElevationComponent.   This requires QEC to be added to /select\n//              in solrconfig.xml.   NOTE: this requires all boost_list rules use `id` field.\nvar boost_mode = 'go_big';  \n\nfunction set_rules_ordered_q(rule_doc) {\n  var rules_ordered_q = '';\n  var scale_val=1000000;\n  for(var val_index=0; val_index < rule_doc.field_values.size(); val_index++) {\n    var item_param = 'rules_item_' + val_index;  // TODO: unique this param by rule id?\n    request.putSingleParam(item_param, rule_doc.field_values[val_index]);\n    rules_ordered_q += \"({!term f=\" + rule_doc.field_name + \" v=$\" + item_param + \"})^=\" + scale_val + ' ';\n    scale_val -= 1;\n  }\n  \n  request.putSingleParam('rules_ordered_q', rules_ordered_q);\n}\n\n\n//var ST = Java.type('org.stringtemplate.v4.ST');\n//var template = new ST('context: <context> :: request: <request.firstParam(\"main_q\")>');\n//template.add('context',context);\n//template.add('request',request);\n//request.putSingleParam(\"ST\",template.render());\n\nif (!ctx.hasProperty('applicable_rules')) { exit; }\n// TODO: or if rules numFound == 0?\n// TODO: set some context data if no rules data or zero rules?\n\nvar applicable_rules_data = ctx.getProperty('applicable_rules_data');\n\nvar rules_to_exclude = request.getParam('rules.exclude');\n\n// Arrays of things to put into response (by way of the ctx/context and the post-Solr stage)\nvar rules_response = {\n  \"excluded_rules\": [],\n  \"banners\": [],\n  \"redirects\": [],\n  \"applicable_rules\": [],\n  \"applicable_rules_ids\": [],\n  \"applicable_rules_debug\": [],\n  \"applied_rules_ids\": [],\n  \"rules_errors\": []\n};\n\nif (applicable_rules_data.response.docs.size() != applicable_rules_data.response.numFound) {\n   rules_response[\"rules_errors\"].push((\"Not all matched rules processed: size=\" + applicable_rules_data.response.docs.size() + \" numFound=\" + applicable_rules_data.response.numFound).toString());\n}\n\nfor(var rule_index=0; rule_index < applicable_rules_data.response.docs.size(); rule_index++) {\n  var rule_doc = applicable_rules_data.response.docs[rule_index];\n  rules_response[\"applicable_rules_ids\"].push(rule_doc.id);\n  rules_response[\"applicable_rules\"].push(rule_doc);\n  rules_response[\"applicable_rules_debug\"].push(rule_doc.toString());\n  var excluded = false;\n\n  if (rules_to_exclude) {\n    // TODO: optimize this check, add support for comma-separated values too\n    for (var i=0; i < rules_to_exclude.size(); i++) {\n      if (rule_doc.id == rules_to_exclude[i]) {\n        excluded = true;\n        rules_response[\"excluded_rules\"].push(rules_to_exclude[i]);\n        break;\n      }\n    }\n  }\n\n  if (!excluded) {\n    rules_response[\"applied_rules_ids\"].push(rule_doc.id);\n\n    var rule_type = rule_doc.type;\n    \n    // Add response values - every rule type can have multivalued parallel keys/values values\n    if (rule_doc.keys) {\n      for (var kx=0; kx < rule_doc.keys.size(); kx++) {\n        if (!rules_response[rule_doc.keys[kx]]) { rules_response[rule_doc.keys[kx]] = []; }\n        rules_response[rule_doc.keys[kx]].push(rule_doc.values[kx]);\n      }\n    }\n\n    switch (rule_type) {\n      case 'response_value':   // e.g. key=\"banner\", \"redirect\"... etc\n        // response values evolved to being available for all rule types, but if all you\n        // want to do is set a banner this placeholder type suffices\n        break;\n\n      case 'set_params':\n        for (var px=0; px < rule_doc.param_keys.size(); px++) {\n\n          switch (rule_doc.param_policies[px]) {\n            case 'append':\n              request.addParam(rule_doc.param_keys[px], rule_doc.param_values[px]);\n              break\n\n            case 'replace':\n              request.putSingleParam(rule_doc.param_keys[px], rule_doc.param_values[px]);\n              break\n          }\n        }\n        break;\n\n      case 'query_rewrite':\n        // effectively same as a set_params replace of q\n        if (rule_doc.new_q) { request.putSingleParam(\"q\", rule_doc.new_q[0]); }\n        break;\n\n      case 'boost':\n        // boost_param=bq, boost_query=id:2^5\n        // effectively same as a set_params append of boost or bq.\n        request.addParam(rule_doc.boost_param, rule_doc.boost_query);\n        break;\n\n      case 'block_list':\n        request.addParam(\"fq\", \"-{!terms f=\" + rule_doc.field_name + \"}\" + Java.type('java.lang.String').join(',',rule_doc.field_values));\n        break;\n\n      case 'filter_list':\n        // effectively same as set_params append of an fq, and a replace of q with `field_name:val1^=N... field_name:valN^=1` (when not using QEC)\n        request.addParam(\"fq\", \"{!terms f=\" + rule_doc.field_name + \"}\" + Java.type('java.lang.String').join(',',rule_doc.field_values));\n\n        if (boost_mode=='qec') {\n          request.addParam('elevateIds',Java.type('java.lang.String').join(',',rule_doc.field_values));\n        } else {\n          // 'go_big' or 'scale' - same difference for a filter_list, since we ignore the actual `q`\n          set_rules_ordered_q(rule_doc);\n          request.putSingleParam('q','{!lucene v=$rules_ordered_q}');\n        }\n\n        break;\n\n     case 'boost_list':\n        if (boost_mode=='qec') {\n          // TODO: need to collect all boost_list rules together and make one list - Solr doesn't process multiple elevateIds it seems\n          request.addParam('elevateIds',Java.type('java.lang.String').join(',',rule_doc.field_values));\n        } else {\n          // 'go_big' or 'scale'...\n          var orig_q = request.getFirstParam('q');\n          request.putSingleParam('orig_q',orig_q);\n          \n          if (boost_mode=='scale') {\n            request.putSingleParam('orig_score','query({!edismax v=$orig_q})');\n            request.putSingleParam('orig_scaled','scale($orig_score,1,999)');\n        \n            set_rules_ordered_q(rule_doc);\n            request.putSingleParam('q','{!lucene}({!lucene v=$rules_ordered_q}) (-({!lucene v=$rules_ordered_q}) ({!edismax v=$orig_q}^0.0 AND {!func v=$orig_scaled}))');\n          }\n          else {\n            // 'go_big'\n\n            set_rules_ordered_q(rule_doc);\n            request.putSingleParam('q','{!lucene}({!lucene v=$rules_ordered_q}) (-({!lucene v=$rules_ordered_q}) ({!edismax v=$orig_q}))');\n          }\n        }\n\n        break;\n\n      default:\n        rules_response[\"rules_errors\"].push((\"Unknown rule type '\" + rule_type + \"' on rule \" + rule_doc.id).toString());\n        break;\n    }\n  }\n}\n\n// log (by way of Solr request params) the rules just applied\nrequest.putParams(\"applied_rules_id\", rules_response[\"applied_rules_ids\"]);\n\nctx.setProperty(\"rules_response\", rules_response);",
            "type": "javascript-query",
            "skip": false,
            "label": "Rules: Process",
            "condition": "request.getFirstParam('rules') != 'off'",
            "licensed": true,
            "secretSourceStageId": "89kvs4i"
          },
          {
            "type": "solr-query",
            "id": "a61410a0-6090-4cb5-9a19-50338531c15b",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "label": "solr-query",
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "a61410a0-6090-4cb5-9a19-50338531c15b"
          },
          {
            "type": "javascript-query",
            "id": "ipco9a4i",
            "script": "var ArrayList = Java.type('java.util.ArrayList');\n\nfunction add_to_response(key, list) {\n  if (list.length > 0) {\n    var al = new ArrayList();   \n    for (var i=0; i < list.length; i++) {\n      al.add(list[i]);\n    }\n    response.initialEntity.appendStringList(key, al);\n  }\n}\n\nvar rules_response = ctx.getProperty('rules_response')\nif (rules_response) {\n  for (var k in rules_response) {\n    \n    // 'applicable_rules' is not an array of strings, but rather an array of objects (Solr docs as JS associative array)\n//    if (k == 'applicable_rules') { continue; }\n\n    add_to_response(k, rules_response[k]);\n  }\n\n  // Duplicate redirect responses to supported landing-pages\n  if (rules_response['redirect']) {\n    add_to_response('landing-pages', rules_response['redirect']);\n  }\n}\n\n// This only works with JSON response format (wt=json); TODO: maybe convert the data to JSON and emit as a string?\n//response.initialEntity.appendObject('applicable_rules_data', ctx.getProperty('applicable_rules_data')); \n\n",
            "type": "javascript-query",
            "skip": false,
            "label": "Rules: Augment Response",
            "condition": "request.getFirstParam('rules') != 'off'",
            "licensed": true,
            "secretSourceStageId": "ipco9a4i"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-rules"
        }
      },
      {
        "id": "fl-typeahead-ds",
        "stages": [
          {
            "type": "set-params",
            "id": "hp",
            "params": [
              {
                "key": "omitHeader",
                "value": "true",
                "policy": "append"
              },
              {
                "key": "fl",
                "value": "id,type:Product_Type_s,name:name_txt_en_split,availableinventory_b,deltaFlag:Delta_Flag_i,time:ms()",
                "policy": "append"
              },
              {
                "key": "wt",
                "value": "csv",
                "policy": "append"
              },
              {
                "key": "fq",
                "value": "{!collapse field=model_number_s}",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "Sets Required Parameter",
            "licensed": true,
            "secretSourceStageId": "hp"
          },
          {
            "type": "recommendation",
            "id": "70b8391d-3e30-4dfa-95db-00a5709d4337",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "70b8391d-3e30-4dfa-95db-00a5709d4337"
          },
          {
            "type": "search-fields",
            "id": "2e914c59-dcf0-4df6-84c9-24229e1abcd8",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "2e914c59-dcf0-4df6-84c9-24229e1abcd8"
          },
          {
            "type": "set-params",
            "id": "70q",
            "params": [
              {
                "key": "fq",
                "value": "{!collapse field=model_number_s}",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": true,
            "label": "collapse names for typeahead",
            "licensed": true,
            "secretSourceStageId": "70q"
          },
          {
            "type": "facet",
            "id": "157b5aa2-cf05-40f4-b6ff-8a5a755cb127",
            "fieldFacets": [],
            "type": "facet",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "157b5aa2-cf05-40f4-b6ff-8a5a755cb127"
          },
          {
            "type": "solr-query",
            "id": "f5ebf9eb-8fb1-4ff6-8628-529f152fb9b7",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "f5ebf9eb-8fb1-4ff6-8628-529f152fb9b7"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl-typeahead-ds"
        }
      },
      {
        "id": "fl_rules",
        "stages": [
          {
            "type": "recommendation",
            "id": "61901ab5-558c-461e-be4d-7c5024ba3445",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "61901ab5-558c-461e-be4d-7c5024ba3445"
          },
          {
            "type": "search-fields",
            "id": "e4735a1f-a795-4610-8942-7fb6bb8ed7f3",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "e4735a1f-a795-4610-8942-7fb6bb8ed7f3"
          },
          {
            "type": "facet",
            "id": "23114942-c147-46d0-8832-cfde8acd1666",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "23114942-c147-46d0-8832-cfde8acd1666"
          },
          {
            "type": "solr-query",
            "id": "764054a0-2349-45f2-b006-58bdf49b9800",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "764054a0-2349-45f2-b006-58bdf49b9800"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_rules"
        }
      },
      {
        "id": "fl_signals",
        "stages": [
          {
            "type": "recommendation",
            "id": "a94479e9-2c53-4f8d-a3ed-5c90f0af35fa",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "a94479e9-2c53-4f8d-a3ed-5c90f0af35fa"
          },
          {
            "type": "search-fields",
            "id": "f32bcab9-d5d5-4a2f-85a8-3e5408f87967",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "f32bcab9-d5d5-4a2f-85a8-3e5408f87967"
          },
          {
            "type": "facet",
            "id": "adf7f258-a83f-433d-b834-2b54f370d6e0",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "adf7f258-a83f-433d-b834-2b54f370d6e0"
          },
          {
            "type": "solr-query",
            "id": "dd2d98ff-5930-4412-acbd-76b007404090",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "dd2d98ff-5930-4412-acbd-76b007404090"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_signals"
        }
      },
      {
        "id": "fl_signals_aggr",
        "stages": [
          {
            "type": "recommendation",
            "id": "fc075882-8756-4bcd-b0f7-acd3c467b1a1",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "fc075882-8756-4bcd-b0f7-acd3c467b1a1"
          },
          {
            "type": "search-fields",
            "id": "fbc2fcb8-356f-403b-a65e-d4fbd176d39b",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "fbc2fcb8-356f-403b-a65e-d4fbd176d39b"
          },
          {
            "type": "facet",
            "id": "42e28de8-9b2f-4458-ae25-a82f63138ad8",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "42e28de8-9b2f-4458-ae25-a82f63138ad8"
          },
          {
            "type": "solr-query",
            "id": "04a3c3c4-1a4a-4a79-a88c-f10356c4fc07",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "04a3c3c4-1a4a-4a79-a88c-f10356c4fc07"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_signals_aggr"
        }
      },
      {
        "id": "fl_typeahead",
        "stages": [
          {
            "type": "recommendation",
            "id": "f43c8bec-f4ec-48b9-b434-9d7bf70355c2",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "f43c8bec-f4ec-48b9-b434-9d7bf70355c2"
          },
          {
            "type": "search-fields",
            "id": "04dbc4f1-b743-4ade-9513-86e0d4e63959",
            "rows": 10,
            "start": 0,
            "sort": "score desc",
            "queryFields": [
              {
                "field": "name_edge",
                "boost": 20.0
              },
              {
                "field": "name_contains",
                "boost": 10.0
              }
            ],
            "returnFields": [
              "name",
              "type",
              "id",
              "model_number_s",
              "availableinventory_b",
              "score",
              "name*",
              "deltaFlag_i"
            ],
            "type": "search-fields",
            "skip": false,
            "label": "Query the typeahead fields",
            "licensed": true,
            "secretSourceStageId": "04dbc4f1-b743-4ade-9513-86e0d4e63959"
          },
          {
            "type": "set-params",
            "id": "ig",
            "params": [
              {
                "key": "fq",
                "value": "availableinventory_b:true",
                "policy": "append"
              },
              {
                "key": "fq",
                "value": "-deltaFlag_i:3",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "Filter Active Products Only",
            "licensed": true,
            "secretSourceStageId": "ig"
          },
          {
            "type": "facet",
            "id": "ecb9d17d-c581-4aae-ba63-a52a40b42bb7",
            "fieldFacets": [],
            "type": "facet",
            "skip": true,
            "licensed": true,
            "secretSourceStageId": "ecb9d17d-c581-4aae-ba63-a52a40b42bb7"
          },
          {
            "type": "solr-query",
            "id": "bcd6e4ad-32b5-4208-9bcc-07b563261091",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "bcd6e4ad-32b5-4208-9bcc-07b563261091"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead"
        }
      },
      {
        "id": "fl_typeahead-grouped",
        "stages": [
          {
            "type": "set-params",
            "id": "g6wdn29",
            "params": [
              {
                "key": "group",
                "value": "on",
                "policy": "default"
              },
              {
                "key": "group.sort",
                "value": "score desc",
                "policy": "default"
              },
              {
                "key": "group.limit",
                "value": "10",
                "policy": "default"
              },
              {
                "key": "group.field",
                "value": "type",
                "policy": "default"
              },
              {
                "key": "spellcheck.maxCollations",
                "value": "5",
                "policy": "default"
              },
              {
                "key": "spellcheck.maxCollationTries",
                "value": "10",
                "policy": "default"
              },
              {
                "key": "spellcheck.maxResultsForSuggest",
                "value": "50",
                "policy": "default"
              },
              {
                "key": "spellcheck.collateExtendedResults",
                "value": "true",
                "policy": "default"
              },
              {
                "key": "spellcheck.dictionary",
                "value": "default",
                "policy": "default"
              },
              {
                "key": "spellcheck.extendedResults",
                "value": "true",
                "policy": "default"
              },
              {
                "key": "spellcheck.count",
                "value": "5",
                "policy": "default"
              },
              {
                "key": "spellcheck.alternativeTermCount",
                "value": "5",
                "policy": "default"
              },
              {
                "key": "spellcheck.collate",
                "value": "true",
                "policy": "default"
              },
              {
                "key": "spellcheck",
                "value": "on",
                "policy": "default"
              },
              {
                "key": "hl.fl",
                "value": "name,name_en,name_edge,name_contains,synonyms,name_no_vowels,name_phonetic_en",
                "policy": "default"
              },
              {
                "key": "hl",
                "value": "on",
                "policy": "default"
              },
              {
                "key": "defType",
                "value": "edismax",
                "policy": "default"
              },
              {
                "key": "qf",
                "value": "name name_en synonyms name_edge",
                "policy": "default"
              },
              {
                "key": "sort",
                "value": "type desc",
                "policy": "default"
              },
              {
                "key": "fl",
                "value": "*,id,name,type,score,bbby_*",
                "policy": "append"
              },
              {
                "key": "mm",
                "value": "100%",
                "policy": "default"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "set-params",
            "licensed": true,
            "secretSourceStageId": "g6wdn29"
          },
          {
            "type": "set-params",
            "id": "g91",
            "params": [
              {
                "key": "fq",
                "value": "availableinventory_b:true",
                "policy": "append"
              }
            ],
            "type": "set-params",
            "skip": false,
            "label": "Filter Active Products Only",
            "licensed": true,
            "secretSourceStageId": "g91"
          },
          {
            "type": "facet",
            "id": "xidlsor",
            "fieldFacets": [
              {
                "field": "type",
                "minCount": 1,
                "missing": false
              }
            ],
            "type": "facet",
            "skip": true,
            "label": "facet",
            "licensed": true,
            "secretSourceStageId": "xidlsor"
          },
          {
            "type": "solr-query",
            "id": "7gxbhuxr",
            "allowedRequestHandlers": [
              "file",
              "hub",
              "browse",
              "spell"
            ],
            "httpMethod": "GET",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "label": "solr-query",
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "7gxbhuxr"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead-grouped"
        }
      },
      {
        "id": "fl_typeahead_signals",
        "stages": [
          {
            "type": "recommendation",
            "id": "10af1709-6fd1-468d-87e0-cee1df18ec09",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "10af1709-6fd1-468d-87e0-cee1df18ec09"
          },
          {
            "type": "search-fields",
            "id": "96e43cb6-49ca-4e52-8334-abceaea78195",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "96e43cb6-49ca-4e52-8334-abceaea78195"
          },
          {
            "type": "facet",
            "id": "6fa91439-9d7d-438c-8008-e18b8e358b55",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "6fa91439-9d7d-438c-8008-e18b8e358b55"
          },
          {
            "type": "solr-query",
            "id": "75dcfcd4-8415-4870-85e3-c050ffb97856",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "75dcfcd4-8415-4870-85e3-c050ffb97856"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead_signals"
        }
      },
      {
        "id": "fl_typeahead_signals_aggr",
        "stages": [
          {
            "type": "recommendation",
            "id": "eb3f7f69-d01f-48ef-87cd-64d770e55f56",
            "numRecommendations": 10,
            "numSignals": 100,
            "aggrType": "click@doc_id,filters,query",
            "boostId": "id",
            "boostingMethod": "query-param",
            "boostingParam": "boost",
            "queryParams": [
              {
                "key": "qf",
                "value": "query_t"
              },
              {
                "key": "pf",
                "value": "query_t^50"
              },
              {
                "key": "pf",
                "value": "query_t~3^20"
              },
              {
                "key": "pf2",
                "value": "query_t^20"
              },
              {
                "key": "pf2",
                "value": "query_t~3^10"
              },
              {
                "key": "pf3",
                "value": "query_t^10"
              },
              {
                "key": "pf3",
                "value": "query_t~3^5"
              },
              {
                "key": "boost",
                "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
              },
              {
                "key": "mm",
                "value": "50%"
              },
              {
                "key": "defType",
                "value": "edismax"
              },
              {
                "key": "sort",
                "value": "score desc, weight_d desc"
              }
            ],
            "rollupField": "doc_id_s",
            "rollupWeightField": "weight_d",
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)",
            "rollupWeightStrategy": "max",
            "type": "recommendation",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "eb3f7f69-d01f-48ef-87cd-64d770e55f56"
          },
          {
            "type": "search-fields",
            "id": "56afa15c-f38b-447f-a4f6-3a690fc5fb32",
            "rows": 10,
            "start": 0,
            "queryFields": [],
            "returnFields": [
              "*",
              "score"
            ],
            "type": "search-fields",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "56afa15c-f38b-447f-a4f6-3a690fc5fb32"
          },
          {
            "type": "facet",
            "id": "5a8ce357-7952-43f2-ba2b-3cfaaefcb9d5",
            "fieldFacets": [],
            "type": "facet",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "5a8ce357-7952-43f2-ba2b-3cfaaefcb9d5"
          },
          {
            "type": "solr-query",
            "id": "fd1380ae-208b-473c-adf0-18fd68971932",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "fd1380ae-208b-473c-adf0-18fd68971932"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "fl_typeahead_signals_aggr"
        }
      },
      {
        "id": "related-items",
        "stages": [
          {
            "type": "more-like-this",
            "id": "d4dfb448-8206-4dbb-91ec-97b231aef54f",
            "moreLikeThisFields": [],
            "useQueryParser": true,
            "mindf": 2,
            "maxdf": 10000,
            "minwl": 3,
            "docId": "id",
            "type": "more-like-this",
            "skip": false,
            "licensed": true,
            "secretSourceStageId": "d4dfb448-8206-4dbb-91ec-97b231aef54f"
          },
          {
            "type": "solr-query",
            "id": "d16e0bad-292f-499b-8078-6191ddb03c1c",
            "httpMethod": "POST",
            "allowFederatedSearch": false,
            "type": "solr-query",
            "skip": false,
            "responseSignalsEnabled": true,
            "licensed": true,
            "secretSourceStageId": "d16e0bad-292f-499b-8078-6191ddb03c1c"
          }
        ],
        "properties": {
          "secretSourcePipelineId": "related-items"
        }
      }
    ],
    "features": {
      "fl": [
        {
          "name": "partitionByTime",
          "collectionId": "fl",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl",
          "params": {},
          "enabled": true
        },
        {
          "name": "signals",
          "collectionId": "fl",
          "params": {},
          "enabled": true
        }
      ],
      "fl-full-index": [
        {
          "name": "partitionByTime",
          "collectionId": "fl-full-index",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl-full-index",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl-full-index",
          "params": {},
          "enabled": true
        },
        {
          "name": "signals",
          "collectionId": "fl-full-index",
          "params": {},
          "enabled": true
        }
      ],
      "fl-full-index_signals": [
        {
          "name": "partitionByTime",
          "collectionId": "fl-full-index_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl-full-index_signals",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl-full-index_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl-full-index_signals",
          "params": {},
          "enabled": false
        }
      ],
      "fl-full-index_signals_aggr": [
        {
          "name": "partitionByTime",
          "collectionId": "fl-full-index_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl-full-index_signals_aggr",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl-full-index_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl-full-index_signals_aggr",
          "params": {},
          "enabled": false
        }
      ],
      "fl_signals": [
        {
          "name": "partitionByTime",
          "collectionId": "fl_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl_signals",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl_signals",
          "params": {},
          "enabled": false
        }
      ],
      "fl_signals_aggr": [
        {
          "name": "partitionByTime",
          "collectionId": "fl_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl_signals_aggr",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl_signals_aggr",
          "params": {},
          "enabled": false
        }
      ],
      "fl_typeahead": [
        {
          "name": "partitionByTime",
          "collectionId": "fl_typeahead",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl_typeahead",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl_typeahead",
          "params": {},
          "enabled": true
        },
        {
          "name": "signals",
          "collectionId": "fl_typeahead",
          "params": {},
          "enabled": false
        }
      ],
      "fl_typeahead_signals": [
        {
          "name": "partitionByTime",
          "collectionId": "fl_typeahead_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl_typeahead_signals",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl_typeahead_signals",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl_typeahead_signals",
          "params": {},
          "enabled": false
        }
      ],
      "fl_typeahead_signals_aggr": [
        {
          "name": "partitionByTime",
          "collectionId": "fl_typeahead_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "recommendations",
          "collectionId": "fl_typeahead_signals_aggr",
          "params": {
            "idField": "id",
            "itemsForUser": true,
            "itemsForQuery": false,
            "itemsForItem": true,
            "queriesForQuery": false
          },
          "enabled": false
        },
        {
          "name": "searchLogs",
          "collectionId": "fl_typeahead_signals_aggr",
          "params": {},
          "enabled": false
        },
        {
          "name": "signals",
          "collectionId": "fl_typeahead_signals_aggr",
          "params": {},
          "enabled": false
        }
      ]
    },
    "indexProfiles": [
      {
        "id": "fl",
        "indexPipeline": "fl",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-1ZyZ",
        "indexPipeline": "fl-fFp3",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-4Kl3",
        "indexPipeline": "fl-gGjF",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-FEOZ",
        "indexPipeline": "fl-0Bai",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-MIDD",
        "indexPipeline": "fl-I5Kk",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-d1Kr",
        "indexPipeline": "fl-aPWm",
        "collection": "fl",
        "parser": "fl",
        "params": []
      },
      {
        "id": "fl-full-index",
        "indexPipeline": "fl-full-index",
        "collection": "fl-full-index",
        "params": []
      },
      {
        "id": "fl-full-index-Rl25",
        "indexPipeline": "fl-full-index-IPW2",
        "collection": "fl-full-index",
        "params": []
      },
      {
        "id": "fl-full-index-jvyA",
        "indexPipeline": "fl-full-index-FlZf",
        "collection": "fl-full-index",
        "params": []
      },
      {
        "id": "fl-update-ip",
        "indexPipeline": "fl_partial_update",
        "collection": "fl",
        "parser": "fl",
        "params": [
          {
            "key": "overwrite",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "versions",
            "value": "true",
            "policy": "append"
          }
        ]
      },
      {
        "id": "fl_rules",
        "indexPipeline": "fl_rules",
        "collection": "fl_rules",
        "params": []
      },
      {
        "id": "fl_signals",
        "indexPipeline": "fl_signals",
        "collection": "fl_signals",
        "params": []
      },
      {
        "id": "fl_signals_aggr",
        "indexPipeline": "fl_signals_aggr",
        "collection": "fl_signals_aggr",
        "params": []
      },
      {
        "id": "fl_typeahead",
        "indexPipeline": "fl_typeahead",
        "collection": "fl_typeahead",
        "params": []
      },
      {
        "id": "fl_typeahead_signals",
        "indexPipeline": "fl_typeahead_signals",
        "collection": "fl_typeahead_signals",
        "params": []
      },
      {
        "id": "fl_typeahead_signals_aggr",
        "indexPipeline": "fl_typeahead_signals_aggr",
        "collection": "fl_typeahead_signals_aggr",
        "params": []
      }
    ],
    "queryProfiles": [
      {
        "id": "DELETE_fl_typeahead_qp",
        "queryPipeline": "common-typeahead-search",
        "collection": "fl",
        "searchHandler": "select",
        "params": [
          {
            "key": "group.limit",
            "value": "3",
            "policy": "append"
          },
          {
            "key": "json.nl",
            "value": "arrarr",
            "policy": "append"
          },
          {
            "key": "wt",
            "value": "json",
            "policy": "append"
          },
          {
            "key": "start",
            "value": "0",
            "policy": "replace"
          },
          {
            "key": "rows",
            "value": "10",
            "policy": "replace"
          },
          {
            "key": "echoParams",
            "value": "none",
            "policy": "append"
          },
          {
            "key": "hl",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "hl.fl",
            "value": "name_contains,name_edge",
            "policy": "append"
          },
          {
            "key": "hl.simple.pre",
            "value": "",
            "policy": "replace"
          },
          {
            "key": "hl.simple.post",
            "value": "",
            "policy": "replace"
          }
        ]
      },
      {
        "id": "fl",
        "queryPipeline": "fl",
        "collection": "fl",
        "searchHandler": "/select",
        "params": [
          {
            "key": "start",
            "value": "0",
            "policy": "default"
          },
          {
            "key": "echoParam",
            "value": "all",
            "policy": "append"
          },
          {
            "key": "wt",
            "value": "json",
            "policy": "append"
          },
          {
            "key": "json.nl",
            "value": "arrarr",
            "policy": "append"
          },
          {
            "key": "facet.mincount",
            "value": "1",
            "policy": "append"
          },
          {
            "key": "spellcheck.collate",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "spellcheck.maxCollations",
            "value": "1",
            "policy": "default"
          },
          {
            "key": "fl",
            "value": "name_txt_en_split,onSale_b,sku_s,imageUrlLarge_s,imageUrlSmall_s,price_style_original_price_f,price_style_sale_price_f,style_s,launchproduct_b,map_enabled_b,isnewarrival_b,isavailableinstore_b",
            "policy": "append"
          }
        ]
      },
      {
        "id": "fl-3CHz",
        "queryPipeline": "fl-mVwi",
        "collection": "fl",
        "searchHandler": "/select"
      },
      {
        "id": "fl-4JSC",
        "queryPipeline": "fl-kEmK",
        "collection": "fl",
        "searchHandler": "/select"
      },
      {
        "id": "fl-full-index",
        "queryPipeline": "fl-full-index",
        "collection": "fl-full-index",
        "searchHandler": "/select"
      },
      {
        "id": "fl-full-index-2o6z",
        "queryPipeline": "fl-full-index-eq0d",
        "collection": "fl-full-index",
        "searchHandler": "/select"
      },
      {
        "id": "fl-full-index-h7Aq",
        "queryPipeline": "fl-full-index-j21U",
        "collection": "fl-full-index",
        "searchHandler": "/select"
      },
      {
        "id": "fl-g4KG",
        "queryPipeline": "fl-QGpm",
        "collection": "fl",
        "searchHandler": "/select"
      },
      {
        "id": "fl-indexing-updates",
        "queryPipeline": "index-property-update",
        "collection": "fl",
        "searchHandler": "select",
        "params": [
          {
            "key": "q",
            "value": "*:*",
            "policy": "append"
          },
          {
            "key": "echoParams",
            "value": "None",
            "policy": "append"
          }
        ]
      },
      {
        "id": "fl-query-qp",
        "queryPipeline": "_system",
        "collection": "fl",
        "searchHandler": "query",
        "params": [
          {
            "key": "echoParams",
            "value": "none",
            "policy": "replace"
          },
          {
            "key": "facet.mincount",
            "value": "1",
            "policy": "append"
          },
          {
            "key": "facet.limit",
            "value": "-1",
            "policy": "append"
          }
        ]
      },
      {
        "id": "fl-rPYN",
        "queryPipeline": "fl-4t9N",
        "collection": "fl",
        "searchHandler": "/select"
      },
      {
        "id": "fl-ta-pull-qp",
        "queryPipeline": "fl-typeahead-ds",
        "collection": "fl",
        "searchHandler": "select",
        "params": [
          {
            "key": "q",
            "value": "*:*",
            "policy": "default"
          },
          {
            "key": "rows",
            "value": "999999",
            "policy": "default"
          }
        ]
      },
      {
        "id": "fl-v0cc",
        "queryPipeline": "fl-3J2z",
        "collection": "fl",
        "searchHandler": "/select"
      },
      {
        "id": "fl_qp",
        "queryPipeline": "banners-products-search",
        "collection": "fl",
        "searchHandler": "select",
        "params": [
          {
            "key": "start",
            "value": "0",
            "policy": "default"
          },
          {
            "key": "echoParam",
            "value": "all",
            "policy": "append"
          },
          {
            "key": "wt",
            "value": "json",
            "policy": "append"
          },
          {
            "key": "json.nl",
            "value": "arrarr",
            "policy": "append"
          },
          {
            "key": "facet.mincount",
            "value": "1",
            "policy": "append"
          },
          {
            "key": "spellcheck.collate",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "spellcheck.maxCollations",
            "value": "1",
            "policy": "default"
          },
          {
            "key": "spellcheck",
            "value": "on",
            "policy": "append"
          },
          {
            "key": "optimize",
            "value": "true",
            "policy": "default"
          },
          {
            "key": "q",
            "value": "*:*",
            "policy": "default"
          },
          {
            "key": "banner",
            "value": "fl",
            "policy": "default"
          },
          {
            "key": "legacyFacet",
            "value": "off",
            "policy": "default"
          },
          {
            "key": "feature.signal",
            "value": "on",
            "policy": "replace"
          }
        ]
      },
      {
        "id": "fl_rules",
        "queryPipeline": "fl_rules",
        "collection": "fl_rules",
        "searchHandler": "/select"
      },
      {
        "id": "fl_signals",
        "queryPipeline": "fl_signals",
        "collection": "fl_signals",
        "searchHandler": "/select"
      },
      {
        "id": "fl_signals_aggr",
        "queryPipeline": "fl_signals_aggr",
        "collection": "fl_signals_aggr",
        "searchHandler": "/select"
      },
      {
        "id": "fl_typeahead",
        "queryPipeline": "fl_typeahead-grouped",
        "collection": "fl_typeahead",
        "searchHandler": "/select"
      },
      {
        "id": "fl_typeahead_qp",
        "queryPipeline": "banners-git-source-typeahead-search",
        "collection": "fl_typeahead",
        "searchHandler": "select",
        "params": [
          {
            "key": "group.limit",
            "value": "3",
            "policy": "append"
          },
          {
            "key": "json.nl",
            "value": "arrarr",
            "policy": "append"
          },
          {
            "key": "wt",
            "value": "json",
            "policy": "append"
          },
          {
            "key": "start",
            "value": "0",
            "policy": "replace"
          },
          {
            "key": "rows",
            "value": "10",
            "policy": "replace"
          },
          {
            "key": "echoParams",
            "value": "all",
            "policy": "append"
          },
          {
            "key": "hl",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "hl.fl",
            "value": "name_contains,name_edge",
            "policy": "append"
          },
          {
            "key": "hl.simple.pre",
            "value": "",
            "policy": "replace"
          },
          {
            "key": "hl.simple.post",
            "value": "",
            "policy": "replace"
          }
        ]
      },
      {
        "id": "fl_typeahead_qp-1",
        "queryPipeline": "common-typeahead-search-git-datasource",
        "collection": "fl_typeahead",
        "searchHandler": "select",
        "params": [
          {
            "key": "group.limit",
            "value": "3",
            "policy": "append"
          },
          {
            "key": "json.nl",
            "value": "arrarr",
            "policy": "append"
          },
          {
            "key": "wt",
            "value": "json",
            "policy": "append"
          },
          {
            "key": "start",
            "value": "0",
            "policy": "replace"
          },
          {
            "key": "rows",
            "value": "10",
            "policy": "replace"
          },
          {
            "key": "echoParams",
            "value": "none",
            "policy": "append"
          },
          {
            "key": "hl",
            "value": "true",
            "policy": "append"
          },
          {
            "key": "hl.fl",
            "value": "name_contains,name_edge",
            "policy": "append"
          },
          {
            "key": "hl.simple.pre",
            "value": "",
            "policy": "replace"
          },
          {
            "key": "hl.simple.post",
            "value": "",
            "policy": "replace"
          }
        ]
      },
      {
        "id": "fl_typeahead_signals",
        "queryPipeline": "fl_typeahead_signals",
        "collection": "fl_typeahead_signals",
        "searchHandler": "/select"
      },
      {
        "id": "fl_typeahead_signals_aggr",
        "queryPipeline": "fl_typeahead_signals_aggr",
        "collection": "fl_typeahead_signals_aggr",
        "searchHandler": "/select"
      }
    ],
    "parsers": [
      {
        "id": "_system",
        "enableMediaTypeDetection": true,
        "maxParserDepth": 16,
        "parserStages": [
          {
            "type": "archive",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "b2e70403-d27b-423c-98dd-5b7e8b324f4e",
            "alwaysDetect": true,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "csv",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "a24bb893-f463-4412-849b-bca61855612e",
            "charset": "detect",
            "ignoreBOM": false,
            "autoDetect": true,
            "hasHeaders": true,
            "headers": [],
            "fillValue": "<FILL>",
            "trimWhitespace": true,
            "skipEmptyLines": true,
            "includeRowNumber": true,
            "commentHandling": "ignore",
            "maxRowLength": 10485760,
            "maxNumColumns": 1000,
            "maxColumnChars": 10485760,
            "columnHandling": "default",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "json",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "29f469a1-4e8e-4bd2-be3b-171734c19676",
            "splitArrays": true,
            "includePath": false,
            "mappings": [],
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "xml",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "60f06610-f4ef-4f79-985e-1b4a4b3a0612",
            "rootPaths": [
              "/"
            ],
            "maxSize": 65536,
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "html",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "ee72b15f-21ba-45f5-9cd0-211c1605393b",
            "charset": "detect",
            "mappings": [],
            "keepParent": true,
            "extractHtmlLinks": false,
            "extractBodyText": true,
            "metatagsPrefix": "",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "text",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "d17f2ac3-4305-4e1b-a808-68544003879d",
            "charset": "detect",
            "ignoreBOM": false,
            "maxLength": 1048576,
            "maxLineLength": 1048576,
            "outputField": "body",
            "splitLines": false,
            "skipEmptyLines": false,
            "skipHeaderLines": 0,
            "trimWhitespace": false,
            "commentHandling": "include",
            "comment": "#",
            "commentField": "comment",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "tika",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "8b7ecfc1-5bf2-4523-8bca-c8923e266c6f",
            "includeImages": false,
            "flattenCompound": true,
            "addFailedDocs": false,
            "addOriginalContent": false,
            "contentEncoding": "binary",
            "returnXml": false,
            "keepOriginalStructure": false,
            "extractHtmlLinks": false,
            "extractOtherLinks": false,
            "excludeContentTypes": [],
            "zipBombCompressionRatio": 200,
            "zipBombMaxDepth": 200,
            "zipBombMaxPackageEntryDepth": 20,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "fallback",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "05ffcaff-bbdb-41a0-911f-8505ed7a5ee7",
            "metadataOnly": false,
            "maxBytesToKeep": 1048576,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          }
        ]
      },
      {
        "id": "fl",
        "enableMediaTypeDetection": true,
        "maxParserDepth": 16,
        "parserStages": [
          {
            "type": "archive",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043415500",
            "alwaysDetect": true,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "csv",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "2d6e8000-cdd0-46af-8950-e8a86f709ee4",
            "charset": "detect",
            "ignoreBOM": false,
            "autoDetect": true,
            "hasHeaders": true,
            "headers": [
              "name",
              "is_typeahead_b",
              "category_plp_url_s"
            ],
            "fillValue": "<FILL>",
            "trimWhitespace": true,
            "skipEmptyLines": true,
            "includeRowNumber": true,
            "commentHandling": "ignore",
            "maxRowLength": 10485760,
            "maxNumColumns": 1000,
            "maxColumnChars": 10485760,
            "columnHandling": "default",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "json",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043418987",
            "splitArrays": true,
            "includePath": false,
            "mappings": [],
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "xml",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043429777",
            "rootPaths": [
              "/"
            ],
            "maxSize": 65536,
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "html",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043456488",
            "charset": "detect",
            "mappings": [],
            "keepParent": true,
            "extractHtmlLinks": false,
            "extractBodyText": true,
            "metatagsPrefix": "false",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "text",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043467166",
            "charset": "detect",
            "ignoreBOM": false,
            "maxLength": 1048576,
            "maxLineLength": 1048576,
            "outputField": "body",
            "splitLines": false,
            "skipEmptyLines": false,
            "skipHeaderLines": 0,
            "trimWhitespace": false,
            "commentHandling": "include",
            "comment": "#",
            "commentField": "comment",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "tika",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043471485",
            "includeImages": false,
            "flattenCompound": false,
            "addFailedDocs": false,
            "addOriginalContent": false,
            "contentEncoding": "binary",
            "returnXml": false,
            "keepOriginalStructure": false,
            "extractHtmlLinks": true,
            "extractOtherLinks": false,
            "excludeContentTypes": [],
            "zipBombCompressionRatio": 200,
            "zipBombMaxDepth": 200,
            "zipBombMaxPackageEntryDepth": 20,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "fallback",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "1546043479016",
            "metadataOnly": false,
            "maxBytesToKeep": 1048576,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          }
        ],
        "editPanel": {}
      },
      {
        "id": "fl_typeahead",
        "enableMediaTypeDetection": true,
        "maxParserDepth": 16,
        "parserStages": [
          {
            "type": "csv",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "9b6020b2-8ea9-4d1e-88d5-edc06a53aeca",
            "charset": "detect",
            "ignoreBOM": false,
            "autoDetect": true,
            "hasHeaders": true,
            "headers": [],
            "fillValue": "<FILL>",
            "trimWhitespace": true,
            "skipEmptyLines": true,
            "includeRowNumber": true,
            "commentHandling": "ignore",
            "maxRowLength": 10485760,
            "maxNumColumns": 1000,
            "maxColumnChars": 10485760,
            "columnHandling": "default",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          }
        ],
        "editPanel": {}
      },
      {
        "id": "git-csv-parser",
        "enableMediaTypeDetection": true,
        "maxParserDepth": 16,
        "parserStages": [
          {
            "type": "archive",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "d7c1e66a-a19f-4094-adb6-513adf9e3ff5",
            "alwaysDetect": true,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "csv",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "0ad5bc7a-5f92-4164-bac5-9da20d3ab2f5",
            "charset": "detect",
            "ignoreBOM": false,
            "autoDetect": true,
            "hasHeaders": false,
            "headers": [
              "name",
              "is_typeahead_b",
              "category_plp_url_s"
            ],
            "fillValue": "<FILL>",
            "trimWhitespace": true,
            "skipEmptyLines": true,
            "includeRowNumber": true,
            "commentHandling": "ignore",
            "maxRowLength": 10485760,
            "maxNumColumns": 1000,
            "maxColumnChars": 10485760,
            "columnHandling": "default",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "json",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "e3554c79-d10f-43ca-827e-ba699d36fc66",
            "splitArrays": true,
            "includePath": false,
            "mappings": [],
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "xml",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "5d96111d-ed84-4333-baac-76bc4f32676f",
            "rootPaths": [
              "/"
            ],
            "maxSize": 65536,
            "listHandling": "multivalued",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "html",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "0076f48d-010c-43fb-a86e-6c3abcece721",
            "charset": "detect",
            "mappings": [],
            "keepParent": true,
            "extractHtmlLinks": false,
            "extractBodyText": true,
            "metatagsPrefix": "",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "text",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "37e06aca-9a44-4675-af18-891e81a9c187",
            "charset": "detect",
            "ignoreBOM": false,
            "maxLength": 1048576,
            "maxLineLength": 1048576,
            "outputField": "body",
            "splitLines": false,
            "skipEmptyLines": false,
            "skipHeaderLines": 0,
            "trimWhitespace": false,
            "commentHandling": "include",
            "comment": "#",
            "commentField": "comment",
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "tika",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "cf5b5d3c-7cde-4bf6-a405-42644710d487",
            "includeImages": false,
            "flattenCompound": true,
            "addFailedDocs": false,
            "addOriginalContent": false,
            "contentEncoding": "binary",
            "returnXml": false,
            "keepOriginalStructure": false,
            "extractHtmlLinks": false,
            "extractOtherLinks": false,
            "excludeContentTypes": [],
            "zipBombCompressionRatio": 200,
            "zipBombMaxDepth": 200,
            "zipBombMaxPackageEntryDepth": 20,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          },
          {
            "type": "fallback",
            "enabled": true,
            "mediaTypes": [],
            "pathPatterns": [],
            "errorHandling": "mark",
            "id": "ca3057fd-2c7b-4ff5-b4a8-aaec6c702f71",
            "metadataOnly": false,
            "maxBytesToKeep": 1048576,
            "inheritMediaTypes": true,
            "outputFieldPrefix": ""
          }
        ]
      }
    ],
    "objectGroups": [
      {
        "id": "7f5ce8d8-a66d-4b90-8728-7e0ffd37f173",
        "name": "signals-fl_typeahead",
        "isSystem": true,
        "description": "Collection 'fl_typeahead' objects for signals support"
      },
      {
        "id": "f37f5807-7255-460b-98be-457f8183e4a5",
        "name": "signals-fl",
        "isSystem": true,
        "description": "Collection 'fl' objects for signals support"
      },
      {
        "id": "fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "name": "signals-fl-full-index",
        "isSystem": true,
        "description": "Collection 'fl-full-index' objects for signals support"
      }
    ],
    "links": [
      {
        "subject": "app:fl",
        "object": "group:_shared",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl-0Bai",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl-I5Kk",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl-aPWm",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl-fFp3",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "index-pipeline:fl-gGjF",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl-3J2z",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl-4t9N",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl-QGpm",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl-kEmK",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl",
        "object": "query-pipeline:fl-mVwi",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "index-pipeline:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "index-pipeline:fl-full-index-FlZf",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "index-pipeline:fl-full-index-IPW2",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "query-pipeline:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "query-pipeline:fl-full-index-eq0d",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl-full-index",
        "object": "query-pipeline:fl-full-index-j21U",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl_typeahead",
        "object": "index-pipeline:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "collection:fl_typeahead",
        "object": "query-pipeline:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:FLTypeahead-BS",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:FLTypeahead-BS",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fileupload-fl_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fileupload-fl_signals",
        "object": "collection:fl_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fileupload-fl_signals",
        "object": "spark:fl-fusion-signals-data-feeds-download-job",
        "linkType": "dependsOn",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db",
        "object": "index-pipeline:banners-products-index",
        "linkType": "dependsOn",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db-full",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db-full",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-db-full",
        "object": "index-pipeline:banners-products-index",
        "linkType": "dependsOn",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-git-typeahead-source",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "datasource:fl-git-typeahead-source",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "group:7f5ce8d8-a66d-4b90-8728-7e0ffd37f173",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "group:7f5ce8d8-a66d-4b90-8728-7e0ffd37f173",
        "object": "collection:fl_typeahead_signals",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:7f5ce8d8-a66d-4b90-8728-7e0ffd37f173",
        "object": "collection:fl_typeahead_signals_aggr",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "collection:fl_signals",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "collection:fl_signals_aggr",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "spark:fl_click_signals_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "spark:fl_head_tail",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "spark:fl_session_rollup",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "spark:fl_user_item_preferences_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:f37f5807-7255-460b-98be-457f8183e4a5",
        "object": "spark:fl_user_query_history_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "collection:fl-full-index_signals",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "collection:fl-full-index_signals_aggr",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "spark:fl-full-index_click_signals_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "spark:fl-full-index_head_tail",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "spark:fl-full-index_session_rollup",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "spark:fl-full-index_user_item_preferences_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "group:fc3e35a1-0287-48cd-85fb-ef0d9115ae72",
        "object": "spark:fl-full-index_user_query_history_aggregation",
        "linkType": "hasPart",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:_system",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:banners-products-signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl-default-rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl-full-index",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl-typeahead-index-pipeline-git-source",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_partial_update",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_typeahead_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:fl_typeahead_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-date.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-location.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-money.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-organization.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-percentage.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-person.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-ner-time.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-sent.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-pipeline:nlp-pipeline",
        "object": "blob:nlp/models/en-token.bin",
        "linkType": "dependsOn",
        "originator": "com.lucidworks.apollo.component.LinkExtractingUpdateStrategy"
      },
      {
        "subject": "index-profile:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl",
        "object": "index-pipeline:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-1ZyZ",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-1ZyZ",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-1ZyZ",
        "object": "index-pipeline:fl-fFp3",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-4Kl3",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-4Kl3",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-4Kl3",
        "object": "index-pipeline:fl-gGjF",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-FEOZ",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-FEOZ",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-FEOZ",
        "object": "index-pipeline:fl-0Bai",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-MIDD",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-MIDD",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-MIDD",
        "object": "index-pipeline:fl-I5Kk",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-d1Kr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-d1Kr",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-d1Kr",
        "object": "index-pipeline:fl-aPWm",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index",
        "object": "index-pipeline:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-Rl25",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-Rl25",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-Rl25",
        "object": "index-pipeline:fl-full-index-IPW2",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-jvyA",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-jvyA",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-full-index-jvyA",
        "object": "index-pipeline:fl-full-index-FlZf",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-update-ip",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-update-ip",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl-update-ip",
        "object": "index-pipeline:fl_partial_update",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_rules",
        "object": "index-pipeline:fl_rules",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals",
        "object": "collection:fl_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals",
        "object": "index-pipeline:fl_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals_aggr",
        "object": "collection:fl_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_signals_aggr",
        "object": "index-pipeline:fl_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead",
        "object": "index-pipeline:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals",
        "object": "collection:fl_typeahead_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals",
        "object": "index-pipeline:fl_typeahead_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals_aggr",
        "object": "collection:fl_typeahead_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "index-profile:fl_typeahead_signals_aggr",
        "object": "index-pipeline:fl_typeahead_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "parser:_system",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "parser:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "parser:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "parser:git-csv-parser",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:_system",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:auth_fl-rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl-full-index",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl-rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl-typeahead-ds",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_typeahead-grouped",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_typeahead_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:fl_typeahead_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-pipeline:related-items",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:DELETE_fl_typeahead_qp",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:DELETE_fl_typeahead_qp",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl",
        "object": "query-pipeline:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-3CHz",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-3CHz",
        "object": "query-pipeline:fl-mVwi",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-4JSC",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-4JSC",
        "object": "query-pipeline:fl-kEmK",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index",
        "object": "query-pipeline:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index-2o6z",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index-2o6z",
        "object": "query-pipeline:fl-full-index-eq0d",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index-h7Aq",
        "object": "collection:fl-full-index",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-full-index-h7Aq",
        "object": "query-pipeline:fl-full-index-j21U",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-g4KG",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-g4KG",
        "object": "query-pipeline:fl-QGpm",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-indexing-updates",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-indexing-updates",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-query-qp",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-query-qp",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-query-qp",
        "object": "query-pipeline:_system",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-rPYN",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-rPYN",
        "object": "query-pipeline:fl-4t9N",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-ta-pull-qp",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-ta-pull-qp",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-ta-pull-qp",
        "object": "query-pipeline:fl-typeahead-ds",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-v0cc",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl-v0cc",
        "object": "query-pipeline:fl-3J2z",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_qp",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_qp",
        "object": "collection:fl",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_rules",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_rules",
        "object": "query-pipeline:fl_rules",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals",
        "object": "collection:fl_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals",
        "object": "query-pipeline:fl_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals_aggr",
        "object": "collection:fl_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_signals_aggr",
        "object": "query-pipeline:fl_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead",
        "object": "query-pipeline:fl_typeahead-grouped",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_qp",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_qp",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_qp-1",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_qp-1",
        "object": "collection:fl_typeahead",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals",
        "object": "collection:fl_typeahead_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals",
        "object": "query-pipeline:fl_typeahead_signals",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals_aggr",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals_aggr",
        "object": "collection:fl_typeahead_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "query-profile:fl_typeahead_signals_aggr",
        "object": "query-pipeline:fl_typeahead_signals_aggr",
        "linkType": "relatesTo",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl-full-index-orchestration-job",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl-fusion-signals-data-feeds-download-job",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_click_signals_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_session_rollup",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_typeahead_click_signals_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_typeahead_head_tail",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_typeahead_session_rollup",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_typeahead_user_item_preferences_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_typeahead_user_query_history_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_user_item_preferences_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:fl_user_query_history_aggregation",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      },
      {
        "subject": "spark:monitor-fl-products-indexing",
        "object": "app:fl",
        "linkType": "inContextOf",
        "originator": "unspecified"
      }
    ],
    "jobs": [
      {
        "resource": "datasource:FLTypeahead-BS",
        "enabled": true,
        "triggers": [
          {
            "type": "job_completion",
            "enabled": false,
            "triggerType": "on_success",
            "otherJob": "spark:fl-typeahead-entries-extract",
            "type": "job_completion"
          }
        ],
        "default": false
      },
      {
        "resource": "datasource:fileupload-fl_signals",
        "enabled": true,
        "triggers": [
          {
            "type": "job_completion",
            "enabled": true,
            "triggerType": "on_success",
            "otherJob": "spark:fl-fusion-signals-data-feeds-download-job",
            "type": "job_completion"
          }
        ],
        "default": false
      },
      {
        "resource": "datasource:fl-db",
        "enabled": true,
        "triggers": [
          {
            "type": "cron",
            "enabled": true,
            "expression": "1 */5 * ? * *",
            "type": "cron"
          }
        ],
        "default": false
      },
      {
        "resource": "datasource:fl-git-typeahead-source",
        "enabled": true,
        "triggers": [
          {
            "type": "cron",
            "enabled": true,
            "expression": "0 */5 * ? * MON-SUN",
            "type": "cron"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-full-index_click_signals_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 15,
            "timeUnit": "minute",
            "startTime": "2020-05-05T21:34:03.968Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-full-index_head_tail",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2020-05-06T21:19:04.906Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-full-index_session_rollup",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 15,
            "timeUnit": "minute",
            "startTime": "2020-05-05T21:34:04.193Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-full-index_user_item_preferences_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2020-05-05T21:36:04.425Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-full-index_user_query_history_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2020-05-05T21:38:04.655Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl-fusion-signals-data-feeds-download-job",
        "enabled": true,
        "triggers": [
          {
            "type": "cron",
            "enabled": false,
            "expression": "0 0 6 ? * *",
            "type": "cron"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl_click_signals_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 15,
            "timeUnit": "minute",
            "startTime": "2019-04-25T14:35:20.716Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl_head_tail",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2019-04-26T14:20:22.085Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl_session_rollup",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 15,
            "timeUnit": "minute",
            "startTime": "2019-04-25T14:35:21.179Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl_user_item_preferences_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2019-04-25T14:37:21.492Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:fl_user_query_history_aggregation",
        "enabled": true,
        "triggers": [
          {
            "type": "interval",
            "enabled": true,
            "interval": 1,
            "timeUnit": "day",
            "startTime": "2019-04-25T14:39:21.784Z",
            "type": "interval"
          }
        ],
        "default": false
      },
      {
        "resource": "spark:monitor-fl-products-indexing",
        "enabled": true,
        "triggers": [
          {
            "type": "job_completion",
            "enabled": true,
            "triggerType": "on_success_or_failure",
            "otherJob": "datasource:fl-db",
            "type": "job_completion"
          }
        ],
        "default": false
      }
    ],
    "sparkJobs": [
      {
        "type": "custom_spark_job",
        "id": "fl-full-index-orchestration-job",
        "resourceName": "scripts/fl-fusion-scripts.jar",
        "sparkConfig": [
          {
            "key": "spark.executor.memory",
            "value": "2g"
          },
          {
            "key": "spark.driver.memory",
            "value": "2g"
          },
          {
            "key": "spark.logConf",
            "value": "true"
          },
          {
            "key": "spark.eventLog.enabled",
            "value": "true"
          },
          {
            "key": "spark.eventLog.compress",
            "value": "true"
          },
          {
            "key": "spark.scheduler.mode",
            "value": "FAIR"
          }
        ],
        "submitArgs": [],
        "javaOptions": [
          {
            "key": "FUSION_APPS",
            "value": "fl"
          },
          {
            "key": "FUSION_HOST",
            "value": "localhost"
          },
          {
            "key": "FUSION_PORT",
            "value": "8764"
          },
          {
            "key": "FUSION_AUTH_CODE",
            "value": "\"Basic YXBpYWRtaW46YXBvbGxvYWRtaW4xMjM=\""
          },
          {
            "key": "MAIN_DATASOURCE",
            "value": "{0}"
          },
          {
            "key": "FULL_INDEX_DATASOURCE",
            "value": "{0}-full"
          },
          {
            "key": "DATASOURCE_PREFIX",
            "value": "{0}-db"
          },
          {
            "key": "WARMUP_QUERIES_SIZE",
            "value": "60"
          },
          {
            "key": "WARMUP_QUERY_PIPELINE",
            "value": "banners-products-search"
          },
          {
            "key": "FETCH_WARMUP_QUERIES_PARAMS",
            "value": "rules=off&feature.signal=off"
          },
          {
            "key": "INDEX_TIMEOUT",
            "value": "60"
          },
          {
            "key": "INDEX_MONITOR_INTERVAL",
            "value": "1"
          },
          {
            "key": "INDEX_MONITOR_ATTEMPTS",
            "value": "100"
          },
          {
            "key": "ENV",
            "value": "dev"
          },
          {
            "key": "NUMBER_OF_OLD_COLLECTIONS_TO_RETAIN",
            "value": "5"
          },
          {
            "key": "ALERT_TO_TEAM",
            "value": "true"
          },
          {
            "key": "NUMBER_OF_THREADS",
            "value": "1"
          }
        ],
        "mainClass": "com.fl.search.fusion.index.IndexOrchester",
        "verboseReporting": true,
        "files": [],
        "pythonFiles": [],
        "deleteOnExit": true
      },
      {
        "type": "sql_template",
        "id": "fl-full-index_click_signals_aggregation",
        "inputCollection": "fl-full-index_signals",
        "outputCollection": "fl-full-index_signals_aggr",
        "sql": "WITH sigs_with_filters AS (\n   SELECT c.query as query,\n          c.doc_id,\n          q.filters_s as filters,\n          c.type,\n          c.ref_time,\n          c.count_i,\n          c.timestamp_tdt,\n          c.weight_d\n     FROM ${inputCollection} c\n LEFT JOIN (SELECT id, filters_s FROM ${inputCollection} WHERE type='response') q ON q.id = c.fusion_query_id\n    WHERE c.type IN (${signalTypes})\n ), signal_type_groups AS (\n     SELECT SUM(count_i) AS typed_aggr_count_i,\n            query,\n            doc_id,\n            type,\n            filters,\n            time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n       FROM sigs_with_filters\n   GROUP BY doc_id, query, filters, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          query AS query_s,\n          query AS query_t,\n          doc_id AS doc_id_s,\n          filters AS filters_s,\n          SPLIT(filters, ' \\\\$ ') AS filters_ss,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY query, doc_id, filters",
        "rollupSql": "SELECT query_s,\n          query_s as query_t,\n          doc_id_s,\n          filters_s,\n          first(aggr_type_s) AS aggr_type_s,\n          SPLIT(filters_s, ' \\\\$ ') AS filters_ss,\n          SUM(weight_d) AS weight_d,\n          SUM(aggr_count_i) AS aggr_count_i\n     FROM fl-full-index_signals_aggr\n GROUP BY query_s, doc_id_s, filters_s",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          },
          {
            "key": "optimizeOutput",
            "value": "4"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each query / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost documents at query time using the boosting stage."
      },
      {
        "type": "headTailAnalysis",
        "id": "fl-full-index_head_tail",
        "randomSeed": 1234,
        "trainingCollection": "fl-full-index_signals",
        "outputCollection": "fl-full-index_signals_aggr",
        "overwriteOutput": true,
        "trainingDataFilterQuery": "type:click OR type:response",
        "fieldToVectorize": "query",
        "trainingDataFrameConfigOptions": {},
        "analyzerConfigQuery": "{ \"analyzers\": [ { \"name\": \"StdTokLowerStem\",\"charFilters\": [ { \"type\": \"htmlstrip\" } ],\"tokenizer\": { \"type\": \"standard\" },\"filters\": [{ \"type\": \"lowercase\" },{ \"type\": \"englishminimalstem\" }] }],\"fields\": [{ \"regex\": \".+\", \"analyzer\": \"StdTokLowerStem\" } ]}",
        "countField": "count_i",
        "mainType": "click",
        "filterType": "response",
        "signalTypeField": "type",
        "minCountMain": 1,
        "minCountFilter": 20,
        "queryLenThreshold": 2,
        "userHead": -1.0,
        "userTail": -1.0,
        "topQ": [
          100.0,
          0.01
        ],
        "trafficPerc": [
          0.25,
          0.5,
          0.75
        ],
        "lastTraffic": [
          0.01
        ],
        "trafficCount": [
          5.0
        ],
        "overlapThreshold": 4,
        "lenScale": 6,
        "overlapNumBoost": 10.0,
        "headQueryCntBoost": 1.0,
        "tailRewrite": true,
        "dataFormat": "solr",
        "trainingDataSamplingFraction": 1.0,
        "stopwordsList": []
      },
      {
        "type": "sql_template",
        "id": "fl-full-index_session_rollup",
        "inputCollection": "fl-full-index_signals",
        "outputCollection": "fl-full-index_signals",
        "sql": "WITH session_agg AS (\n     SELECT COUNT(1) AS activity_count,\n            MIN(timestamp_tdt) AS start,\n            MAX(timestamp_tdt) AS end,\n            timediff(MAX(timestamp_tdt), MIN(timestamp_tdt), \"MINUTES\") AS duration,\n            'session' AS type,\n            first(user_id) AS user,\n            session_keywords(query) AS keywords,\n            session\n       FROM ${inputCollection}\n      WHERE timestamp_tdt IS NOT NULL\n        AND type != 'session'\n        AND session IS NOT NULL\n        AND session NOT IN (SELECT session FROM ${inputCollection} WHERE type = 'session' AND session IS NOT NULL)\n   GROUP BY session\n     HAVING timediff(current_timestamp(), MAX(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceLastActivity} OR timediff(current_timestamp(), MIN(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceSessionStart})\n SELECT activity_count, start, end, duration, type, user, keywords, session FROM session_agg",
        "parameters": [
          {
            "key": "elapsedSecsSinceLastActivity",
            "value": "360"
          },
          {
            "key": "elapsedSecsSinceSessionStart",
            "value": "3600"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": false,
        "outputRollup": false,
        "hiddenParameters": [
          {
            "key": "outputProjectedFieldsOnly",
            "value": "true"
          }
        ],
        "skipCheckEnabled": false,
        "notes": "Aggregate related user activity into a session signal containing activity count, duration, and keywords (based on user search terms). This job is used by the Fusion Insights application to show reports about user sessions. Use the 'elapsedSecsSinceLastActivity' and 'elapsedSecsSinceSessionStart' parameters to determine when a user session is considered to be complete."
      },
      {
        "type": "sql_template",
        "id": "fl-full-index_user_item_preferences_aggregation",
        "inputCollection": "fl-full-index_signals",
        "outputCollection": "fl-full-index_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           doc_id,\n           user_id,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY user_id, doc_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          doc_id AS doc_id_s,\n          user_id AS user_id_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY doc_id, user_id",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used as input to the ALS recommendation job."
      },
      {
        "type": "sql_template",
        "id": "fl-full-index_user_query_history_aggregation",
        "inputCollection": "fl-full-index_signals",
        "outputCollection": "fl-full-index_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           user_id,\n           query,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY query, user_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          user_id AS user_id_s,\n          query AS query_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY user_id, query",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / query combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost queries for a user based on their past queries."
      },
      {
        "type": "custom_spark_job",
        "id": "fl-fusion-signals-data-feeds-download-job",
        "resourceName": "scripts/fusion-signals-processing.py",
        "sparkConfig": [
          {
            "key": "spark.executor.memory",
            "value": "2g"
          },
          {
            "key": "spark.driver.memory",
            "value": "2g"
          },
          {
            "key": "spark.logConf",
            "value": "true"
          },
          {
            "key": "spark.eventLog.enabled",
            "value": "true"
          },
          {
            "key": "spark.eventLog.compress",
            "value": "true"
          },
          {
            "key": "spark.scheduler.mode",
            "value": "FAIR"
          }
        ],
        "submitArgs": [
          "download-latest-signals-feed",
          "fstprodomscus",
          "Iapws3vpi2603Nd29RNHoEKVfLMoF44F6O9tkUWjQnUUsO0x6QWA7E5dny2qUa/LCclQFmMyHpWDtAKXVE3aFA==",
          "datateam",
          "FLUS",
          "/tmp/",
          "True",
          "http://localhost:8764/api/apollo/apps/fl/blobs/analytics/signals_feed/{0}?resourceType=file",
          "Basic YWRtaW46cGFzc3dvcmQxMjM=",
          "datasource:fileupload-fl_signals"
        ],
        "javaOptions": [],
        "verboseReporting": true,
        "files": [],
        "pythonFiles": [],
        "deleteOnExit": true
      },
      {
        "type": "sql_template",
        "id": "fl_click_signals_aggregation",
        "inputCollection": "fl_signals",
        "outputCollection": "fl_signals_aggr",
        "sql": "WITH sigs_with_filters AS (\n   SELECT c.query as query,\n          c.doc_id,\n          q.filters_s as filters,\n          c.type,\n          c.ref_time,\n          c.count_i,\n          c.timestamp_tdt,\n          c.weight_d\n     FROM ${inputCollection} c\n LEFT JOIN (SELECT id, filters_s FROM ${inputCollection} WHERE type='response') q ON q.id = c.fusion_query_id\n    WHERE c.type IN (${signalTypes})\n ), signal_type_groups AS (\n     SELECT SUM(count_i) AS typed_aggr_count_i,\n            query,\n            doc_id,\n            type,\n            filters,\n            time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n       FROM sigs_with_filters\n   GROUP BY doc_id, query, filters, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          query AS query_s,\n          query AS query_t,\n          doc_id AS doc_id_s,\n          filters AS filters_s,\n          SPLIT(filters, ' \\\\$ ') AS filters_ss,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY query, doc_id, filters",
        "rollupSql": "SELECT query_s,\n          query_s as query_t,\n          doc_id_s,\n          filters_s,\n          first(aggr_type_s) AS aggr_type_s,\n          SPLIT(filters_s, ' \\\\$ ') AS filters_ss,\n          SUM(weight_d) AS weight_d,\n          SUM(aggr_count_i) AS aggr_count_i\n     FROM fl_signals_aggr\n GROUP BY query_s, doc_id_s, filters_s",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          },
          {
            "key": "optimizeOutput",
            "value": "4"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each query / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost documents at query time using the boosting stage."
      },
      {
        "type": "headTailAnalysis",
        "id": "fl_head_tail",
        "randomSeed": 1234,
        "trainingCollection": "fl_signals",
        "outputCollection": "fl_signals_aggr",
        "overwriteOutput": true,
        "trainingDataFilterQuery": "type:click OR type:response",
        "fieldToVectorize": "query",
        "trainingDataFrameConfigOptions": {},
        "analyzerConfigQuery": "{ \"analyzers\": [ { \"name\": \"StdTokLowerStem\",\"charFilters\": [ { \"type\": \"htmlstrip\" } ],\"tokenizer\": { \"type\": \"standard\" },\"filters\": [{ \"type\": \"lowercase\" },{ \"type\": \"englishminimalstem\" }] }],\"fields\": [{ \"regex\": \".+\", \"analyzer\": \"StdTokLowerStem\" } ]}",
        "countField": "count_i",
        "mainType": "click",
        "filterType": "response",
        "signalTypeField": "type",
        "minCountMain": 1,
        "minCountFilter": 20,
        "queryLenThreshold": 2,
        "userHead": -1.0,
        "userTail": -1.0,
        "topQ": [
          100.0,
          0.01
        ],
        "trafficPerc": [
          0.25,
          0.5,
          0.75
        ],
        "lastTraffic": [
          0.01
        ],
        "trafficCount": [
          5.0
        ],
        "overlapThreshold": 4,
        "lenScale": 6,
        "overlapNumBoost": 10.0,
        "headQueryCntBoost": 1.0,
        "tailRewrite": true,
        "dataFormat": "solr",
        "trainingDataSamplingFraction": 1.0,
        "stopwordsList": []
      },
      {
        "type": "sql_template",
        "id": "fl_session_rollup",
        "inputCollection": "fl_signals",
        "outputCollection": "fl_signals",
        "sql": "WITH session_agg AS (\n     SELECT COUNT(1) AS activity_count,\n            MIN(timestamp_tdt) AS start,\n            MAX(timestamp_tdt) AS end,\n            timediff(MAX(timestamp_tdt), MIN(timestamp_tdt), \"MINUTES\") AS duration,\n            'session' AS type,\n            first(user_id) AS user,\n            session_keywords(query) AS keywords,\n            session\n       FROM ${inputCollection}\n      WHERE timestamp_tdt IS NOT NULL\n        AND type != 'session'\n        AND session IS NOT NULL\n        AND session NOT IN (SELECT session FROM ${inputCollection} WHERE type = 'session' AND session IS NOT NULL)\n   GROUP BY session\n     HAVING timediff(current_timestamp(), MAX(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceLastActivity} OR timediff(current_timestamp(), MIN(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceSessionStart})\n SELECT activity_count, start, end, duration, type, user, keywords, session FROM session_agg",
        "parameters": [
          {
            "key": "elapsedSecsSinceLastActivity",
            "value": "360"
          },
          {
            "key": "elapsedSecsSinceSessionStart",
            "value": "3600"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": false,
        "outputRollup": false,
        "hiddenParameters": [
          {
            "key": "outputProjectedFieldsOnly",
            "value": "true"
          }
        ],
        "skipCheckEnabled": false,
        "notes": "Aggregate related user activity into a session signal containing activity count, duration, and keywords (based on user search terms). This job is used by the Fusion Insights application to show reports about user sessions. Use the 'elapsedSecsSinceLastActivity' and 'elapsedSecsSinceSessionStart' parameters to determine when a user session is considered to be complete."
      },
      {
        "type": "sql_template",
        "id": "fl_typeahead_click_signals_aggregation",
        "inputCollection": "fl_typeahead_signals",
        "outputCollection": "fl_typeahead_signals_aggr",
        "sql": "WITH sigs_with_filters AS (\n   SELECT c.query as query,\n          c.doc_id,\n          q.filters_s as filters,\n          c.type,\n          c.ref_time,\n          c.count_i,\n          c.timestamp_tdt,\n          c.weight_d\n     FROM ${inputCollection} c\n LEFT JOIN (SELECT id, filters_s FROM ${inputCollection} WHERE type='response') q ON q.id = c.fusion_query_id\n    WHERE c.type IN (${signalTypes})\n ), signal_type_groups AS (\n     SELECT SUM(count_i) AS typed_aggr_count_i,\n            query,\n            doc_id,\n            type,\n            filters,\n            time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n       FROM sigs_with_filters\n   GROUP BY doc_id, query, filters, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          query AS query_s,\n          query AS query_t,\n          doc_id AS doc_id_s,\n          filters AS filters_s,\n          SPLIT(filters, ' \\\\$ ') AS filters_ss,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY query, doc_id, filters",
        "rollupSql": "SELECT query_s,\n          query_s as query_t,\n          doc_id_s,\n          filters_s,\n          first(aggr_type_s) AS aggr_type_s,\n          SPLIT(filters_s, ' \\\\$ ') AS filters_ss,\n          SUM(weight_d) AS weight_d,\n          SUM(aggr_count_i) AS aggr_count_i\n     FROM fl_typeahead_signals_aggr\n GROUP BY query_s, doc_id_s, filters_s",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          },
          {
            "key": "optimizeOutput",
            "value": "4"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each query / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost documents at query time using the boosting stage."
      },
      {
        "type": "headTailAnalysis",
        "id": "fl_typeahead_head_tail",
        "randomSeed": 1234,
        "trainingCollection": "fl_typeahead_signals",
        "outputCollection": "fl_typeahead_signals_aggr",
        "overwriteOutput": true,
        "trainingDataFilterQuery": "type:click OR type:response",
        "fieldToVectorize": "query",
        "trainingDataFrameConfigOptions": {},
        "analyzerConfigQuery": "{ \"analyzers\": [ { \"name\": \"StdTokLowerStem\",\"charFilters\": [ { \"type\": \"htmlstrip\" } ],\"tokenizer\": { \"type\": \"standard\" },\"filters\": [{ \"type\": \"lowercase\" },{ \"type\": \"englishminimalstem\" }] }],\"fields\": [{ \"regex\": \".+\", \"analyzer\": \"StdTokLowerStem\" } ]}",
        "countField": "count_i",
        "mainType": "click",
        "filterType": "response",
        "signalTypeField": "type",
        "minCountMain": 1,
        "minCountFilter": 20,
        "queryLenThreshold": 2,
        "userHead": -1.0,
        "userTail": -1.0,
        "topQ": [
          100.0,
          0.01
        ],
        "trafficPerc": [
          0.25,
          0.5,
          0.75
        ],
        "lastTraffic": [
          0.01
        ],
        "trafficCount": [
          5.0
        ],
        "overlapThreshold": 4,
        "lenScale": 6,
        "overlapNumBoost": 10.0,
        "headQueryCntBoost": 1.0,
        "tailRewrite": true,
        "dataFormat": "solr",
        "trainingDataSamplingFraction": 1.0,
        "stopwordsList": []
      },
      {
        "type": "sql_template",
        "id": "fl_typeahead_session_rollup",
        "inputCollection": "fl_typeahead_signals",
        "outputCollection": "fl_typeahead_signals",
        "sql": "WITH session_agg AS (\n     SELECT COUNT(1) AS activity_count,\n            MIN(timestamp_tdt) AS start,\n            MAX(timestamp_tdt) AS end,\n            timediff(MAX(timestamp_tdt), MIN(timestamp_tdt), \"MINUTES\") AS duration,\n            'session' AS type,\n            first(user_id) AS user,\n            session_keywords(query) AS keywords,\n            session\n       FROM ${inputCollection}\n      WHERE timestamp_tdt IS NOT NULL\n        AND type != 'session'\n        AND session IS NOT NULL\n        AND session NOT IN (SELECT session FROM ${inputCollection} WHERE type = 'session' AND session IS NOT NULL)\n   GROUP BY session\n     HAVING timediff(current_timestamp(), MAX(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceLastActivity} OR timediff(current_timestamp(), MIN(timestamp_tdt), \"SECONDS\") >= ${elapsedSecsSinceSessionStart})\n SELECT activity_count, start, end, duration, type, user, keywords, session FROM session_agg",
        "parameters": [
          {
            "key": "elapsedSecsSinceLastActivity",
            "value": "360"
          },
          {
            "key": "elapsedSecsSinceSessionStart",
            "value": "3600"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": false,
        "outputRollup": false,
        "hiddenParameters": [
          {
            "key": "outputProjectedFieldsOnly",
            "value": "true"
          }
        ],
        "skipCheckEnabled": false,
        "notes": "Aggregate related user activity into a session signal containing activity count, duration, and keywords (based on user search terms). This job is used by the Fusion Insights application to show reports about user sessions. Use the 'elapsedSecsSinceLastActivity' and 'elapsedSecsSinceSessionStart' parameters to determine when a user session is considered to be complete."
      },
      {
        "type": "sql_template",
        "id": "fl_typeahead_user_item_preferences_aggregation",
        "inputCollection": "fl_typeahead_signals",
        "outputCollection": "fl_typeahead_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           doc_id,\n           user_id,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY user_id, doc_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          doc_id AS doc_id_s,\n          user_id AS user_id_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY doc_id, user_id",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used as input to the ALS recommendation job."
      },
      {
        "type": "sql_template",
        "id": "fl_typeahead_user_query_history_aggregation",
        "inputCollection": "fl_typeahead_signals",
        "outputCollection": "fl_typeahead_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           user_id,\n           query,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY query, user_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          user_id AS user_id_s,\n          query AS query_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY user_id, query",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / query combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost queries for a user based on their past queries."
      },
      {
        "type": "sql_template",
        "id": "fl_user_item_preferences_aggregation",
        "inputCollection": "fl_signals",
        "outputCollection": "fl_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           doc_id,\n           user_id,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY user_id, doc_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          doc_id AS doc_id_s,\n          user_id AS user_id_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY doc_id, user_id",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / item combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used as input to the ALS recommendation job."
      },
      {
        "type": "sql_template",
        "id": "fl_user_query_history_aggregation",
        "inputCollection": "fl_signals",
        "outputCollection": "fl_signals_aggr",
        "sql": "WITH signal_type_groups AS (\n    SELECT SUM(count_i) AS typed_aggr_count_i,\n           user_id,\n           query,\n           type,\n           time_decay(count_i, timestamp_tdt, \"30 days\", ref_time, weight_d) AS typed_weight_d\n      FROM ${inputCollection}\n     WHERE type IN (${signalTypes})\n  GROUP BY query, user_id, type\n ) SELECT SUM(typed_aggr_count_i) AS aggr_count_i,\n          user_id AS user_id_s,\n          query AS query_s,\n          weighted_sum(typed_weight_d, type, '${signalTypeWeights}') AS weight_d\n     FROM signal_type_groups\n GROUP BY user_id, query",
        "parameters": [
          {
            "key": "signalTypeWeights",
            "value": "click:1.0,cart:10.0,purchase:25.0"
          }
        ],
        "selectQuery": "*:*",
        "sourceRemove": false,
        "sourceCatchup": true,
        "outputRollup": true,
        "hiddenParameters": [
          {
            "key": "signalTypes",
            "value": "_regex/signalTypeWeights/([\\w\\-\\.]*):([\\d\\.\\-]*)(,|$)/'$1'$3/g"
          }
        ],
        "skipCheckEnabled": true,
        "notes": "Computes an aggregated weight for each user / query combination found in the signals collection. The weight for each group is computed using an exponential time-decay on signal count (30 day half-life) and a weighted sum based on the signal type. Use the 'signalTypeWeights' parameter to set the correct signal types and weights for your dataset. The results of this job can be used to boost queries for a user based on their past queries."
      },
      {
        "type": "custom_spark_job",
        "id": "monitor-fl-products-indexing",
        "resourceName": "scripts/fusion-job-status-processor.py",
        "sparkConfig": [
          {
            "key": "spark.executor.memory",
            "value": "2g"
          },
          {
            "key": "spark.driver.memory",
            "value": "2g"
          },
          {
            "key": "spark.logConf",
            "value": "false"
          },
          {
            "key": "spark.eventLog.enabled",
            "value": "false"
          },
          {
            "key": "spark.eventLog.compress",
            "value": "false"
          },
          {
            "key": "spark.scheduler.mode",
            "value": "FAIR"
          }
        ],
        "submitArgs": [
          "monitor-jobs",
          "fusion-alerts@footlocker.com",
          "16c6acf8.footlocker.onmicrosoft.com@amer.teams.ms",
          "Basic YWRtaW46cGFzc3dvcmQxMjM=",
          "datasource:fl-db"
        ],
        "javaOptions": [],
        "verboseReporting": true,
        "files": [],
        "pythonFiles": [],
        "deleteOnExit": true
      }
    ],
    "blobs": [
      {
        "id": "nlp/models/en-ner-date.bin",
        "path": "/nlp/models/en-ner-date.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-date.bin",
        "contentType": "application/octet-stream",
        "size": 5030307,
        "modifiedTime": "2019-06-26T20:21:44.560Z",
        "version": 1637435839154749440,
        "md5": "4bf8335b9db6ced81a5f35f1c04c187d",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-location.bin",
        "path": "/nlp/models/en-ner-location.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-location.bin",
        "contentType": "application/octet-stream",
        "size": 5110658,
        "modifiedTime": "2019-06-26T20:21:43.921Z",
        "version": 1637435838484709376,
        "md5": "0e67e6ad484406c125faead56b5c225e",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-money.bin",
        "path": "/nlp/models/en-ner-money.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-money.bin",
        "contentType": "application/octet-stream",
        "size": 4806234,
        "modifiedTime": "2019-06-26T20:21:45.212Z",
        "version": 1637435839838420992,
        "md5": "af6fa575ace9f9ad81eb7ba21ff0b421",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-organization.bin",
        "path": "/nlp/models/en-ner-organization.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-organization.bin",
        "contentType": "application/octet-stream",
        "size": 5297172,
        "modifiedTime": "2019-06-26T20:21:46.254Z",
        "version": 1637435840932085760,
        "md5": "8042a4164d73879abcf2a53c91bd247a",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-percentage.bin",
        "path": "/nlp/models/en-ner-percentage.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-percentage.bin",
        "contentType": "application/octet-stream",
        "size": 4728645,
        "modifiedTime": "2019-06-26T20:21:46.822Z",
        "version": 1637435841527676928,
        "md5": "b3f1b2cba4c28efbe6e0c9ccca3c9a23",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-person.bin",
        "path": "/nlp/models/en-ner-person.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-person.bin",
        "contentType": "application/octet-stream",
        "size": 5207953,
        "modifiedTime": "2019-06-26T20:21:47.419Z",
        "version": 1637435842153676800,
        "md5": "909b9017a13b2d69ccdca4cf91a9639c",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-ner-time.bin",
        "path": "/nlp/models/en-ner-time.bin",
        "dir": "/nlp/models",
        "filename": "en-ner-time.bin",
        "contentType": "application/octet-stream",
        "size": 4724357,
        "modifiedTime": "2019-06-26T20:21:48.006Z",
        "version": 1637435842768142336,
        "md5": "692f8074bfa60d21afe67cef5fa2e2a7",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-sent.bin",
        "path": "/nlp/models/en-sent.bin",
        "dir": "/nlp/models",
        "filename": "en-sent.bin",
        "contentType": "application/octet-stream",
        "size": 98533,
        "modifiedTime": "2019-06-26T20:21:42.840Z",
        "version": 1637435837377413120,
        "md5": "3822c5f82cb4ba139284631d2f6b7fde",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      },
      {
        "id": "nlp/models/en-token.bin",
        "path": "/nlp/models/en-token.bin",
        "dir": "/nlp/models",
        "filename": "en-token.bin",
        "contentType": "application/octet-stream",
        "size": 439890,
        "modifiedTime": "2019-06-26T20:21:43.177Z",
        "version": 1637435837705617408,
        "md5": "f38628ea25fc246e99fc5e93f9bb5497",
        "metadata": {
          "resourceType": "model:open-nlp"
        }
      }
    ],
    "fusionApps": [
      {
        "id": "fl",
        "name": "fl",
        "description": "Version: 1.0.0.518 \n Imported at 06/23/2020 04:08:44 PM CDT \n Version: 1.0.200  Imported at 09/19/2019 09:24:58 AM CDT  Fusion App for footlocker.com CDT CDT",
        "dataUri": "/admin/App-Tile-09-460x160.png",
        "properties": {
          "previousCollectionId": "fl",
          "tileColor": "apps-darkblue",
          "headerImageName": "headerImage9"
        }
      }
    ],
    "dataSources": [
      {
        "id": "FLTypeahead-BS",
        "created": "2018-12-27T15:23:41.169Z",
        "modified": "2018-12-27T15:23:41.169Z",
        "connector": "lucid.fileupload",
        "type": "fileupload",
        "pipeline": "fl_typeahead",
        "parserId": "fl_typeahead",
        "properties": {
          "mediaType": "text/csv",
          "collection": "fl_typeahead",
          "fileId": "fl_typeahead.csv"
        }
      },
      {
        "id": "fileupload-fl_signals",
        "created": "2019-03-28T22:37:17.727Z",
        "modified": "2019-03-28T22:37:17.727Z",
        "connector": "lucid.fileupload",
        "type": "fileupload",
        "pipeline": "banners-products-signals",
        "parserId": "fl",
        "properties": {
          "mediaType": "text/tab-separated-values",
          "collection": "fl_signals",
          "fileId": "analytics/signals_feed/flus_fusion_signals.tsv"
        }
      },
      {
        "id": "fl-db",
        "created": "2018-12-15T04:39:49.270Z",
        "modified": "2018-12-15T04:39:49.270Z",
        "connector": "lucid.jdbc",
        "type": "jdbc",
        "description": "DO NOT USE THIS DATASOURCE FOR FULL INDEX, USE <SITE_ID>-FULL-INDEX COLLECTION INSTEAD",
        "pipeline": "banners-products-index",
        "properties": {
          "commit_on_finish": true,
          "delta_sql_query": "SELECT distinct($) as 'Product_Web_Key' FROM fusion.vw_product_catalog WHERE Banner='Footlocker' AND Delta_Timestamp>=$",
          "collection": "fl",
          "primary_key": "Product_Web_Key",
          "url": "jdbc:sqlserver://wausql08cb:1433;database=Hybris_Staging",
          "convert_type": true,
          "initial_mapping": {
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "skip": false,
            "id": "FromMap",
            "type": "field-mapping"
          },
          "password": "${secret.dataSources.fl-db.password}",
          "driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
          "verify_access": false,
          "fetch_size": 1000,
          "delta_import_query": "SELECT Product_Web_Key, Brand, Gender, Product_Category_Hrch_LVL2_Name as Product_Type, Product_Category_Hrch_LVL3_Name as Product_Style_Type, (Product_Category_Hrch_LVL3_Name + ',' + Product_Category_Hrch_LVL4_Name + ',' + Product_Category_Hrch_LVL5_Name) as Product_Sub_Styles, Product_Category_Hrch_LVL4_Name as Product_Style_L4, Sport_Name, Available_Inventory, Style_Description, Model_Description, Discount_Percent, Model_Number, Model_Name, Style_Original_Price, Style_Sale_Price, Size_Original_Price, Size_Sale_Price, Product_Number, SKU, Supplier_SKU as Vendor_Product_Id, Style_Variants, Product_Size, Style_Color, Primary_Color, Secondary_Color, Style_Keyword, Model_Keyword, League_Name, Team_Name, Player_Name, New_Arrival_Date, Free_Shipping, Width, MAP_Enabled, Launch_Product, Launch_Date, Size_Available_In_Store, Top_Sales_Amount, PDP_Activation_Date, (Brand_Code + ',' + Gender_Code + ',' + Product_Category_Hrch_LVL2_Code + ',' + Product_Category_Hrch_LVL3_Code + ',' + Product_Category_Hrch_LVL4_Code + ',' + Product_Category_Hrch_LVL5_Code + ',' + Sport_Name_Code) as 'Category_Codes', Brand_Code, Gender_Code, (CASE WHEN Product_Category_Hrch_LVL1_Code='' THEN  100001 ELSE Product_Category_Hrch_LVL1_Code END) as 'Product_Category_Hrch_LVL1_Code', Product_Category_Hrch_LVL2_Code, Product_Category_Hrch_LVL3_Code, Product_Category_Hrch_LVL4_Code, Product_Category_Hrch_LVL5_Code, Sport_Name_Code, Delta_Flag, Banner, Delta_Timestamp FROM fusion.vw_product_catalog WHERE Banner='Footlocker' AND Delta_Timestamp >= $",
          "clean_in_full_import_mode": false,
          "max_docs": -1,
          "sql_select_statement": "SELECT TOP 1 1 FROM [fusion].vw_product_catalog WHERE Banner='Footlocker'",
          "username": "x003169"
        }
      },
      {
        "id": "fl-db-full",
        "created": "2020-02-28T21:59:16.610Z",
        "modified": "2020-02-28T21:59:16.610Z",
        "connector": "lucid.jdbc",
        "type": "jdbc",
        "description": "Datasource for full indexing",
        "pipeline": "banners-products-index",
        "properties": {
          "commit_on_finish": true,
          "delta_sql_query": "SELECT distinct($) as 'Product_Web_Key' FROM fusion.vw_product_catalog WHERE Banner='Footlocker' AND Delta_Flag != 0 AND Delta_Timestamp>=$",
          "collection": "fl-full-index",
          "primary_key": "Product_Web_Key",
          "url": "jdbc:sqlserver://wausql08cb:1433;database=Hybris_Staging",
          "convert_type": true,
          "initial_mapping": {
            "mappings": [],
            "reservedFieldsMappingAllowed": false,
            "skip": false,
            "id": "FromMap",
            "type": "field-mapping"
          },
          "password": "${secret.dataSources.fl-db-full.password}",
          "driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
          "verify_access": true,
          "fetch_size": 2000,
          "delta_import_query": "SELECT Product_Web_Key, Brand, Gender, Product_Category_Hrch_LVL2_Name as Product_Type, Product_Category_Hrch_LVL3_Name as Product_Style_Type, (Product_Category_Hrch_LVL3_Name + ',' + Product_Category_Hrch_LVL4_Name + ',' + Product_Category_Hrch_LVL5_Name) as Product_Sub_Styles, Product_Category_Hrch_LVL4_Name as Product_Style_L4, Sport_Name, Available_Inventory, Style_Description, Model_Description, Discount_Percent, Model_Number, Model_Name, Style_Original_Price, Style_Sale_Price, Size_Original_Price, Size_Sale_Price, Product_Number, SKU,Supplier_SKU as Vendor_Product_Id, Style_Variants, Product_Size, Style_Color, Primary_Color, Secondary_Color, Style_Keyword, Model_Keyword, League_Name, Team_Name, Player_Name, New_Arrival_Date, Free_Shipping, Width, MAP_Enabled, Launch_Product, Launch_Date, Size_Available_In_Store, Top_Sales_Amount, PDP_Activation_Date, (Brand_Code + ',' + Gender_Code + ',' + Product_Category_Hrch_LVL2_Code + ',' + Product_Category_Hrch_LVL3_Code + ',' + Product_Category_Hrch_LVL4_Code + ',' + Product_Category_Hrch_LVL5_Code + ',' + Sport_Name_Code) as 'Category_Codes', Brand_Code, Gender_Code, (CASE WHEN Product_Category_Hrch_LVL1_Code='' THEN  100001 ELSE Product_Category_Hrch_LVL1_Code END) as 'Product_Category_Hrch_LVL1_Code', Product_Category_Hrch_LVL2_Code, Product_Category_Hrch_LVL3_Code, Product_Category_Hrch_LVL4_Code, Product_Category_Hrch_LVL5_Code, Sport_Name_Code, Delta_Flag, Banner, Delta_Timestamp FROM fusion.vw_product_catalog WHERE Banner='Footlocker' AND Delta_Flag != 0 AND Delta_Timestamp >= $",
          "clean_in_full_import_mode": true,
          "max_docs": -1,
          "sql_select_statement": "SELECT Product_Web_Key, Brand, Gender, Product_Category_Hrch_LVL2_Name as Product_Type, Product_Category_Hrch_LVL3_Name as Product_Style_Type, (Product_Category_Hrch_LVL3_Name + ',' + Product_Category_Hrch_LVL4_Name + ',' + Product_Category_Hrch_LVL5_Name) as Product_Sub_Styles, Product_Category_Hrch_LVL4_Name as Product_Style_L4, Sport_Name, Available_Inventory, Style_Description, Model_Description, Discount_Percent, Model_Number, Model_Name, Style_Original_Price, Style_Sale_Price, Size_Original_Price, Size_Sale_Price, Product_Number, SKU, Supplier_SKU as Vendor_Product_Id, Style_Variants, Product_Size, Style_Color, Primary_Color, Secondary_Color, Style_Keyword, Model_Keyword, League_Name, Team_Name, Player_Name, New_Arrival_Date, Free_Shipping, Width, MAP_Enabled, Launch_Product, Launch_Date, Size_Available_In_Store, Top_Sales_Amount, PDP_Activation_Date, (Brand_Code + ',' + Gender_Code + ',' + Product_Category_Hrch_LVL2_Code + ',' + Product_Category_Hrch_LVL3_Code + ',' + Product_Category_Hrch_LVL4_Code + ',' + Product_Category_Hrch_LVL5_Code + ',' + Sport_Name_Code) as 'Category_Codes', Brand_Code, Gender_Code, (CASE WHEN Product_Category_Hrch_LVL1_Code='' THEN  100001 ELSE Product_Category_Hrch_LVL1_Code END) as 'Product_Category_Hrch_LVL1_Code', Product_Category_Hrch_LVL2_Code, Product_Category_Hrch_LVL3_Code, Product_Category_Hrch_LVL4_Code, Product_Category_Hrch_LVL5_Code, Sport_Name_Code, Delta_Flag, Banner, Delta_Timestamp FROM fusion.vw_product_catalog WHERE Banner='Footlocker'  AND Delta_Flag !=3 And Available_Inventory='TRUE'",
          "username": "x003169"
        }
      },
      {
        "id": "fl-git-typeahead-source",
        "created": "2019-11-14T03:05:25.894Z",
        "modified": "2019-11-14T03:05:25.894Z",
        "connector": "lucid.web",
        "type": "web",
        "pipeline": "banners-git-source-typeahead-index",
        "parserId": "git-csv-parser",
        "properties": {
          "refreshOlderThan": -1,
          "f.appendTrailingSlashToLinks": false,
          "refreshErrors": false,
          "restrictToTreeIgnoredHostPrefixes": [
            "www."
          ],
          "dedupeSaveSignature": false,
          "crawlDBType": "in-memory",
          "f.firefoxHeadlessBrowser": true,
          "f.discardLinkURLQueries": false,
          "fetchDelayMS": 0,
          "f.respectMetaEquivRedirects": false,
          "refreshAll": true,
          "f.defaultMIMEType": "application/octet-stream",
          "f.extraLoadTimeMs": 250,
          "f.jsPageLoadTimeout": 20000,
          "restrictToTreeAllowSubdomains": false,
          "f.jsScriptTimeout": 20000,
          "f.requestCounterMinWaitMs": 5000,
          "maxItems": -1,
          "f.jsAjaxTimeout": 20000,
          "trackEmbeddedIDs": false,
          "dedupe": false,
          "f.scrapeLinksBeforeFiltering": false,
          "f.allowAllCertificates": false,
          "collection": "fl_typeahead",
          "forceRefresh": false,
          "delete404": true,
          "f.obeyRobots": true,
          "parserRetryCount": 0,
          "f.quitTimeoutMs": 5000,
          "f.index_items_discarded": false,
          "fetchDelayMSPerHost": true,
          "fetchThreads": 5,
          "indexCrawlDBToSolr": false,
          "f.requestRetryCount": 0,
          "f.jsEnabledAuth": false,
          "restrictToTree": false,
          "retainOutlinks": false,
          "f.defaultCharSet": "UTF-8",
          "f.useIpAddressForSslConnections": false,
          "f.useRequestCounter": true,
          "emitThreads": 5,
          "f.headlessBrowser": true,
          "f.useFirefox": false,
          "f.canonicalTagsRedirectLimit": 4,
          "diagnosticMode": false,
          "f.obeyCharSet": true,
          "f.requestCounterMaxWaitMs": 20000,
          "f.followCanonicalTags": false,
          "delete": true,
          "initial_mapping": {
            "mappings": [
              {
                "source": "charSet",
                "operation": "move",
                "target": "charSet_s"
              },
              {
                "source": "fetchedDate",
                "operation": "move",
                "target": "fetchedDate_dt"
              },
              {
                "source": "lastModified",
                "operation": "move",
                "target": "lastModified_dt"
              },
              {
                "source": "signature",
                "operation": "move",
                "target": "dedupeSignature_s"
              },
              {
                "source": "contentSignature",
                "operation": "move",
                "target": "signature_s"
              },
              {
                "source": "length",
                "operation": "move",
                "target": "length_l"
              },
              {
                "source": "mimeType",
                "operation": "move",
                "target": "mimeType_s"
              },
              {
                "source": "parent",
                "operation": "move",
                "target": "parent_s"
              },
              {
                "source": "owner",
                "operation": "move",
                "target": "owner_s"
              },
              {
                "source": "group",
                "operation": "move",
                "target": "group_s"
              }
            ],
            "reservedFieldsMappingAllowed": false,
            "skip": false,
            "id": "FromMap",
            "type": "field-mapping"
          },
          "f.extraPageLoadDeltaChars": 0,
          "restrictToTreeUseHostAndPath": false,
          "sitemap_incremental_crawling": false,
          "f.screenshotFullscreen": false,
          "f.filteringRootTags": [
            "body",
            "head"
          ],
          "startLinks": [
            "http://waustash01:7990/projects/DCT/repos/dct-typeahead-files/raw/fl-typeaheadsearch.csv?at=refs%2Fheads%2Fmaster"
          ],
          "failFastOnStartLinkFailure": true,
          "f.timeoutMS": 10000,
          "includeExtensions": [],
          "f.discardLinkURLAnchors": true,
          "chunkSize": 1,
          "f.simulateMobile": false,
          "f.obeyRobotsDelay": true,
          "f.useHighPerfJsEval": false,
          "deleteErrorsAfter": -1,
          "f.userAgentName": "Lucidworks-Anda/2.0",
          "retryEmit": true,
          "f.crawlJS": false,
          "depth": -1,
          "f.cookieSpec": "browser-compatibility",
          "f.maxSizeBytes": -1,
          "refreshStartLinks": false,
          "aliasExpiration": 1,
          "f.takeScreenshot": false
        }
      }
    ]
  },
  "properties": [
    {
      "id": "secret.dataSources.fl-db-full.password",
      "schema": {
        "type": "string",
        "title": "secret.dataSources.fl-db-full.password",
        "hints": [
          "secret"
        ]
      }
    },
    {
      "id": "secret.dataSources.fl-db.password",
      "schema": {
        "type": "string",
        "title": "secret.dataSources.fl-db.password",
        "hints": [
          "secret"
        ]
      }
    }
  ],
  "metadata": {
    "formatVersion": "1",
    "exportedBy": "4ac6551e-70d7-442d-864e-a0ed382d5d9d",
    "exportedDate": "2020-07-20T13:59:25.878Z",
    "fusionVersion": "4.1.1",
    "fusionGuid": "630982a4-7807-4686-81d1-a0f89fcc9463"
  }
}
